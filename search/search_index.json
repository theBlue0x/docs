{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"api/","text":"Blue0x API Documentation Description The Blue0x API interacts with Blue0x nodes using HTTP requests to port 2022. Most HTTP requests can use either the GET or POST methods, but some API calls accept only the POST method for security reasons. Responses are returned as JSON objects. Each API call is documented below, with definitions given for HTTP request parameters and JSON response fields, followed by an example: The JSON response fields are each followed by one of s for string, a for array, o for object, N for number or b for boolean. In the examples, the Blue0x node is represented as localhost and requests and responses are formatted for easy reading; line breaks and spaces are not actually used except in some parameter values. All requests are in URL format which implies the HTTP GET method. When GET is allowed, the URL can be entered into a browser URL field but proper URL encoding is usually required (e.g., spaces in a parameter value must be replaced by + or %20 ). Otherwise, the URL should be used as a guide to preparing an HTTP POST request using cURL, for example. All API calls can be viewed and tested at https://localhost:2022/test while a local BLX node is running. For specific API calls, use https://localhost:2022/test?requestType= specificRequestType . This document is adapted for Blue0x from the NXT API Documentation . Table of Contents General Notes Genesis Block Flexible Account IDs Quantity Units BLX, NQT and QNT Creating Unsigned Transactions Escrow Operations Prunable Data Properties Files Admin Password Roaming and Light Client Modes Create Transaction Create Transaction Request Create Transaction Response Account Operations Delete Account Property Get Account Get Account Block Count Get Account Block Ids Get Account Blocks Get Account Id Get Account Ledger Get Account Ledger Entry Get Account Lessors Get Account Properties Get Account Public Key Get Balance Get Blockchain Transactions Get Guaranteed Balance Get Unconfirmed Transaction Ids Get Unconfirmed Transactions Search Accounts Send Money Send BLX Set Account Info Set Account Property Start Funding Monitor Stop Funding Monitor Account Control Operations Get All Phasing Only Controls Get Phasing Only Control Set Phasing Only Control Alias Operations Buy / Sell Alias Buy Alias Sell Alias Set Alias Delete Alias Get Alias Get Alias Count Get Aliases Get Aliases Like Arbitrary Message System Operations Decrypt From Download Prunable Message Encrypt To Get All Prunable Messages Get Prunable Message Get Prunable Messages Get Shared Key Read Message Send Message Verify Prunable Message Asset Exchange Operations Cancel Order Cancel Ask Order Cancel Bid Order Delete Asset Shares Dividend Payment Get Account Asset Count Get Account Assets Get Account Current Order Ids Get Account Current Ask Order Ids Get Account Current Bid Order Ids Get Account Current Orders Get Account Current Ask Orders Get Account Current Bid Orders Get All Assets Get All Open Orders Get All Open Ask Orders Get All Open Bid Orders Get All Trades Get Asset Get Asset Account Count Get Asset Accounts Get Asset Deletes Get Asset Dividends Get Asset Ids Get Asset Transfers Get Expected Asset Transfers Get Assets Get Assets By Issuer Get Expected Asset Deletes Get Order Get Ask Order Get Bid Order Get Order Ids Get Ask Order Ids Get Bid Order Ids Get Orders Get Ask Orders Get Bid Orders Get Expected Ask Orders Get Expected Bid Orders Get Expected Order Cancellations Get Last Trades Get Order Trades Get Trades Issue Asset Place Order Place Ask Order Place Bid Order Search Assets Transfer Asset Block Operations Get Block Get Block Id Get Blocks Get EC Block Digital Goods Store Operations DGS Delisting DGS Delivery DGS Feedback DGS Listing DGS Price Change DGS Purchase DGS Quantity Change DGS Refund Get DGS Expired Purchases Get DGS Good Get DGS Goods Get DGS Goods Count Get DGS Goods Purchase Count Get DGS Goods Purchases Get DGS Pending Purchases Get DGS Purchase Get DGS Purchase Count Get DGS Purchases Get DGS Tag Count Get DGS Tags Get DGS Tags Like Search DGS Goods Forging Operations Start / Stop / Get Forging Get Forging Start Forging Stop Forging Lease Balance Get Next Block Generators Hallmark Operations Decode Hallmark Mark Host Generate Hallmark Monetary System Operations Can Delete Currency Currency Buy / Sell Currency Buy Currency Sell Currency Mint Currency Reserve Claim Currency Reserve Increase Delete Currency Get Account Currencies Get Account Currency Count Get Account Exchange Requests Get Expected Exchange Requests Get Funding Monitor Get All Currencies Get All Exchanges Get Available To Buy Get Available To Sell Get Buy / Sell Offers Get Buy Offers Get Sell Offers Get Expected Buy Offers Get Expected Sell Offers Get Currencies Get Currencies By Issuer Get Currency Get Currency Account Count Get Currency Accounts Get Currency Founders Get Currency Ids Get Currency Transfers Get Expected Currency Transfers Get Exchanges Get Exchanges By Exchange Request Get Exchanges By Offer Get Last Exchanges Get Minting Target Get Offer Issue Currency Publish Exchange Offer Search Currencies Transfer Currency Networking Operations Add Peer Blacklist API Proxy Peer Blacklist Peer Get Inbound Peers Get My Info Get Peer Get Peers Set API Proxy Peer Phasing Operations Approve Transaction Create Phasing Poll Get Account Phased Transaction Count Get Account Phased Transactions Get Asset Phased Transactions Get Currency Phased Transactions Get Linked Phased Transactions Get Phasing Poll Get Phasing Poll Vote Get Phasing Poll Votes Get Phasing Polls Get Voter Phased Transactions Server Information Operations Event Register Event Wait Get Blockchain Status Get Constants Get Plugins Get State Get Time Shuffling Operations Get Account Shufflings Get All Shufflings Get Assigned Shufflings Get Holding Shufflings Get Shufflers Get Shuffling Get Shuffling Participants Shuffling Cancel Shuffling Create Shuffling Process Shuffling Register Shuffling Verify Start Shuffler Stop Shuffler Tagged Data Operations Download Tagged Data Extend Tagged Data Get Account Tagged Data Get All Tagged Data Get Channel Tagged Data Get Data Tag Count Get Data Tags Get Data Tags Like Get Tagged Data Get Tagged Data Extend Transactions Search Tagged Data Upload Tagged Data Verify Tagged Data Token Operations Decode File Token Decode Token Generate File Token Generate Token Transaction Operations Broadcast Transaction Calculate Full Hash Get Expected Transactions Get Referencing Transactions Get Transaction Get Transaction Bytes Parse Transaction Retrieve Pruned Transaction Send Transaction Sign Transaction Voting System Operations Cast Vote Create Poll Get Poll Get Poll Result Get Poll Vote Get Poll Votes Get Polls Search Polls Utilities Decode QR Code Detect Mime Type Encode QR Code Full Hash To Id Hash Hex Convert Long Convert RS Convert Debug Operations Clear Unconfirmed Transactions Dump Peers Full Reset Get All Broadcasted Transactions Get All Waiting Transactions Get Log Get Stack Traces Lucene Reindex Pop Off Rebroadcast Unconfirmed Transactions Requeue Unconfirmed Transactions Retrieve Pruned Data Scan Set Logging Shutdown Trim Derived Tables General Notes Genesis Block Many API requests make reference to the genesis block. FYI, the genesis block's ID is 4777664216118977193 . Sending messages, selling aliases, and leasing balances to the Genesis account are not allowed. Flexible Account IDs All API requests that require an account ID accept either an account number or the corresponding Reed-Solomon address . Quantity Units BLX, NQT and QNT The Blue0x token, BLX, is used to quantify value within the network and a certain amount of BLX is required, as a fee, for each transaction within the network. This fee goes to the node that forges (generates) the new block containing the transaction that is then accepted into the blockchain. One billion BLX were created in the Genesis Block , and 100,000 BLX were then distributed to NXT owners as per the Jelurida license agreement. The Blue0x (BLX) blockchain was created on May 7, 2021 at 12:34:00. The Blue0x system can be thought of as a network owned by all who posses BLX. In this sense, BLX quantifies ownership of or stake in the system. Stakeholders are entitled to forge blocks and collect transaction fees in proportion to the amount of BLX they possess. Seperate assets and currencies, such as USDX, are created within the Blue0x network. The amount of these assets and currencies are represented as integers in units of QNT, and are priced in NQT per QNT. Creating Unsigned Transactions All API requests that create a new transaction will accept either a secretPhrase or a publicKey parameter: If secretPhrase is supplied, a transaction is created, signed at the server, and broadcast by the server as usual. If only a publicKey parameter is supplied as a 64-digit (32-byte) hex string, the transaction will be prepared by the server and returned in the JSON response as transactionJSON without a signature. This JSON object along with secretPhrase can then be supplied to Sign Transaction as unsignedTransactionJSON and the resulting signed transactionJSON can then be supplied to Broadcast Transaction . This sequence allows for offline signing of transactions so that secretPhrase never needs to be exposed. unsignedTransactionBytes may be used instead of unsigned transactionJSON when there is no encrypted message. Messages to be encrypted require the secretPhrase for encryption and so cannot be included in unsignedTransactionBytes . Escrow Operations All API requests that create a new transaction will accept an optional referencedTransactionFullHash parameter which creates a chained transaction, meaning that the new transaction cannot be confirmed unless the referenced transaction is also confirmed. This feature allows a simple way of transaction escrow: Alice prepares and signs a transaction A, but doesn't broadcast it by setting the broadcast parameter to false . She sends to Bob the unsignedTransactionBytes , the fullHash of the transaction, and the signatureHash . All of those are included in the JSON returned by the API request. (Warning: make sure not to send the signed transactionBytes , or the signature itself, as then Bob can just broadcast transaction A himself). Bob prepares, signs and broadcasts transaction B, setting the referencedTransactionFullHash parameter to the fullHash of A provided by Alice. He can verify that this hash indeed belongs to the transaction he expects from Alice, by using Calculate Full Hash , which takes unsignedTransactionBytes and signatureHash (both of which Alice has also sent to Bob). He can also use Parse Transaction to decode the unsigned bytes and inspect all transaction fields. Transaction B is accepted in the unconfirmed transaction pool, but as long as A is still missing, B will not be confirmed, i.e. will not be included in the blockchain. If A is never submitted, B will eventually expire -- so Bob should make sure to set a long enough deadline, such as the maximum of 32767 minutes. Once in the unconfirmed transactions pool, Bob has no way of recalling B back. So now Alice can safely submit her transaction A, by just broadcasting the signedTransactionBytes she got in the first step. Transaction A will get included in the blockchain first, and in the next block Bob's transaction B will also be included. Note that while the above scheme is good enough for a simple escrow, the blockchain does not enforce that if A is included, B will also be included. It may happen due to forks and blockchain reorganization, that B never gets a chance to be included and expires unconfirmed, while A still remains in the blockchain. However, it is not practically possible for Bob to intentionally cause such chain of events and to prevent B from being confirmed. Prunable Data Prunable data can be removed from the blockchain without affecting the integrity of the blockchain. When a transaction containing prunable data is created, only the 32-byte sha256 hash of the prunable data is included in the transactionBytes , not the prunable data itself. The non-prunable signed transactionBytes are used to verify the signature and to generate the transaction's fullHash and ID; when the prunable part of the transaction is removed at a later time, none of these operations are affected. Prunable data has a predetermined minimum lifetime of two weeks (24 hours on the Testnet) from the timestamp of the transaction. Transactions and blocks received from peer nodes are not accepted if prunable data is missing before this time has elapsed. After this time has elapsed, prunable data is no longer included with transactions and blocks transmitted to peer nodes, and is no longer included in the transaction JSON returned by general-purpose API calls such as Get Transaction; the only way to retrieve it, if still available, is through special-purpose API calls such as Get Prunable Message. Expired prunable data remains stored in the blockchain until removed at the same time derived tables are trimmed, which occurs automatically every 1000 blocks by default. Use Trim Derived Tables to remove expired prunable data immediately. Prunable data can be preserved on a node beyond the predetermined minimum lifetime by setting the nxt.maxPrunableLifetime property to a larger value than two weeks or to -1 to preserve it indefinitely. To force the node to include such preserved prunable data when transactions and blocks are transmitted to peer nodes, set the nxt.includeExpiredPrunables property to true , thus making it an archival node. Currently, there are two varieties of prunable data in the Blue0x system: prunable Arbitrary Messages and Tagged Data . Both varities have a maximum prunable data length of 42 kilobytes. Properties Files The behavior of some API calls is affected by property settings loaded from files in the nxt/conf directory during Blue0x server intialization. This directory contains the nxt-default.properties and logging-default.properties files, both of which contain default property settings along with documentation. It is recommended not to modify default properties files because they can be overwritten during software updates. Instead, properties in the default files can be overridden by including them in optional nxt.properties and logging.properties files in the same directory. For example, a nxt.properties file can be created with the contents: nxt.isTestnet=true This causes the Blue0x server to connect to the Testnet instead of the Mainnet. Admin Password Some API functions take an adminPassword parameter, which must match the nxt.adminPassword property unless the nxt.disableAdminPassword property is set to true or the API server only listens on the localhost interface (when the nxt.apiServerHost property is set to 127.0.0.1). All Debug Operations require adminPassword since they require some kind of privilege. On some functions adminPassword is used so you can override maximum allowed value for lastIndex parameter, which is set to 100 by default by the nxt.maxAPIRecords property. Giving you the option to retrieve more than objects per request. Roaming and Light Client Modes The remote node to use when in roaming and light client modes is selected randomly, but can be changed manually in the UI, or using the Set API Proxy Peer API, or forced to a specific peer using the nxt.forceAPIProxyServerURL property. Remote nodes can be blacklisted from the UI, or using the Blacklist API Proxy Peer API. This blacklisting is independent from peer blacklisting. The API proxy blacklisting period can be set using the nxt.apiProxyBlacklistingPeriod property (default 1800000 milliseconds). API requests that require sending the secret phrase, shared key, or admin password to the server, for features like forging, shuffling, or running a funding monitor, are disabled when in roaming or light client mode. Create Transaction The following API calls create Blue0x transactions using HTTP POST requests. Follow the links for examples and HTTP POST request parameters specific to each call. Refer to the sections below for HTTP POST request parameters and JSON response fields common to all calls that create transactions. Calls in italics are phasing-safe (refer to Get Constants and Create Phasing Poll ) Send Money Set Account Information Set Account Property Buy / Sell Alias Delete Alias Set Alias Send Message Cancel Order Dividend Payment Issue Asset Place Order Transfer Asset DGS Delisting DGS Delivery DGS Feedback DGS Listing DGS PriceChange DGS Purchase DGS Quantity Change DGS Refund Lease Balance Currency Buy / Sell Currency Mint Currency Reserve Claim Currency Reserve Increase Delete Currency Issue Currency Publish Exchange Offer Transfer Currency Create Poll Cast Vote Approve Transaction Extend Tagged Data Upload Tagged Data Create Transaction Request The following HTTP POST parameters are common to all API calls that create transactions: secretPhrase is the secret passphrase of the account (optional, but transaction neither signed nor broadcast if omitted) publicKey is the public key of the account (optional if secretPhrase provided) feeNQT is the fee (in NQT) for the transaction: minimum 1000 BLX for Issue Asset , unless singleton asset is issued, for which the fee is 1 BLX 2 BLX in base fee for Set Alias , with 2 BLX additional fee for each 32 chars of name plus URI total length, after the first 32 chars [25000, 1000, 40] BLX for [3-letter, 4-letter, 5-letter] Issue Currency 40 BLX for re-issue of any currency 10 BLX for a Create Poll , including 20 options and total size of poll name plus poll description plus total option length not exceeding 320 chars. For each option above 20, an additional fee of 1 BLX, and for each 32 chars after 320, an additional fee of 2 BLX. [2, 21] BLX for a [basic, required-minimum-balance] Create Phasing Poll . 1 BLX will be added for each option (answer) beyond 20, and 1 BLX for each 32 bytes of hashedSecret or linkedFullHash fields. 1 BLX for the first 32 bytes of a unencrypted non-prunable message , 1 BLX for each additional 32 bytes 2 BLX for the first 32 bytes of an encrypted non-prunable message , 1 BLX for each additional 32 bytes. The length is measured excluding the nonce and the 16 byte AES initialization vector. 1 BLX for the first 1024 bytes of a prunable message , 0.1 BLX for each additional 1024 prunable bytes 1 BLX for Set Account Info , including 32 chars, with 2 BLX additional fee for each 32 chars 2 BLX for DGS Listing , including 32 chars of name plust description. With 2 BLX additional fee for each 32 chars. 1 BLX for DGS Delivery , including 32 bytes of encrypted goods data (AES initialization bytes and nonce excluded). With 2 BLX additional fee for each 32 bytes. 2 BLX for transactions that make use of referencedTransactionFullHash property when creating a new transaction. 1 BLX otherwise, where 1 BLX = 100000000 NQT deadline is the deadline (in minutes) for the transaction to be confirmed, 32767 minutes maximum referencedTransactionFullHash creates a chained transaction, meaning that the current transaction cannot be confirmed unless the referenced transaction is also confirmed (optional) broadcast is set to false to prevent broadcasting the transaction to the network (optional) Note: An optional arbitrary message can be appended to any transaction by adding message-related parameters as in Send Message . Note: Any phasing-safe transaction (refer to Create Transaction ) can have its execution deferred either conditionally or unconditionally (refer to Create Phasing Poll ). Create Transaction Response The following JSON response fields are common to all API calls that create transactions: signatureHash (S) is a SHA-256 hash of the transaction signature unsignedTransactionBytes (S) are the unsigned transaction bytes transactionJSON (O) is a transaction object (refer to Get Transaction for details) broadcasted (B) is true if the transaction was broadcast, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) transactionBytes (S) are the signed transaction bytes fullHash (S) is the full hash of the signed transaction transaction (S) is the ID of the newly created transaction Account Operations Delete Account Property Deletes an account property. POST only. Request: requestType is deleteAccountProperty property is the name of the property recipient is the account where a property should be removed (optional) setter is the account who did set the property (optional) Response: Refer to Create Transaction Response . Example: Refer to Delete Account Property example. Get Account Get account information given an account ID. Request: requestType is getAccount account is the account ID includeLessors is true to include lessors , lessorsRS and lessorsInfo (optional) includeAssets is true to include assetBalances and unconfirmedAssetBalances (optional) includeCurrencies is true to include accountCurrencies (optional) includeEffectiveBalance is true to include effectiveBalanceNXT and guaranteedBalanceNQT (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: unconfirmedBalanceNQT (S) is balanceNQT less unconfirmed outgoing transactions, the balance displayed in the client effectiveBalanceNXT (N) is the balance (in BLX) of the account available for forging: the unleased guaranteedBalance of this account plus the leased guaranteedBalance of all lessors to this account lessorsInfo (A) is an array of lessor objects including the fields: currentHeightTo (S) nextHeightFrom (S) effectiveBalanceNXT (S) nextLesseeRS (S) currentLesseeRS (S) currentHeightFrom (S) nextHeightTo (S) lessors (A) is an array of lessor account IDs currentLessee (S) is the account number of the lessee, if applicable currentLeasingHeightTo (N) is the block height when the lease completes, if applicable forgedBalanceNQT (S) is the balance (in NQT) that the account has forged balanceNQT (S) is the minimally confirmed basic balance (in NQT) of the account publicKey (S) is the public key of the account requestProcessingTime (N) is the API request processing time (in millisec) assetBalances (A) is an array of asset objects including the fields balanceQNT (S) and asset (S) ID guaranteedBalanceNQT (S) is the balance (in NQT) of the account with at least 1440 confirmations unconfirmedAssetBalances (A) is an array of asset objects including the fields unconfirmedBalanceQNT (S) and asset (S) ID currentLesseeRS (S) is the Reed-Solomon address of the lessee account accountRS (S) is the Reed-Solomon address of the account lessorsRS (A) is an array of Reed-Solomon lessor account addresses accountCurrencies (A) is an array of currency objects (refer to Get Account Currencies for details) name (S) is the name associated with the account, if applicable description (S) is the description of the account, if applicable account (S) is the account number currentLeasingHeightFrom (N) is the block height when the lease starts, if applicable lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) Example: Refer to Get Account example. Get Account Block Count Get the number of blocks forged by an account. Request: requestType is getAccountBlockCount account is an account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfBlocks (N) is the number of blocks forged by the account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Block Count example. Get Account Block Ids Get the block IDs of all blocks forged (generated) by an account in reverse block height order. Request: requestType is getAccountBlockIds account is the account ID timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first block ID to retrieve (optional) lastIndex is a zero-based index to the last block ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: blockIds (A) is an array of block IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Get Account Block Ids example. Get Account Blocks Get all blocks forged (generated) by an account in reverse block height order. Request: requestType is getAccountBlocks account is the account ID timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first block to retrieve (optional) lastIndex is a zero-based index to the last block to retrieve (optional) includeTransactions is true to retrieve transaction details, otherwise only transaction IDs are retrieved (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: blocks (A) is an array of blocks (refer to Get Block for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Blocks example. Get Account Id Get an account ID given a secret passphrase or public key. POST only. Request: requestType is getAccountId secretPhrase is the secret passphrase of the account (optional) publicKey is the public key of the account (optional if secretPhrase provided) Response: accountRS (S) is the Reed-Solomon address of the account publicKey (S) is the public key of the account requestProcessingTime (N) is the API request processing time (in millisec) account (S) is the account number Example: Refer to Get Account Id example. Get Account Ledger Get multiple account ledger entries. Request: requestType is getAccountLedger account is the account ID (optional) firstIndex is a zero-based index to the first block to retrieve (optional) lastIndex is a zero-based index to the last block to retrieve (optional) event is the event ID (optional) eventType is a string representing the event type (optional) holdingType is a string representing the holding type (optional) holding is the holding ID (optional) includeTransactions is true to retrieve transaction details, otherwise only transaction IDs are retrieved (optional) includeHoldingInfo is true to retrieve asset or currency info (optional) with each ledger entry. The default is false. requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: entries (A) is an array of ledger objects including the fields: change (S) is the change in the balance for the holding identified by 'holdingType' eventType (S) is the event type causing the account change ledgerId (S) is the ledger entry ID holding (S) is the item identifier for an asset or currency balance isTransactionEvent (B) is true if the event is associated with a transaction and false if it is associated with a block. balance (S) is the balance for the holding identified by 'holdingType' holdingType (S) is the item being changed (account balance, asset balance or currency balance) accountRS (S) is the Reed-Solomon address of the account block (S) is the block ID that created the ledger entry event (S) is the block or transaction associated with the event account (S) is the account number height (N) is the the block height associated with the event timestamp (N) is the the block timestamp associated with the event requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Ledger example. Get Account Ledger Entry Get a specific account ledger entry. Request: requestType is getAccountLedgerEntry ledgerId is the ledger ID includeTransactions is true to retrieve transaction details, otherwise only transaction IDs are retrieved (optional) includeHoldingInfo is true to retrieve asset or currency info (optional) with the ledger entry. The default is false. Response: change (S) is the change in the balance for the holding identified by 'holdingType' eventType (S) is the event type causing the account change ledgerId (S) is the ledger entry ID holding (S) is the item identifier for an asset or currency balance isTransactionEvent (B) is true if the event is associated with a transaction and false if it is associated with a block. balance (S) is the balance for the holding identified by 'holdingType' holdingType (S) is the item being changed (account balance, asset balance or currency balance) accountRS (S) is the Reed-Solomon address of the account block (S) is the block ID that created the ledger entry event (S) is the block or transaction associated with the event account (S) is the account number height (N) is the the block height associated with the event timestamp (N) is the the block timestamp associated with the event requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Ledger Entry example. Get Account Lessors Get the lessors to an account. Request: requestType is getAccountLessors account is the account ID height is the height of the blockchain to determine the lessors (optional, default is last block) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: accountRS (S) is the Reed-Solomon address of the account account (S) is the account number height (N) is the height of the blockchain lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) lessors (A) is an array of lessor objects including the fields: lessorRS (S) lessor (S) guaranteedBalanceNQT (S) Example: Refer to Get Account Lessors example. Get Account Properties Get the Account properties for a specific account or setter. Request: requestType is getAccountProperties recipient is the account ID to which the property is attached to setter is the account ID who set the property (optional if recipient provided) property is the property key (optional) firstIndex is a zero-based index to the first block to retrieve (optional) lastIndex is a zero-based index to the last block to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: setterRS : (S) is the Reed-Solomon address of the setter account (only if setter is defined in the request) recipientRS : (S) is the Reed-Solomon address of the recipient account (only if recipient is defined in the request) recipient : (S) is the account number of the recipient account (only if recipient is defined in the request) requestProcessingTime (N) is the API request processing time (in millisec) setter : (S) is the account number of the setter account (only if setter is defined in the request) properties : (A) is an array of properties including the fields: setterRS : (S) is the Reed-Solomon address of the setter account (only if setter is omitted in the request) recipientRS : (S) is the Reed-Solomon address of the recipient account (only if recipient is omitted in the request) recipient : (S) is the account number of the recipient account (only if recipient is omitted in the request) property : (S) property name setter : (S) is the account number of the setter account (only if setter is omitted in the request) value : (S) property value Example: Refer to Get Account Properties example. Get Account Public Key Get the public key associated with an account ID. Request: requestType is getAccountPublicKey account is the account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: publicKey (S) is the 32-byte public key associated with the account, returned as a hex string lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Public Key example. Get Balance Get the balance of an account. Request: requestType is getBalance account is an account ID includeEffectiveBalance is true to include effectiveBalanceNXT and guaranteedBalanceNQT (optional) height is the height to retrieve account balance for, if still available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: unconfirmedBalanceNQT (S) is balanceNQT less unconfirmed outgoing transactions, the balance displayed in the client guaranteedBalanceNQT (S) is the balance (in NQT) of the account with at least 1440 confirmations effectiveBalanceNXT (N) is the balance (in Blue0x) of the account available for forging: the unleased guaranteedBalance of this account plus the leased guaranteedBalance of all lessors to this account forgedBalanceNQT (S) is the balance (in NQT) that the account has forged balanceNQT (S) is the minimally confirmed basic balance (in NQT) of the account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Balance example. Get Blockchain Transactions Get the transactions associated with an account in reverse block timestamp order. Request: requestType is getBlockchainTransactions account is the account ID timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) type is the type of transactions to retrieve (optional) subtype is the subtype of transactions to retrieve (optional) firstIndex is a zero-based index to the first transaction to retrieve (optional) lastIndex is a zero-based index to the last transaction to retrieve (optional) numberOfConfirmations is the required number of confirmations per transaction (optional) withMessage is true to retrieve only only transactions having a message attachment, either non-encrypted or decryptable by the account (optional) phasedOnly is true to retrieve only phased transactions (optional unless nonPhasedOnly provided) nonPhasedOnly is true to retrieve only nonphased transactions (optional unless phasedOnly provided) includeExpiredPrunable is true' to retrieve pruned data if available (optional) includePhasingResult is true to retrieve execution status of each phased transaction (optional) executedOnly is true to exclude phased transactions that are not yet executed (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: Refer to Get Constants for definitions of types and subtypes Response: transactions (A) is an array of transactions (refer to Get Transaction for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Blockchain Transactions example. Get Guaranteed Balance Get the balance of an account that is confirmed at least a specified number of times. Request: requestType is getGuaranteedBalance account is an account ID numberOfConfirmations is the minimum number of confirmations for a transaction to be included in the guaranteed balance (optional, if omitted or zero then minimally confirmed transactions are included) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: guaranteedBalanceNQT (S) is the balance (in NQT) of the account with at least numberOfConfirmations confirmations lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Guaranteed Balance example. Get Unconfirmed Transaction Ids Get a list of unconfirmed transaction IDs associated with an account. Request: requestType is getUnconfirmedTransactionIds account is one account ID (optional) account is one account ID (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) firstIndex is a zero-based index to the first transaction ID to retrieve (optional) lastIndex is a zero-based index to the last transaction ID to retrieve (optional) Response: unconfirmedTransactionIds (A) is an array of unconfirmed transaction IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Unconfirmed Transaction Ids example. Get Unconfirmed Transactions Get a list of unconfirmed transactions associated with an account. Request: requestType is getUnconfirmedTransactions account is one account ID (optional) account is one account ID (optional) \u22ee requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) firstIndex is a zero-based index to the first unconfirmed transaction to retrieve (optional) lastIndex is a zero-based index to the last unconfirmed transaction to retrieve (optional) Response: unconfirmedTransactions (A) is an array of unconfirmed transactions (refer to Get Transaction for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Unconfirmed Transactions example. Search Accounts Get accounts having a name or description that match a given query in reverse relevance order. Request: requestType is searchAccounts query is a full text query on the account fields name (S) and description (S) in the standard Lucene syntax firstIndex is a zero-based index to the first account to retrieve (optional) lastIndex is a zero-based index to the last account to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: accounts (A) is an array of account objects with the following fields: account (S) is the account number accountRS (S) is the Reed-Solomon address of the account name (S) is the name of the account description (S) is the description of the account (if applicable) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Accounts example. Send Money Send Blue0x to another account. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is sendMoney amountNQT is the amount (in NQT) in the transaction recipient is the account ID of the recipient recipientPublicKey is the public key of the receiving account (optional, enhances security of a new account) Response: Refer to Create Transaction Response . Example: Refer to Send Money example. Send BLX Refer to Send Money . Set Account Info Set account information. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is setAccountInfo name is a name to associate with the account (optional) description is a description to associate with the account (optional) messagePatternRegex is a regular expression pattern following the java.util.regex.Pattern specification; incoming transactions are only accepted if they contain a plain text message which matches this pattern (disabled indefinitely due to a security issue) messagePatternFlags is a bitmask of java.util.regex.Pattern flags, such as 2 (Pattern.CASE-iNSENSITIVE) Response: Refer to Create Transaction Response . Example: Refer to Set Account Info example. Set Account Property Set account property. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is setAccountProperty recipient is the account ID of the recipient. property is the property name. value is the property value. Response: Refer to Create Transaction Response . Example: Refer to Set Account Property example. Start Funding Monitor Starts a funding monitor that will transfer BLX, an ASSET or a CURRENCY from the funding account to a recipient account when the amount held by the recipient account drops below the threshold. The transfer will not be done until the current block height is greater than equal to the block height of the last transfer plus the interval. The funding account is identified by the secret phrase. The recipient accounts are identified by the specified account property (see Set Account Property ). Each account that has this property set by the funding account will be monitored for changes. The property value can be omitted or it can consist of a JSON string containing one or more values in the format: {\"amount\":long,\"threshold\":long,\"interval\":integer} . POST only. Request: requestType is startFundingMonitor property is the name of the account property amount is the amount to fund the recipient account with (in NQT or QNT) threshold is the threshold interval is the the number of blocks to wait after before funding the recipient secretPhrase is the secret phrase of the funding account holdingType is a string representing the holding type (optional) holding is the holding ID (optional) Response: started (B) is true if the monitor has been started requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Start Funding Monitor example. Stop Funding Monitor Stop a funding monitor. When the secret phrase is specified, a single monitor will be stopped. The monitor is identified by the secret phrase, holding and account property. The administrator password is not required and will be ignored. When the administrator password is specified, a single monitor can be stopped by specifying the funding account, holding and account property. If no account is specified, all monitors will be stopped. The holding type and account property name must be specified when the secret phrase or account is specified. Holding type codes are listed in getConstants. In addition, the holding identifier must be specified when the holding type is ASSET or CURRENCY. POST only. Request: requestType is stopFundingMonitor secretPhrase is the secret phrase of the funding account, used to stop a single monitor. (optional) adminPassword is the admin password, used to stop a single monitor or all monitors (optional if secretPhrase is provided) property is the name of the account property (optional) holdingType is a string representing the holding type (optional) holding is the holding ID (optional) account is the account ID (optional) Response: stopped (N) is the number of the monitors that have been stopped requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Stop Funding Monitor example. Account Control Operations Get All Phasing Only Controls Retrieve all accounts subject to phasing control with their respective restrictions. Request: requestType is getAllPhasingOnlyControls firstIndex is a zero-based index to the first block ID to retrieve (optional) lastIndex is a zero-based index to the last block ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: phasingOnlyControls (A) is an array with phasing only controls objects (Refer to Get Phasing Only Control for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Phasing Only Controls example. Get Phasing Only Control Retrieve phasing control with their respective restrictions for a specific account. Request: requestType is getPhasingOnlyControl account is the account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: account (S) is the account number accountRS (S) is the Reed-Solomon address of the account quorum (S) is the minimum number of votes needed to approve the transaction whitelist (A) is an array with the whitelisted accounts including the fields: whitelisted (S) is the account number whitelistedRS (S) is the Reed-Solomon address of the account maxFees (S) is the maximum fees the account can spend per block minDuration (N) is the minimum duration of the phasing period maxDuration (N) is the maximum duration of the phasing period votingModel (N) is an integer code for the method of approval minBalance (S) is the minimum balance (in NQT or QNT) required for voting minBalanceModel (N) is the minimum balance model holding (S) is the asset or currency ID (only included if holding != 0) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Phasing Only Control example. Set Phasing Only Control Sets (or removes) phasing control for a specific account. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is setPhasingOnlyControl controlVotingModel is the voting model or -1 to remove phasing control controlQuorum is the expected quorum (optional) controlMinBalance is the expected minimum balance (optional) controlMinBalanceModel is the expected minimum balance model (optional) controlHolding is the holding ID (optional) controlWhitelisted is the whitelisted accounts (optional, multiple values) controlWhitelisted is the whitelisted accounts (optional, multiple values) controlMaxFees is the maximum allowed accumulated total fees for not yet finished phased transactions (optional) controlMinDuration is the minimum duration in block height (optional) controlMaxDuration is the maximum phasing duration in block height (optional) Response: Refer to Create Transaction Response . Example: Refer to Set Phasing Only Control example. Alias Operations Buy / Sell Alias Buy or sell an alias. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is either buyAlias or sellAlias alias is the ID of the alias (optional) aliasName is the alias name (optional if alias provided) priceNQT is the asking price (in NQT) of the alias ( sellAlias only) amountNQT is the amount (in NQT) offered for an alias for sale ( buyAlias only) recipient is the account ID of the recipient (only required for sellAlias and only if there is a designated recipient) recipientPublicKey is the public key of the recipient account (only applicable if recipient provided; optional, enhances security of a new account) Note : An alias can be transferred rather than sold by setting priceNQT to zero. A pending sale can be canceled by selling again to self for a price of zero. Response: Refer to Create Transaction Response . Example: Refer to Buy / Sell Alias example. Buy Alias Refer to Buy / Sell Alias . Sell Alias Refer to Buy / Sell Alias . Set Alias Create and/or assign an alias. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is setAlias aliasName is the alias name aliasURI is the alias URI (e.g. https://www.google.com/ ) Response: Refer to Create Transaction Response . The transaction ID is also the alias ID. Example: Refer to Set Alias example. Delete Alias Delete an alias given an alias ID or name. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is deleteAlias alias is the alias ID (optional) aliasName is the alias name to be deleted (optional if alias provided) Response: Refer to Create Transaction Response . Example: Refer to Delete Alias example. Get Alias Get information about a given alias Request: requestType is getAlias alias is the alias ID (optional) aliasName is the name of the alias (optional if alias provided) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: timestamp (N) is the time (in seconds since the genesis block) when the alias was created or last transferred aliasName (S) is the name of the alias account (S) is the number of the account that owns the alias accountRS (S) is the Reed-Solomon address of the account that owns the alias aliasURI (S) is what the alias points to, in URI format alias (S) is the alias ID priceNQT (S) is the asking price (in NQT) of the alias if it is for sale buyer (S) is the account number of the buyer if the alias is for sale and a buyer is specified lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Alias example. Get Alias Count Get the number of aliases owned by an account given the account ID. Request: requestType is getAliasCount account is the account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfAliases (N) is the number of aliases owned by the account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Alias Count example. Get Aliases Get information on aliases owned by a given account in alias name order. Request: requestType is getAliases account is the ID of the account that owns the aliases timestamp is the earliest creation time (in seconds since the genesis block) of the aliases (optional) firstIndex is a zero-based index to the first alias to retrieve (optional) lastIndex is a zero-based index to the last alias to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: aliases (A) is an array of alias objects (refer to Get Alias for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Aliases example. Get Aliases Like Get all aliases starting with a given prefix in alias name order. Request: requestType is getAliasesLike aliasPrefix is the prefix (at least 2 characters long) of the aliasName firstIndex is a zero-based index to the first alias to retrieve (optional) lastIndex is a zero-based index to the last alias to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: aliases (A) is an array of alias objects (refer to Get Alias for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Aliases Like example. Arbitrary Message System Operations Decrypt From Decrypt an AES-encrypted message. Request: requestType is decryptFrom secretPhrase is the secret passphrase of the recipient account is the account ID of the recipient data is AES-encrypted data nonce is the unique nonce associated with the encrypted data decryptedMessageIsText is false if the decrypted message is a hex string, otherwise the decrypted message is text (optional) uncompressDecryptedMessage is false to prevent gzip uncompression after decryption (optional) Response: decryptedMessage (S) is the decrypted message requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Decrypt From example. Download Prunable Message Downloadins a prunable message attachments directly as binary data. An optional secretPhrase parameter is supported, to allow decryption and downloading of the encrypted part of the message instead of the plain text part. Request: requestType is downloadPrunableMessage transaction is the transaction ID secretPhrase is the secret passphrase used to decrypt the encrypted part of the message (optional) sharedKey is the shared key used to decrypt the message (optional) (see Get Shared Key ) retrieve is true to retrieve the message from achival node if needed (optional) requireBlock is theblock ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: The prunable data as a binary file. Example: Refer to Download Prunable Message example. Encrypt To Encrypt a message using AES without sending it. Request: requestType is encryptTo secretPhrase is the secret passphrase of the sender recipient is the account ID of the recipient messageToEncrypt is either UTF-8 text or a string of hex digits to be compressed and converted into a 1000 byte maximum bytecode then encrypted using AES messageToEncryptIsText is false if the message to encrypt is a hex string, otherwise the message to encrypt is text (optional) compressMessageToEncrypt is false to prevent gzip compression before encryption (optional) Response: data (S) is the AES-encrypted data nonce (S) is a 32-byte pseudorandom nonce requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Encrypt To example. Get All Prunable Messages Get all available prunable messages in reverse block timestamp order. Request: requestType is getAllPrunableMessages timestamp is the earliest message (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first prunable message to retrieve (optional) lastIndex is a zero-based index to the last prunable message to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: prunableMessages (A) is an array of prunable messages (refer to Get Prunable Message ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Get All Prunable Messages example. Get Prunable Message Get the prunable message given a transaction ID, optionally decrypting it if encrypted and if a secretPhrase is provided, if it is still available. Request: requestType is getPrunableMessage transaction is the transaction ID secretPhrase is the secret phrase needed for decryption (optional) sharedKey is the shared key used to decrypt the message (optional) (see Get Shared Key ) retrieve is true to retrieve pruned data from other nodes if not available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: sender (S) is the sender account number senderRS (S) is the Reed-Solomon address of the sender account recipient (S) is the recipient account number recipientRS (S) is the Reed-Solomon address of the recipient account message (S) is the plain message text messageIsText (B) is true if the plain message is text, false if it is a hex string encryptedMessage (O) is the encrypted message object, containing data (S) and nonce (S) fields encryptedMessageIsText (B) is true if the encrypted message is text, false if it is a hex string decryptedMessage (S) is the decrypted and decompressed (if necessary) encrypted message, if applicable and if secretPhrase is provided isCompressed (B) is true if the encrypted message was compressed before encryption, if applicable transaction (S) is the transaction ID transactionTimestamp (N) is the transaction timestamp (in seconds since the genesis block) blockTimestamp (N) is the block timestamp (in seconds since the genesis block) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Get Prunable Message example. Get Prunable Messages Get all still-available prunable messages given an account id, optionally limiting to only those with another account as recipient or sender, in reverse chronological order. Request: requestType is getPrunableMessages account is the account ID otherAccount is another account ID, either sender or recipient, to limit the response secretPhrase is the secret phrase needed for decryption (optional) timestamp is the earliest prunable message (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first prunable message to retrieve (optional) lastIndex is a zero-based index to the last prunable message to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: prunableMessages (A) is an array of prunable message objects (refer to Get Prunable Message for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Get Prunable Messages example. Get Shared Key Get the one-time shared key used for encryption of messages. Request: requestType is getSharedKey account is the recipient account ID secretPhrase is the secret phrase of the sender nonce is the 32-byte pseudorandom nonce Response: sharedKey (S) is shared key as a hexadecimal string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Shared Key example. Read Message Get a message given a transaction ID. Request: requestType is readMessage transaction is the transaction ID of the message secretPhrase is the secret passphrase of the account that received the message (optional) sharedKey is the shared key used to decrypt the message (optional) (see Get Shared Key ) retrieve is true to retrieve pruned data from archival nodes (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: messageIsPrunable (B) is true if there is a plain message and it is prunable, false if it is not prunable message (S) is the plain message, if applicable encryptedMessageIsPrunable (B) is true if there is an encrypted message and it is prunable, false if it is not prunable decryptedMessage (S) is the decrypted message, if applicable and only if the provided secretPhrase belongs to either the sender or receiver of the transaction decryptedMessageToSelf (S) is the decrypted message sent to self, if applicable and only if the provided secretPhrase belongs to the sender of transaction lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Read Message example. Send Message Create an Arbitrary Message transaction. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is sendMessage recipient is the account ID of the recipient (optional) recipientPublicKey is the public key of the receiving account (optional, enhances security of a new account) message is either UTF-8 text or a string of hex digits (perhaps previously encoded using an arbitrary algorithm) to be converted into a bytecode with a maximum length of one kilobyte, 42 kilobytes if prunable (optional) messageIsText is false if the message is a hex string, otherwise the message is text (optional) messageIsPrunable is true if the message is prunable (optional) messageToEncrypt is either UTF-8 text or a string of hex digits to be compressed (unless compressMessageToEncrypt is false ) and converted into a bytecode with a maximum length of one kilobyte, 42 kilobytes if prunable, then encrypted using AES (optional) messageToEncryptIsText is false if the message to encrypt is a hex string, otherwise the message to encrypt is text (optional) encryptedMessageData is already encrypted data which overrides messageToEncrypt if provided (optional) encryptedMessageNonce is a unique 32-byte number which cannot be reused (optional unless encryptedMessageData is provided) encryptedMessageIsPrunable is true if the encrypted message is prunable (optional) compressMessageToEncrypt is false to prevent gzip compression before encryption (optional) messageToEncryptToSelf is either UTF-8 text or a string of hex digits to be compressed (unless compressMessageToEncryptToSelf is false) and converted into a one kilobyte maximum bytecode then encrypted with AES, then sent to the sending account (optional) messageToEncryptToSelfIsText is false if the message to self-encrypt is a hex string, otherwise the message to encrypt is text (optional) encryptToSelfMessageData is already encrypted data which overrides messageToEncryptToSelf if provided (optional) encryptToSelfMessageNonce is a unique 32-byte number which cannot be reused (optional unless encryptToSelfMessageData is provided) compressMessageToEncryptToSelf is false to prevent gzip compression before encryption (optional) Note: Any combination (including none or all) of the three options plain message , messageToEncrypt , and messageToEncryptToSelf will be included in the transaction. However, one and only one prunable message may be included in a single transaction if there is not already a message of the same type (either plain or encrypted). Note: The encryptedMessageData-encryptedMessageNonce pair or the encryptToSelfMessageData-encryptToSelfMessageNonce pair can be the output of Encrypt To Response: Refer to Create Transaction Response . Example: Refer to Send Message example. Verify Prunable Message Verify that a prunable message obtained from any source, when hashed, matches the hash of the original prunable message. Request: Refer to Send Message for more details about the following request parameters. requestType is verifyPrunableMessage message is the plain message, if applicable (optional) messageIsText is false if the provided plain message is a hex string (optional) encryptedMessageData is the data part of the encrypted data-nonce pair (optional if message provided) encryptedMessageNonce is the nonce part of the encrypted data-nonce pair (required if encryptedMessageData provided) messageToEncryptIsText is false if the encrypted message was a hex string before encryption (optional) compressMessageToEncrypt is false if the encrypted message was not compressed before encryption (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: The hash is computed from the message itself plus its associated flag(s) isText and isCompressed (encrypted only); therefore the flag(s) must be provided for verification if different from the default(s). The original encryptedMessageData-encryptedMessageNonce pair used to compute the original hash must be provided again to recompute the hash for verification of a prunable encrypted message. Response: version.PrunablePlainMessage or version.PrunableEncryptedMessage (N) is 1 , the version number verify (B) is true if the original hash matches the hash computed from the provided values message (S) or encryptedMessage (O) is the prunable plain message or the prunable encrypted message object containing the fields: data (S) nonce (B) isText (B) isCompressed (B) messageIsText (B) is true if the plain message is text, false if it is a hex string, if applicable messageHash or encryptedMessageHash (S) is the hash lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Verify Prunable Message example. Asset Exchange Operations Cancel Order Cancel an existing asset order. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is either cancelBidOrder or cancelAskOrder order is the order ID of the order being canceled Response: Refer to Create Transaction Response . Example: Refer to Cancel Order example. Cancel Ask Order Refer to Cancel Order . Cancel Bid Order Refer to Cancel Order . Delete Asset Shares Permanently deletes a specified quantity of owned asset shares. Request: Refer to Create Transaction Request for common parameters. requestType is deleteAssetShares asset is the asset ID quantityQNT is the quantity (in QNT) of the asset to be deleted Response: Refer to Create Transaction Response . Example: Refer to Delete Asset Shares example. Dividend Payment Pay dividend to all shareholders of an asset. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dividendPayment asset is the asset ID height is the blockchain height at which asset holders shares will be counted (must be less than 1440 blocks in the past) amountNQTPerQNT is dividend amount (in NQT per QNT of the asset) Response: Refer to Create Transaction Response . Example: Refer to Dividend Payment example. Get Account Asset Count Get the number of assets owned by an account given the account ID. Request: requestType is getAccountAssetCount account is the account ID height is the height of the blockchain to determine the asset count (optional, default is last block) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: numberOfAssets (N) is the number of assets owned by the account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Asset Count example. Get Account Assets Get the assets owned by a given account in reverse quantity order. Request: requestType is getAccountAssets account is the account ID asset is an asset ID filter (optional) height is the blockchain height at which to retrieve balances (optional, default is the last block in the blockchain) includeAssetInfo is true if asset information is to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: accountAssets (A) is an array of asset objects (unless the asset parameter is specified) with the following fields for each asset: quantityQNT (S) is the quantity (in QNT) of the asset unconfirmedQuantityQNT (S) is the unconfirmed quantity (in QNT) of the asset decimals (N) is the number of decimal places used by the asset (if includeAssetInfo is true ) name (S) is the asset name (if includeAssetInfo is true ) asset (S) is the asset ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Assets example. Get Account Current Order Ids Get current asset order IDs given an account ID in reverse block height order. Request: requestType is either getAccountCurrentBidOrderIds or getAccountCurrentAskOrderIds account is the account ID asset is an asset ID filter (optional) firstIndex is a zero-based index to the first order ID to retrieve (optional) lastIndex is a zero-based index to the last order ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: bidOrderIds or askOrderIds (A) is an array of order IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Current Order Ids example. Get Account Current Ask Order Ids Refer to Get Account Current Order Ids . Get Account Current Bid Order Ids Refer to Get Account Current Order Ids . Get Account Current Orders Get current asset orders given an account ID in reverse block height order. Request: requestType is either getAccountCurrentBidOrders or getAccountCurrentAskOrders account is the account ID asset is an asset ID filter (optional) firstIndex is a zero-based index to the first order to retrieve (optional) lastIndex is a zero-based index to the last order to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: bidOrders or askOrders (A) is an array of order objects (refer to Get Order for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Current Orders example. Get Account Current Ask Orders Refer to Get Account Current Orders . Get Account Current Bid Orders Refer to Get Account Current Orders . Get All Assets Get all assets in the exchange in reverse block height of creation order. Request: requestType is getAllAssets firstIndex is a zero-based index to the first asset to retrieve (optional) lastIndex is a zero-based index to the last asset to retrieve (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset objects (refer to Get Asset ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Assets example. Get All Open Orders Get all open bid/ask orders in reverse block height order. Request: requestType is either getAllOpenBidOrders or getAllOpenAskOrders firstIndex is a zero-based index to the first order to retrieve (optional) lastIndex is a zero-based index to the last order to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: openOrders (A) is an array of order objects (refer to Get Order for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Open Orders example. Get All Open Ask Orders Refer to Get All Open Orders . Get All Open Bid Orders Refer to Get All Open Orders . Get All Trades Get all trades since a given timestamp in reverse block height order. Request: requestType is getAllTrades timestamp is the timestamp (in seconds since the genesis block) to begin retrieving trades (optional, default 0) firstIndex is a zero-based index to the first trade to retrieve (optional) lastIndex is a zero-based index to the last trade to retrieve (optional) includeAssetInfo is true if asset information is to be included in the result (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If timestamp is omitted or zero, and no index is given, all trades in the entire blockchain will be retrieved, which may timeout or crash your system. Response: trades (A) is an array of trade objects (refer to Get Trades ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Trades example. Get Asset Get asset information given an asset ID. Request: requestType is getAsset asset is the asset ID includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: account (S) is the number of the account that issued the asset accountRS (S) is the Reed-Solomon address of the account that issued the asset name (S) is the asset name description (S) is the asset description quantityQNT (S) is the total asset quantity (in QNT) in existence asset (N) is the asset ID decimals (N) is the number of decimal places used by the asset numberOfAccounts (N) is the number of accounts that own the asset numberOfTrades (N) is the number of trades of this asset numberOfTransfers (N) is the number of transfers of this asset lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset example. Get Asset Account Count Get the number of accounts that own an asset given the asset ID. Request: requestType is getAssetAccountCount asset is the asset ID height is the height of the blockchain to determine the account count (optional, default is last block) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: numberOfAccounts (N) is the number of accounts that own the asset lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset Account Count example. Get Asset Accounts Get the accounts that own an asset given the asset ID in reverse quantity order. Request: requestType is getAssetAccounts asset is the asset ID height is the height of the blockchain to determine the accounts (optional, default is last block) firstIndex is a zero-based index to the first account to retrieve (optional) lastIndex is a zero-based index to the last account to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: accountAssets (A) is an array of asset objects with the following fields for each asset: quantityQNT (S) is the quantity (in QNT) of the asset accountRS (S) is the Reed-Solomon address of the account that owns the asset unconfirmedQuantityQNT (S) is the unconfirmed quantity (in QNT) of the asset asset (S) is the asset ID account (S) is the number of the account that owns the asset lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset Accounts example. Get Asset Deletes Get asset deletions for a specific asset or account. Request: requestType is getAssetDeletes asset is the asset ID (optional if account is provided) account is the account ID (optional if asset is provided) firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) timestamp is the earliest deletion (in seconds since the genesis block) to retrieve (optional) includeAssetInfo is true if asset information is to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: deletes (A) is an array of asset delete objects with following properties: quantityQNT (S) is the number of shares that was deleted assetDelete (S) is the transaction ID account (S) is the account ID accountRS (S) is the account Reed Solomon address asset (S) is the asset ID height (N) is the block height of the delete timestamp (N) is the block timestamp of the delete decimals (N) is the number of decimal places used by the asset (if includeAssetInfo is true ) name (S) is the asset name (if includeAssetInfo is true ) Example: Refer to Get Asset Deletes example. Get Asset Dividends Get the dividend payment history for a specific asset. Request: requestType is getAssetDividends asset is the asset ID firstIndex is a zero-based index to the first dividend payment to retrieve (optional) lastIndex is a zero-based index to the last dividend payment to retrieve (optional) timestamp is the earliest dividend payment (in seconds since the genesis block) to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: dividends (A) is an array of dividend transactions with the following properties: assetDividend (S) is the dividend payment transaction ID numberOfAccounts (N) is the number of accounts that received a dividend amountNQTPerQNT (S) is the amount of BLX (in NQT) paid per quantity (in QNT) of the asset totalDividend (S) is the total amount of BLX (in NQT) sent in the dividend payment dividendHeight (N) is the block height of the dividend calculation asset (S) is the asset ID height (N) is the block height of the dividend payment timestamp (N) is the block timestamp of the dividend payment Example: Refer to Get Asset Dividends example. Get Asset Ids Get the IDs of all assets in the exchange in reverse block height of creation order. Request: requestType is getAssetIds firstIndex is a zero-based index to the first asset ID to retrieve (optional) lastIndex is a zero-based index to the last asset ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset Ids example. Get Asset Transfers Get transfers associated with a given asset and/or account in reverse block height order (or in the expected order of execution for expected transfers). Request: requestType is either getAssetTransfers or getExpectedAssetTransfers , where expected transfers are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block asset is the asset ID (optional) account is the account ID (optional if asset provided) timestamp is the earliest transfer (in seconds since the genesis block) to retrieve (optional, does not apply to expected transfers) firstIndex is a zero-based index to the first transfer to retrieve (optional, does not apply to expected transfers) lastIndex is a zero-based index to the last transfer to retrieve (optional, does not apply to expected transfers) includeAssetInfo is true if the decimals and name fields are to be included (optional, does not apply to expected transfers) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transfers (A) is an array of transfer objects with the following fields for each transfer: quantityQNT (S) is the quantity (in QNT) of the asset traded senderRS (S) is the Reed-Solomon address of the sender assetTransfer (S) is the transaction ID of the asset transfer sender (S) is the account number of the sender recipientRS (S) is the Reed-Solomon address of the recipient decimals (N) is the number of decimal places used by the asset (if includeAssetInfo is true ) recipient (S) is the account number of the recipient name (S) is the name of the asset (if includeAssetInfo is true ) asset (S) is the asset ID height (N) is the height of the transfer block timestamp (N) is the timestamp (in seconds since the genesis block) of the transfer block, does not apply to an expected transfer phased (B) is true if the transaction is phased, false otherwise, applies only to an expected transfer lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset Transfers example. Get Expected Asset Transfers Refer to Get Asset Transfers . Get Assets Get asset information given multiple asset IDs Request: requestType is getAssets assets is one the multiple asset IDs assets is one the multiple asset IDs includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset objects (refer to Get Asset ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Assets example. Get Assets By Issuer Get asset information given multiple creation account IDs in reverse block height of creation order. Request: requestType is getAssetsByIssuer account is one of the multiple account IDs account is one of the multiple account IDs firstIndex is a zero-based index to the first asset to retrieve (optional) lastIndex is a zero-based index to the last asset to retrieve (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset objects (refer to Get Asset ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Assets By Issuer example. Get Expected Asset Deletes Gets asset deletes which are expected to be executed in the next block. Request: requestType is either getExpectedAssetDeletes asset is the asset ID (optional) account is the account ID (optional) firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) timestamp is the earliest deletion (in seconds since the genesis block) to retrieve (optional) includeAssetInfo is true if asset information is to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: deletes (A) is an array of expected asset delete objects with following properties: assetDelete (S) is the transaction ID asset (S) is the asset ID account (S) is the account ID accountRS (S) is the account Reed Solomon address quantityQNT (S) is the number of shares that will be deleted decimals (N) is the number of decimal places used by the asset (if includeAssetInfo is true ) name (S) is the asset name (if includeAssetInfo is true ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Expected Asset Deletes example. Get Order Get a bid/ask order given an order ID. Request: requestType is either getBidOrder or getAskOrder order is the Order ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: account (S) is the account number associated with the order accountRS (S) is the Reed-Solomon address of the account asset (S) is the ID of the asset being ordered quantityQNT (S) is the order quantity (in QNT) priceNQT (S) is the order price (in NQT) height (N) is the block height of the order transaction transactionHeight (N) is the transaction height transactionIndex (N) is a zero-based index giving the order of the transaction in its block order (S) is the ID of the order type (S) is the type of order ( bid or ask ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Order example. Get Ask Order Refer to Get Order . Get Bid Order Refer to Get Order . Get Order Ids Get bid/ask order IDs given an asset ID, in order of decreasing bid price or increasing ask price. Request: requestType is either getBidOrderIds or getAskOrderIds asset is the asset ID firstIndex is a zero-based index to the first order ID to retrieve (optional) lastIndex is a zero-based index to the last order ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: bidOrderIds or askOrderIds (A) is an array of order IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Order Ids example. Get Ask Order Ids Refer to Get Order Ids . Get Bid Order Ids Refer to Get Order Ids . Get Orders Get bid/ask orders given an asset ID, in order of decreasing bid price or increasing ask price (if sortByPrice is true for expected orders, otherwise in the expected order of execution). Request: requestType is one of getBidOrders , getAskOrders , getExpectedBidOrders or getExpectedAskOrders , where expected orders are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block asset is the asset ID sortByPrice is true to sort by price (optional, applies only to expected orders, which are returned in expected order of execution by default) showExpectedCancellations is true to include orders that are expected to be cancelled in the next block, based on the content of the unconfirmed transactions pool and the phased transactions expected to finish in the next block (optional, does not apply to expected orders) firstIndex is a zero-based index to the first order to retrieve (optional, does not apply to expected orders) lastIndex is a zero-based index to the last order to retrieve (optional, does not apply to expected orders) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: bidOrders or askOrders (A) is an array of order objects (refer to Get Order for details) with the following additional field only for an expected order: phased (B) is true if the order is phased, false otherwise lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Orders example. Get Ask Orders Refer to Get Orders . Get Bid Orders Refer to Get Orders . Get Expected Ask Orders Refer to Get Orders . Get Expected Bid Orders Refer to Get Orders . Get Expected Order Cancellations Get all expected order cancellations in the order in which they are expected to be executed. Request: requestType is getExpectedOrderCancellations , where expected cancellations are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: orderCancellations (A) is an array of order cancellation objects with the following fields for each transfer: account (S) is the cancelling account number accountRS (S) is the Reed-Solomon address of the account order (S) is the ID of the order to be cancelled height (N) is the block height of the order cancellation transaction phased (B) is true if the order cancellation transaction is phased lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Expected Order Cancellations example. Get Last Trades Get the last trade of each of multiple assets. Request: requestType is getLastTrades assets is one of multiple asset IDs assets is one of multiple asset IDs requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: trades (A) is an array of trade objects (refer to Get Trades without name and decimals for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Last Trades example. Get Order Trades Get all trades that were executed as a result of a given askOrder and/or bidOrder in reverse block height order. Request: requestType is getOrderTrades askOrder is an ask order ID (optional) bidOrder is a bid order ID (optional if askOrder provided) firstIndex is a zero-based index to the first trade to retrieve (optional) lastIndex is a zero-based index to the last trade to retrieve (optional) includeAssetInfo is true if the decimals and name fields are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Trades . Example: Refer to Get Order Trades example. Get Trades Get trades associated with a given asset and/or account in reverse block height order. Request: requestType is getTrades asset is the asset ID (optional) account is the account ID (optional if asset provided) firstIndex is a zero-based index to the first trade to retrieve (optional) lastIndex is a zero-based index to the last trade to retrieve (optional) timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) includeAssetInfo is true if the decimals and name fields are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: trades (A) is an array of trade objects with the following fields for each trade: seller (S) is the account number of the seller quantityQNT (S) is the quantity (in QNT) of the asset traded bidOrder (S) is the bid order ID sellerRS (S) is the Reed-Solomon address of the seller buyer (S) is the account number of the buyer priceNQT (S) is the trade price (in NQT, the ask price for a buy or the bid price for a sell) askOrder (S) is the ask order ID buyerRS (S) is the Reed-Solomon address of the buyer decimals (N) is the number of decimal places used by the asset name (S) is the name of the asset (if includeAssetInfo is true ) block (S) is the block ID of the trade (if includeAssetInfo is true ) asset (S) is the asset ID askOrderHeight (N) is the block height of the ask order bidOrderHeight (N) is the block height of the bid order tradeType (S) is the trade type ( sell or buy , where buy implies that the bid occurred after the ask, or if in the same block, has a greater order ID) timestamp (N) is the timestamp (in seconds since the genesis block) of the trade block height (N) is the height of the trade block lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Trades example. Issue Asset Create an asset on the exchange. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is issueAsset name is the name of the asset description is a url-encoded description of the asset in UTF-8 with a maximum length of 1000 bytes (optional) quantityQNT is the total amount (in QNT) of the asset in existence decimals is the number of decimal places used by the asset (optional, zero default) Response: Refer to Create Transaction Response . The transaction ID is also the asset ID. Example: Refer to Issue Asset example. Place Order Place an asset order. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is either placeBidOrder or placeAskOrder asset is the asset ID of the asset being ordered quantityQNT is the amount (in QNT) of the asset being ordered priceNQT is the bid/ask price (in NQT) Response: Refer to Create Transaction Response . The transaction ID is also the order ID. Example: Refer to Place Order example. Place Ask Order Refer to Place Order . Place Bid Order Refer to Place Order . Search Assets Get assets having a name or description that match a given query in reverse relevance order. Request: requestType is searchAssets query is a full text query on the asset fields name (S) and description (S) in the standard Lucene syntax firstIndex is a zero-based index to the first asset to retrieve (optional) lastIndex is a zero-based index to the last asset to retrieve (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset objects (refer to Get Asset ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Assets example. Transfer Asset Transfer a quantity of an asset from one account to another. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is transferAsset recipient is the recipient account ID recipientPublicKey is the public key of the recipient account (optional, enhances security of a new account) asset is the ID of the asset being transferred quantityQNT is the amount (in QNT) of the asset being transferred Response: Refer to Create Transaction Response . The transaction ID is also the transfered asset ID. Example: Refer to Transfer Asset example. Block Operations Get Block Get a block object given a block ID or block height. Request: requestType is getBlock block is the block ID (optional) height is the block height (optional if block provided) timestamp is the timestamp (in seconds since the genesis block) of the block (optional if height provided) includeTransactions is true to include transaction details (optional) includeExecutedPhased is true to include approved and executed phased transactions (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: block overrides height which overrides timestamp . Response: previousBlockHash (S) is the 32-byte hash of the previous block payloadLength (N) is the length (in bytes) of all transactions included in the block totalAmountNQT (S) is the total amount (in NQT) of the transactions in the block generationSignature (S) is the 32-byte generation signature of the generating account generator (S) is the generating account number generatorPublicKey (S) is the 32-byte public key of the generating account baseTarget (S) is the base target for the next block generation payloadHash (S) is the 32-byte hash of the payload (all transactions) generatorRS (S) is the Reed-Solomon address of the generating account nextBlock (S) is the next block ID numberOfTransactions (N) is the number of transactions in the block blockSignature (S) is the 64-byte block signature transactions (A) is an array of transaction IDs or transaction objects (if includeTransactions provided, refer to Get Transaction for details) executedPhasedTransactions (A) is an array of transaction IDs or transaction objects (if includeExecutedPhased provided, refer to Get Transaction for details) version (N) is the block version totalFeeNQT (S) is the total fee (in NQT) of the transactions in the block previousBlock (S) is the previous block ID cumulativeDifficulty (S) is the cumulative difficulty for the next block generation block (S) is the block ID height (N) is the zero-based block height timestamp (N) is the timestamp (in seconds since the genesis block) of the block lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Block example. Get Block Id Get a block ID given a block height. Request: requestType is getBlockId height is the block height requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: block (S) is the block ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Block Id example. Get Blocks Get blocks from the blockchain in reverse block height order. Request: requestType is getBlocks timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) firstIndex is first block to retrieve (optional, default is zero or the last block on the blockchain) lastIndex is the last block to retrieve (optional, default is firstIndex + 99) includeTransactions is true to include transaction details (optional) includeExecutedPhased is true to include approved and executed phased transactions (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: blocks (A) is an array of blocks retrieved (refer to Get Block for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Blocks example. Get EC Block Get Economic Cluster block data. Request: requestType is getECBlock timestamp is the timestamp (in seconds since the genesis block) of the EC block (optional, default (or zero) is the current timestamp) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If timestamp is more than 15 seconds before the timestamp of the last block on the blockchain, errorCode 4 is returned. Response: ecBlockHeight (N) is the EC block height ecBlockId (S) is the EC block ID timestamp (N) is the timestamp (in seconds since the genesis block) of the EC block lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get EC Block example. Digital Goods Store Operations In the BLX client interface, the Digital Goods Store (DGS) is referred to as the 'Marketplace'. DGS Delisting Delist a listed product. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsDelisting goods is the goods ID Response: Refer to Create Transaction Response . Example: Refer to DGS Delisting example. DGS Delivery Deliver a product. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsDelivery purchase is the purchase order ID discountNQT is a discount (in NQT) off the selling price (optional, default is zero) goodsToEncrypt is the product, a text or a hex string to be encrypted (optional if goodsData provided) goodsIsText is false if goodsToEncrypt is a hex string (optional) goodsData is AES-encrypted (using Encrypt To ) goodsToEncrypt , up to 1000 bytes long (required only if secretPhrase is omitted) goodsNonce is the unique nonce associated with the encrypted data (required only if secretPhrase is omitted) Note: If the encrypted goods data is longer than 1000 bytes, use a prunable encrypted message to deliver the goods. Response: Refer to Create Transaction Response . Example: Refer to DGS Delivery example. DGS Feedback Give feedback about a purchased product after delivery. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsFeedback purchase is the purchase order ID message is unencrypted (public) feedback text up to 1000 bytes Note : The unencrypted message parameter is used for public feedback. Response: Refer to Create Transaction Response . Example: Refer to DGS Feedback example. DGS Listing List a product in the DGS by creating a listing transaction. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsListing name is the name of the product up to 100 characters in length description is a description of the product up to 1000 characters in length tags are up to three comma separated keywords describing the product up to 100 characters in length (optional) quantity is the quantity of the product for sale priceNQT is the price (in NQT) of the product Response: Refer to Create Transaction Response . The transaction ID is also the goods ID. Example: Refer to DGS Listing example. DGS Price Change Change the price of a listed product. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsPriceChange goods is the goods ID of the product priceNQT is the new price of the product Response: Refer to Create Transaction Response . Example: Refer to DGS Price Change example. DGS Purchase Purchase a product for sale. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsPurchase goods is the goods ID of the product priceNQT is the price of the product quantity is the quantity to be purchased deliveryDeadlineTimestamp is the timestamp (in seconds since the genesis block) by which delivery of the product must occur Response: Refer to Create Transaction Response . The transaction ID is also the purchase order ID. Example: Refer to DGS Purchase example. DGS Quantity Change Change the quantity of a listed product. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsQuantityChange goods is the goods ID of the product deltaQuantity is the change in the quantity of the product for sale (use negative numbers for a decrease in quantity) Response: Refer to Create Transaction Response . Example: Refer to DGS Quantity Change example. DGS Refund Refund a purchase. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsRefund purchase is the purchase order ID refundNQT is the amount (in NQT) of the refund Response: Refer to Create Transaction Response . Example: Refer to DGS Refund example. Get DGS Expired Purchases Get purchase orders which have expired without being delivered, given a seller ID, in reverse chronological order. Request: requestType is getDGSExpiredPurchases seller is the account ID of the product seller firstIndex is a zero-based index to the first purchase order to retrieve (optional) lastIndex is a zero-based index to the last purchase order to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: purchases (A) is an array of purchase orders (refer to Get DGS Purchase for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Expired Purchases example. Get DGS Good Get a DGS product given a goods ID. Request: requestType is getDGSGood goods is the goods ID of the product includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: seller (S) is the seller's account ID quantity (N) is the quantity of the product remaining for sale goods (S) is the ID of the product description (S) is the description of the product sellerRS (S) is the Reed-Solomon address of the seller's account requestProcessingTime (N) is the API request processing time (in millisec) delisted (B) is true if the product has been delisted, false otherwise parsedTags (A) is an array of up to three tag strings, parsed from the tags field tags (S) is the comma separated list of tags provided by the seller when the listing was created priceNQT (S) is the current price of the product numberOfPublicFeedbacks (N) is the number of public feedbacks given for the product name (S) is the name of the product numberOfPurchases (N) is the number of purchases of the product timestamp (N) is the timestamp (in seconds since the genesis block) of the creation of the product listing lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) Example: Refer to Get DGS Good example. Get DGS Goods Get DGS products for sale in reverse chronological listing creation order unless a seller is given, then in product name order. Request: requestType is getDGSGoods seller is the account ID of the product seller (optional) firstIndex is a zero-based index to the first product to retrieve (optional) lastIndex is a zero-based index to the last product to retrieve (optional) inStockOnly is false if out-of-stock products (zero quantity) are to be retrieved (optional) hideDelisted is true if delisted products are to be omitted (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If none of the optional parameters are specified, all in-stock products in the blockchain are retrieved at once, which may take a long time. Response: goods (A) is an array of goods (refer to Get DGS Good for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Goods example. Get DGS Goods Count Get the number of products for sale by a given seller or all sellers. Request: requestType is getDGSGoodsCount seller is the account ID of the seller (optional, default is all sellers combined) inStockOnly is false if out-of-stock (zero quantity) products are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfGoods (N) is the number of goods for sale by the seller lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: The numberOfGoods field refers to the number of distinct products for sale, regardless of the quantity of each. Example: Refer to Get DGS Goods Count example. Get DGS Goods Purchase Count Get the number of completed purchase orders given a goods ID. Request: requestType is getDGSGoodsPurchaseCount goods is the goods ID withPublicFeedbacksOnly is true if purchase orders without public feedback are to be omitted (optional) completed is true if only completed purchase orders are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfPurchases (N) is the number of completed purchase orders lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Goods Purchase Count example. Get DGS Goods Purchases Get completed purchase orders given a goods ID and optionally a buyer ID in reverse chronological order. Request: requestType is getDGSGoodsPurchases goods is the goods ID buyer is a buyer ID (optional) firstIndex is a zero-based index to the first purchase order to retrieve (optional) lastIndex is a zero-based index to the last purchase order to retrieve (optional) withPublicFeedbacksOnly is true if purchase orders without public feedback are to be omitted (optional) completed is true if only completed purchase orders are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: purchases (A) is an array of purchase orders (refer to Get DGS Purchase for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Goods Purchases example. Get DGS Pending Purchases Get pending purchase orders given a seller ID in reverse chronological order. Request: requestType is getDGSPendingPurchases seller is the account ID of the seller firstIndex is a zero-based index to the first purchase order to retrieve (optional) lastIndex is a zero-based index to the last purchase order to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: purchases (A) is an array of pending purchase orders (refer to Get DGS Purchase for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Pending Purchases example. Get DGS Purchase Get a purchase order given a purchase order ID. Request: requestType is getDGSPurchase purchase is the purchase order ID sharedKey is the shared key used to decrypt the message (optional) (see Get Shared Key ) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: seller (S) is the account number of the seller quantity (N) is the quantity of the product to be purchased feedbackNotes (A) is an array of AES-encrypted objects, each with data (S) and nonce (S) fields, in reverse chronological order, if applicable publicFeedbacks (A) is an array of feedback strings in reverse chronological order if applicable pending (B) is true if the deliveryDeadline has not passed, false otherwise purchase (S) is the purchase order ID goods (S) is the ID of the product sellerRS (S) is the Reed-Solomon address of the seller buyer (S) is the account number of the buyer priceNQT (S) is the price (in NQT) of the product deliveryDeadlineTimestamp (N) is the timestamp (in seconds since the genesis block) by which the product must be delivered goodsIsText (B) is false if the message is a hex string, otherwise the message is text (optional) buyerRS (S) is the Reed-Solomon address of the buyer refundNQT (S) is the amount (in NQT) refunded, if applicable name (S) is the name of the product goodsData (O) is an object with the two fields data (S) (the encrypted product hex string) and nonce (S), if the product has been delivered timestamp (N) is the timestamp (in seconds since the genesis block) of the purchase order lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Purchase example. Get DGS Purchase Count Get the number of purchase orders given a seller and/or buyer ID, or all orders combined. Request: requestType is getDGSPurchaseCount seller is the account ID of the seller (optional, default is all sellers) buyer is the account ID of the buyer (optional, default is all buyers) withPublicFeedbacksOnly is true if purchase orders without public feedback are to be omitted (optional) completed is true if only completed purchase orders are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfPurchases (N) is the number of purchase orders associated with the seller and/or buyer lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Purchase Count example. Get DGS Purchases Get purchase orders given a seller and/or buyer ID in reverse chronological order. Request: requestType is getDGSPurchases seller is the account ID of the seller (optional) buyer is the account ID of the buyer (optional if seller provided) firstIndex is a zero-based index to the purchase order to retrieve (optional) lastIndex is a zero-based index to the purchase order to retrieve (optional) withPublicFeedbacksOnly is true if purchase orders without public feedback are to be omitted (optional) completed is true if only completed purchase orders are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: purchases (A) is an array of purchase orders (refer to Get DGS Purchase for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Purchases example. Get DGS Tag Count Get the number of tags used by all sellers. Request: requestType is getDGSTagCount inStockOnly is false if tags with no associated in-stock products are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfTags (N) is the number of tags lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Tag Count example. Get DGS Tags Get tags used by all sellers in reverse inStockCount , reverse totalCount , tag order. Request: requestType is getDGSTags inStockOnly is false if out-of-stock tags are to be retrieved (optional) firstIndex is a zero-based index to the first tag to retrieve (optional) lastIndex is a zero-based index to the last tag to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: tags (A) is an array of tag objects with the following fields for each tag: inStockCount (N) is the number of products available for sale as tagged tag (S) is the tag word totalCount (N) is the total number of products as tagged lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: The ...Count fields refer to the number of distinct products tagged, regardless of the quantity of each. Example: Refer to Get DGS Tags example. Get DGS Tags Like Get all tags starting with a given prefix (at least 2 characters long) in reverse inStockCount , reverse totalCount , tag order. Request: requestType is getDGSTagsLike tagPrefix is the prefix (at least 2 characters long) of the tag inStockOnly is false if out-of-stock tags are to be retrieved (optional) firstIndex is a zero-based index to the first tag to retrieve (optional) lastIndex is a zero-based index to the last tag to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: tags (A) is an array of tag objects with the following fields for each tag: inStockCount (N) is the number of products available for sale as tagged tag (S) is the tag word totalCount (N) is the total number of products as tagged lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: The ...Count fields refer to the number of distinct products tagged, regardless of the quantity of each. Example: Refer to Get DGS Tags Like example. Search DGS Goods Get product listings that have a name or description that match a given query in reverse relevance order, then name order (given a seller), then reverse chronological order. Request: requestType is searchDGSGoods query is a full text query on the goods fields name and description in the standard Lucene syntax (optional) tag is a query on the good field tags in the standard Lucene syntax (optional) seller is the account ID of the product seller (optional) firstIndex is a zero-based index to the first product to retrieve (optional) lastIndex is a zero-based index to the last product to retrieve (optional) inStockOnly is false if out-of-stock products (zero quantity) are to be retrieved (optional) hideDelisted is true if delisted products are to be omitted (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: goods (A) is an array of goods objects (refer to Get DGS Good for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search DGS Goods example. Forging Operations Start / Stop / Get Forging Start or stop forging with an account, or check to see if an account is forging. POST only. Request: requestType is either startForging , stopForging or getForging secretPhrase is the secret passphrase of the account (optional for stopForging and getForging if password protected like the Debug Operations ) Response: deadline (N) is the estimated time (in seconds since the last block) until the account will forge a block ( startForging and getForging only) hitTime (N) is the estimated time (in seconds since the genesis block) when the account will forge a block ( startForging and getForging only) remaining (N) is the deadline less the elapsed time since the last block ( getForging only) foundAndStopped (B) is true if forging was stopped, false if forging was already stopped ( stopForging only) account (S) is the account number ( getForging only) accountRS (S) is the Reed-Solomon address of the account ( getForging only) requestProcessingTime (N) is the API request processing time (in millisec) Note: A getForging request returns errorCode 5 if the account is not forging. If the account has a zero effectiveBalance , forging can be started but deadline , remainingTime and hitTime will be set to zero. Example: Refer to Start / Stop / Get Forging example. Get Forging Refer to Start / Stop / Get Forging . Start Forging Refer to Start / Stop / Get Forging . Stop Forging Refer to Start / Stop / Get Forging . Lease Balance Lease the entire guaranteed balance of Blue0x to another account, after 1440 confirmations. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is leaseBalance period is the lease period (in number of blocks, 1440 minimum) recipient is the lessee (recipient) account recipientPublicKey is the public key of the lessee (recipient) account (optional, enhances security of a new account) Response: Refer to Create Transaction Response . Example: Refer to Lease Balance example. Get Next Block Generators Returns the next block generators ordered by hit time. The list of currently active forgers is first initialized using the block generators with at least 2 blocks generated within the previous 10,000 blocks, excluding accounts without a public key. The list is updated as new blocks are processed. The results are not 100% correct since previously active generators may no longer be running and new generators won't be known until they generate a block. Request: requestType is getNextBlockGenerators -limit_ (N) is the number of next block generators to display. Response: activeCount (N) is the number of active forging accounts lastBlock (S) is the last block ID on the blockchain generators (A) is an array containing the number of next block generators requested effectiveBalanceNXT (N) is the balance (in BLX) of the account available for forging: the unleased guaranteedBalance of this account plus the leased guaranteedBalance of all lessors to this account accountRS (S) is the Reed-Solomon address of the account deadline (N) is the estimated time (in seconds since the last block) until the account will forge a block account (S) is the account number hitTime (N) is the estimated time (in seconds since the genesis block) when the account will forge a block requestProcessingTime (N) is the API request processing time (in millisec) timestamp (N) is the timestamp (in seconds since the genesis block) when the request was executed height (N) is the height of the blockchain Example: Refer to Get Next Block Generators example. Hallmark Operations Decode Hallmark Decode a node hallmark. Request: requestType is decodeHallmark hallmark is the hallmark value Response: valid (B) is true if host is less than 100 characters, weight > 0 and the embedded signature is verified weight (N) is the weight assigned to the hallmark host (S) is the IP address or domain name associated with the hallmark account (S) is the account number associated with the hallmark accountRS (S) is the Reed-Solomon address of the account date (S) is the date the hallmark was created, in YYYY-MM-DD format requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Decode Hallmark example. Mark Host Generates a node hallmark. POST only. Request: requestType is markHost secretPhrase is the secret passphrase for the account that will be hallmarked on the node host is the IP address or domain name of the node weight is the weight to assign to the node date is the current date in YYYY-MM-DD format Note: Refer to Create Hallmark for details. Response: hallmark (S) is the hallmark hex string requestProcessingTime (N) is the API request processing time (in millisec) Note: Refer to Create Hallmark for instructions for applying the hallmark to a public node. Example: Refer to Mark Host example. Generate Hallmark Refer to Mark Host . Monetary System Operations Can Delete Currency Determine if a currency can be deleted. Request: requestType is canDeleteCurrency account is the account ID currency is the currency ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: canDelete (B) is true if the currency can be deleted, false otherwise lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: a currency can be deleted only when all units of the currency are held by account . A reservable currency that has not yet been issued can be deleted by the issuer. A mintable currency that has not completed minting cannot be deleted by a non-issuer. Example: Refer to Can Delete Currency example. Currency Buy / Sell Make an exchange request to buy or sell an exchangeable currency. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is currencyBuy or currencySell currency is the currency ID rateNQT is the exchange rate (in NQT per QNT) units is the amount of the currency to buy or sell (in QNT) Note: An exchange request is immediately executed once accepted onto the blockchain based only on currently available offers (refer to Publish Exchange Offer ). The request then expires, regardless of the amount of currency exchanged; the request may be completely filled, partially filled, or expire without any exchange if no matching offers are found. Response: Refer to Create Transaction Response . Example: Refer to Currency Buy / Sell example. Currency Buy Refer to Currency Buy / Sell . Currency Sell Refer to Currency Buy / Sell . Currency Mint Submit a valid computed nonce to the blockchain in return for newly minted currency. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is currencyMint currency is the mintable currency ID nonce is the computed nonce units is the amount (in QNT) of currency to mint counter (N) is the counter associated with the minting account Note: The hash of nonce must be less than targetBytes provided by Get Minting Target for given units and counter . counter must be increased with each submission. Response: Refer to Create Transaction Response . Example: Refer to Currency Mint example. Currency Reserve Claim Claim currency reserve. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is currencyReserveClaim currency is the currency ID units is the amount (in QNT) of reserve currency to claim Note: Holders of a claimable currency may claim the locked NQT backing their units, thus reducing the supply of the currency. Response: Refer to Create Transaction Response . Example: Refer to Currency Reserve Claim example. Currency Reserve Increase Increase the currency reserve of an unissued reservable currency. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is currencyReserveIncrease currency is the currency ID amountPerUnitNQT is the additional amount (in NQT per QNT of reserveSupply ) to reserve (refer to Issue Currency ) Note: An additional amountPerUnitNQT * reserveSupply NQT (beyond what has previously been reserved) will be locked until the issuanceHeight is reached. Upon issuance, if the currency is claimable the NQT will remain locked until claimed; otherwise the NQT will transfer to the issuing account. Also upon issuance, a portion of the reserveSupply QNT will be transfered to each reserving account in proportion to the NQT that was contributed. Response: Refer to Create Transaction Response . Example: Refer to Currency Reserve Increase example. Delete Currency Delete a deletable currency (refer to Can Delete Currency ). POST only. Request: Refer to Create Transaction Request for common parameters. requestType is deleteCurrency currency is the currency ID Response: Refer to Create Transaction Response . Example: Refer to Delete Currency example. Get Account Currencies Get the currencies issued by a given account. Request: requestType is getAccountCurrencies account is the account ID currency is a currency ID filter (optional) height is the blockchain height at which the response applies (optional, default is the current height) includeCurrencyInfo is true if several currency information properties is to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: accountCurrencies (A) is an array of currency objects with the following fields: code (S) is the currency code unconfirmedUnits (S) is the amount of unconfirmed currency units (in QNT) decimals (N) is the number of currency decimal places name (S) is the currency name currency (S) is the currency ID units (S) is the amount of currency (in QNT) issuanceHeight (N) is the blockchain height of issuance for a reservable currency type (N) is the currency type bitmask (refer to Get Currency ) issuerAccountRS (S) is the Reed-Solomon address of the issuer account issuerAccount (S) is the issuer account ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Currencies example. Get Account Currency Count Get the number of currencies issued by a given account. Request: requestType is getAccountCurrencyCount account is the account ID height is the blockchain height at which the response applies (optional, default is the current height) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfCurrencies (N) is the number of currencies issued lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Currency Count example. Get Account Exchange Requests Get the exchange requests associated with a given account and/or currency in reverse chronological order (or in expected order of execution for expected requests). Request: requestType is either getAccountExchangeRequests or getExpectedExchangeRequests , where expected requests are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block account is the account ID (optional for expected requests) currency is the currency ID (optional for expected requests if account provided) includeCurrencyInfo is true to include the response fields code , decimals , name , issuanceHeight , type , timestamp , issuerAccountRS and issuerAccount (optional, applies only to expected requests) firstIndex is a zero-based index to the first request to retrieve (optional, does not apply to expected requests) lastIndex is a zero-based index to the last request to retrieve (optional, does not apply to expected requests) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchangeRequests (A) is an array of requests with the following fields for each request: code (S) is a currency code subtype (N) is 5 for buy and 6 for sell decimals (N) is the number of decimal places name (S) is the currency name units (S) is the number of currency units to buy or sell (in QNT) issuanceHeight (N) is the blockchain height of issuance for a reservable currency, zero otherwise type (N) is the currency type bitmask (refer to Get Currency ) transaction (S) is the transaction ID timestamp (N) is the timestamp (in seconds since the genesis block) of the block when the request was executed rateNQT (S) is the exchange rate (in NQT per QNT) issuerAccountRS (S) is the Reed-Solomon address of the issuer account issuerAccount (S) is the issuer account ID phased (B) is true if the transaction is phased (applies only to expected requests) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Exchange Requests example. Get Expected Exchange Requests Refer to Get Account Exchange Requests . Get Funding Monitor Get a funding monitor. Request: requestType is getFundingMonitor secretPhrase is the secret phrase of the funding account, used to get a single monitor. (optional) adminPassword is the admin password, used to get a single monitor or all monitors (optional if secretPhrase is provided) includeMonitoredAccounts is true to include account info of the monitored accounts (optional) property is the name of the account property (optional) holdingType is a string representing the holding type (optional) holding is the holding ID (optional) account is the account ID (optional) Response: monitors (A) is an array of monitor objects including the following fields: holding (S) is the holding ID amount (S) is the amount to fund the monitored accounts with (NQT or QNT) monitoredAccounts (A) is an array of monitored account objects including the following fields (only if includeMonitoredAccounts is true ): amount (S) is the amount to fund the monitored accounts with. Overrides amount in parent object. account (S) is the monitored account ID accountRS (S) is the monitored account Reed Solomon address threshold (S) is the threshold. Overrides threshold in parent object. interval (N) is the interval. Overrides interval in parent object. holdingType (N) is the holding type account (S) is the monitoring account ID accountRS (S) is the Reed Solomon address of the monitoring account property (S) is the account property threshold (S) is the threshold interval (N) is the interval requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Funding Monitor example. Get All Currencies Get all currencies in reverse creation order. Request: requestType is getAllCurrencies firstIndex is a zero-based index to the first currency to retrieve (optional) lastIndex is a zero-based index to the last currency to retrieve (optional) includeCounts is true to include numberOf... fields (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencies (A) is an array of currency objects (refer to Get Currency for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Currencies example. Get All Exchanges Get all currency exchanges in reverse chronological order. Request: requestType is getAllExchanges timestamp is the earliest timestamp to retrieve (optional) firstIndex is a zero-based index to the first exchange to retrieve (optional) lastIndex is a zero-based index to the last exchange to retrieve (optional) includeCurrencyInfo is true to include some currency details (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects (refer to Get Exchanges for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Exchanges example. Get Available To Buy Calculates the rate required in order to completely fill an exchange request. Request: requestType is getAvailableToBuy or getAvailableToSell currency is the currency ID units is the number of units to buy requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: amountNQT (S) is the total amount needed to fill the exchange request units (S) is the number of units rateNQT (S) is the rate for the currency units requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Available To Buy example. Get Available To Sell Refer to Get Available To Buy . Get Buy / Sell Offers Get currency buy or sell offers given a currency ID and/or an account ID in order of rate (if sortByRate is true for expected offers, otherwise in the expected order of execution). Request: requestType is one of getBuyOffers , getSellOffers , getExpectedBuyOffers or getExpectedSellOffers , where expected offers are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block currency is the currency ID (optional) account is the account ID (optional if currency provided) availableOnly is true to include only offers with non-zero supply and limit, but is ignored when both currency and account are given (optional, does not apply to expected offers) sortByRate is true to sort by rate (optional, applies only to expected offers, which are returned in expected order of execution by default) firstIndex is a zero-based index to the first offer to retrieve (optional, does not apply to expected offers) lastIndex is a zero-based index to the last offer to retrieve (optional, does not apply to expected offers) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: offers (A) is an array of buy or sell offer objects (refer to Get Offer for details) with the following additional field only for an expected offer: phased (B) is true if the offer is phased, false otherwise lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Buy / Sell Offers example. Get Buy Offers Refer to Get Buy / Sell Offers . Get Sell Offers Refer to Get Buy / Sell Offers . Get Expected Buy Offers Refer to Get Buy / Sell Offers . Get Expected Sell Offers Refer to Get Buy / Sell Offers . Get Currencies Get currencies given multiple currency IDs. Request: requestType is getCurrencies currencies is one of multiple currency IDs currencies is one of multiple currency IDs \u22ee includeCounts is true to include numberOf... fields (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencies (A) is an array of currency objects (refer to Get Currency for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currencies example. Get Currencies By Issuer Get currencies issued by multiple accounts in reverse creation order. Request: requestType is getCurrenciesByIssuer account is one of multiple account IDs account is one of multiple account IDs firstIndex is a zero-based index to the first currency to retrieve (optional) lastIndex is a zero-based index to the last currency to retrieve (optional) includeCounts is true if numberOf... fields are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencies (A) is an array of arrays of currency objects, where the outer array is indexed by the given account IDs (refer to Get Currency for details about the currency objects) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currencies By Issuer example. Get Currency Get the details of a currency. Request: requestType is getCurrency currency is the currency ID (optional) code is the currency code (optional if currency provided) includeCounts is true if numberOf... fields are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: initialSupply (S) is the initial currency supply (in QNT) currentReservePerUnitNQT (S) is the minimum currency reserve (in NQT per QNT) types (A) is an array of currency types, one or more of: -eXCHANGEABLE_ -cONTROLLABLE_ -rESERVABLE_ -cLAIMABLE_ -mINTABLE_ NON-sHUFFLEABLE code (S) is the currency code creationHeight (N) is the blockchain height of the currency creation minDifficulty (N) is the minimum difficulty for a mintable currency numberOfTransfers (N) is the number of currency transfers description (S) is the currency description minReservePerUnitNQT (S) is the minimum currency reserve (in NQT per QNT) for a reservable currency currentSupply (S) is the current currency supply (in QNT) issuanceHeight (N) is the blockchain height of the currency issuance for a reservable currency requestProcessingTime (N) is the API request processing time (in millisec) type (N) is the currency type bitmask, from least to most significant bit: exchangeable, controllable, reservable, claimable, mintable, non-shuffleable reserveSupply (S) is the reserve currency supply (in NQT) for a reservable currency maxDifficulty (N) is the maximum difficulty for a mintable currency accountRS (S) is the Reed-Solomon address of the issuing account decimals (N) is the number of decimal places used by the currency name (S) is the name of the currency numberOfExchanges (N) is the number of currency exchanges currency (S) is the currency ID maxSupply (S) is the maximum currency supply (in QNT) account (S) is the account ID of the currency issuer algorithm (N) is the algorithm number for a mintable currency: 2 for SHA256, 3 for SHA3, 5 for Scrypt, 25 for Keccak25 lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) Example: Refer to Get Currency example. Get Currency Account Count Get the number of accounts that hold a given currency. Request: requestType is getCurrencyAccountCount currency is the currency ID height is the blockchain height at which the response applies (optional, default is the current height) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfAccounts (N) is the number of accounts that hold the currency lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Account Count example. Get Currency Accounts Get the accounts that hold a given currency in reverse units order. Request: requestType is getCurrencyAccounts currency is the currency ID height is the blockchain height at which the response applies (optional, default is current height) firstIndex is a zero-based index to the first account to retrieve (optional) lastIndex is a zero-based index to the last account to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: accountCurrencies (A) is an array of account objects with the following fields: unconfirmedUnits (S) is the amount of unconfirmed currency units (in QNT) accountRS (S) is the Reed-Solomon address of the account currency (S) is the currency ID units (S) is the amount of currency (in QNT) account (S) is the account number lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Accounts example. Get Currency Founders Get a reservable currency's founders. Request: requestType is getCurrencyFounders currency is the currency ID account is an account ID (optional) firstIndex is a zero-based index to the first founder to retrieve (optional) lastIndex is a zero-based index to the last founder to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: founders (A) is an array of founder objects each of which has the following fields: accountRS (S) is the Reed-Solomon address of the founding account amountPerUnitNQT (S) is the amount (in NQT per QNT of reserveSupply ) reserved by the founder currency (S) is the currency ID account (S) is the founding account number lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Founders example. Get Currency Ids Get all currency IDs in reverse chronological creation order. Request: requestType is getCurrencyIds firstIndex is a zero-based index to the first currency to retrieve (optional) lastIndex is a zero-based index to the last currency to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencyIds (A) is an array of currency IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Ids example. Get Currency Transfers Get currency transfers given a currency ID and/or an account ID in reverse block height order (or in expected order of execution for expected transfers). Request: requestType is either getCurrencyTransfers or getExpectedCurrencyTransfers , where expected transfers are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block currency is the currency ID (optional) account is the account ID (optional if currency provided) timestamp is the earliest transfer (in seconds since the genesis block) to retrieve (optional, does not apply to expected transfers) firstIndex is a zero-based index to the first transfer to retrieve (optional, does not apply to expected transfers) lastIndex is a zero-based index to the last transfer to retrieve (optional, does not apply to expected transfers) includeCurrencyInfo is true to include some currency fields (optional, does not apply to expected transfers) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transfers (A) is an array of transfer objects with the following fields for each transfer: code (S) is the currency code units (S) is the amount (in QNT) of the transfer issuanceHeight (N) is the blockchain height of the currency issuance for a reservable currency type (N) is the currency type bitmask (refer to Get Currency for details) issuerAccountRS (S) is the Reed-Solomon address of the issuer account transfer (S) is the transfer ID senderRS (S) is the Reed-Solomon address of the sender account sender (S) is the account number of the sender account recipientRS (S) is the Reed-Solomon address of the recipient account decimals (N) is the number of decimal places used by the currency recipient (S) is the account number of the recipient account name (S) is the currency name currency (S) is the currency ID issuerAccount (S) is the issuer account ID height (N) is the blockchain height of the transfer timestamp (N) is the timestamp (in seconds since the genesis block) of the transfer block, does not apply to an expected transfer phased (B) is true if the transaction is phased, false otherwise, applies only to an expected transfer issuerAccountRS (S) is the Reed-Solomon address of the issuer account issuerAccount (S) is the issuer account ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Transfers example. Get Expected Currency Transfers Refer to Get Currency Transfers . Get Exchanges Get currency exchanges given a currency and/or an account in reverse chronological order. Request: requestType is getExchanges currency is a currency ID (optional) account is an account ID (optional if currency provided) firstIndex is a zero-based index to the first currency exchange to retrieve (optional) lastIndex is a zero-based index to the last currency exchange to retrieve (optional) timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) includeCurrencyInfo is true to include several currency-related fields (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects with the following fields for each exchange: seller (S) is the seller account number code (S) is the currency code sellerRS (S) is the Reed-Solomon address of the seller account units (S) is the amount of currency exchanged (in QNT) issuanceHeight (N) is the blockchain height of currency issuance for a reservable currency type (N) is the currency type bitmask (refer to Get Currency for details) rateNQT (S) is the currency exchange rate (in NQT per QNT) buyer (S) is the account number of the buyer offer (S) is the offer ID buyerRS (S) is the Reed-Solomon address of the buyer account decimals (N) is the number of decimal places used by the currency name (S) is the currency name currency (S) is the currency ID block (S) is the block ID of the block containing the exchange transaction transaction (S) is the transaction ID of the exchange timestamp (N) is the timestamp (in seconds since the genesis block) of the exchange height is the blockchain height of the block containing the exchange transaction issuerAccountRS (S) is the Reed-Solomon address of the issuer account issuerAccount (S) is the issuer account ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Exchanges example. Get Exchanges By Exchange Request Get currency exchanges given an exchange request transaction ID in reverse chronological order. Request: requestType is getExchangesByExchangeRequest transaction is the transaction ID of the exchange request includeCurrencyInfo is true to include several currency-related fields (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects (refer to Get Exchanges for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Exchanges By Exchange Request example. Get Exchanges By Offer Get currency exchanges given a currency offer ID in reverse chronological order. Request: requestType is getExchangesByOffer offer (S) is a currency offer ID includeCurrencyInfo is true to include several currency-related fields (optional) firstIndex is a zero-based index to the first currency exchange to retrieve (optional) lastIndex is a zero-based index to the last currency exchange to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects (refer to Get Exchanges for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Exchanges By Offer example. Get Last Exchanges Get the last exchange of each of multiple currencies. Request: requestType is getLastExchanges currencies is one of multiple currency IDs currencies is one of multiple currency IDs \u22ee requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects (refer to Get Exchanges without name , decimals , code , issuanceHeight , type , issuerAccountRS and issuerAccount for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Last Exchanges example. Get Minting Target Get the current minting target of a mintable currency. Request: requestType is getMintingTarget currency is the mintable currency ID account is the minting account ID units is the amount (in QNT) of currency to mint requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: units cannot be greater than 1/10000 of the maxSupply (refer to Issue Currency ). Increasing units decreases targetBytes . Response: difficulty (S) is the current difficulty, an estimate of the number of hashes needed to meet the target targetBytes (S) is the 32-byte target (little endian), which must equal or exceed the computed hash of the nonce currency (S) is the currency ID counter (N) is the counter associated with the minting account, the value previously submitted to Currency Mint lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: If a nonce is found such that its hash is less than the target, it can be submitted to the blockchain along with counter + 1 using Currency Mint , which results in units NQT being credited to the minting account. difficulty is inversely related to the target, and so increases exponentially as maxSupply is approached because the target is defined as (2exp-1)/ units , where exp decreases linearly from 256- minDifficulty to 256- maxDifficulty . (Refer to Issue Currency for maxSupply , minDifficulty and maxDifficulty .) Example: Refer to Get Minting Target example. Get Offer Get offer details given an offer ID. Request: requestType is getOffer offer is the offer ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: sellOffer and buyOffer (O) are objects with the following fields: offer (S) is the offer ID expirationHeight (N) is the blockchain height of offer expiration accountRS (S) is the Reed-Solomon address of the offering account -limit_ (S) is the cumulative limit of currency buys or sells currency (S) is the currency ID supply (S) is the current currency supply account (S) is the offering account number height (N) is the blockchain height of offer creation rateNQT (S) is the currency exchange rate (in NQT per QNT) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Offer example. Issue Currency Issue a new currency or re-issue an existing currency with different properties. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is issueCurrency name is the currency name, 3 to 10 characters and longer than the currency code code is the uppercase currency code with the following fee structure: three letters 25000 BLX, four letters 1000 BLX, five letters 40 BLX, re-issue 40 BLX description is the currency description type is the currency type bitmask, from least to most significant bit: exchangeable, controllable, reservable, claimable, mintable, non-shuffleable initialSupply is the initial currency supply (in QNT) (must match maxSupply unless mintable or claimable, must be zero for claimable) reserveSupply is the reserve currency supply (in QNT) (must match maxSupply ) maxSupply is the maximum currency supply (in QNT) issuanceHeight is the blockchain height at which a reservable currency is issued if the reserve minimum is met minReservePerUnitNQT is the minimum currency reserve (in NQT per QNT of reserveSupply ) for issuance of a reservable currency minDifficulty is the minimum difficulty (minimum 1 ) for a mintable currency maxDifficulty is the maximum difficulty (maximum 255 and greater than minDifficulty ) for a mintable currency ruleset is for future use, always set to zero algorithm is an algorithm code for a mintable currency: 2 for SHA256, 3 for SHA3, 5 for Scrypt, 25 for Keccak25 decimals is the number of decimal places used by the currency (optional, default zero) Notes: Reservable requires exchangeable and/or claimable, as does controllable; but mintable requires exchangeable. Claimable requires reservable, non-mintable and zero initialSupply . Response: Refer to Create Transaction Response . The transaction ID is also the currency ID. Example: Refer to Issue Currency example. Publish Exchange Offer Publish an exchange offer for an exchangeable currency. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is publishExchangeOffer currency is the currency ID buyRateNQT is the offered buy rate (in NQT per QNT) sellRateNQT is the offered sell rate (in NQT per QNT) totalBuyLimit is the cumulative limit (in QNT) of currency buys totalSellLimit is the cumulative limit (in QNT) of currency sells initialBuySupply is the initial amount (in QNT) of currency offered to buy, cannot exceed totalBuyLimit initialSellSupply is the initial amount (in QNT) of currency offered to sell, cannot exceed totalSellLimit expirationHeight is the blockchain height for expiration of the offer Notes: Each time currency is bought in response to an exchange request to sell currency (refer to Currency Sell ), totalBuyLimit is reduced and the supply of currency offered to sell increases by the amount bought. When totalBuyLimit becomes zero, the buy offer is withdrawn. These same notes apply if buy and sell are interchanged. Only the most recent offer associated with an account is valid, even if an earlier offer by that account has not yet expired or reached its limits. Response: Refer to Create Transaction Response . The transaction ID is also the offer ID. Example: Refer to Publish Exchange Offer example. Search Currencies Get currencies having a code that matches a given query in reverse relevance order. Request: requestType is searchCurrencies query is a full text query on the currency field code in the standard Lucene syntax firstIndex is a zero-based index to the first currency to retrieve (optional) lastIndex is a zero-based index to the last currency to retrieve (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencies (A) is an array of currency objects (refer to Get Currency for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Currencies example. Transfer Currency Transfer currency to a given recipient. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is transferCurrency recipient is the account ID of the transfer recipient currency is the currency ID units is the amount (in QNT) of the transfer Response: Refer to Create Transaction Response . Example: Refer to Transfer Currency example. Networking Operations Add Peer Add a peer to the list of known peers and attempt to connect to it. Password protected like the Debug Operations . POST only. Request: requestType is addPeer peer is the IP address or domain name of the peer (plus optional port) Response: refer to Get Peer isNewlyAdded is true if the peer was not already known, omitted otherwise Example: Refer to Add Peer example. Blacklist API Proxy Peer Blacklist a remote node from the UI, so it won't be used when in roaming and light client modes. POST only. Request: requestType is blacklistAPIProxyPeer peer is the IP address or domain name of the peer (plus optional port) adminPassword is a string with the admin password (optional) Response: done (B) is true if the peer is blacklisted requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Blacklist API Proxy Peer example. Blacklist Peer Blacklist a peer for the default blacklisting period. Password protected like the Debug Operations . POST only. Request: requestType is blacklistPeer peer is the IP address or domain name of the peer (plus optional port) Response: done (B) is true if the peer is blacklisted requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Blacklist Peer example. Get Inbound Peers Get all peers that have sent a request to this peer in the last 30 minutes. Request: requestType is getInboundPeers includePeerInfo is true to include peer information, otherwise include only the address (optional) Response: peers (A) is an array of peer addresses or peer objects (refer to Get Peer for details) depending on includePeerInfo requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Inbound Peers example. Get My Info Get hostname and address of the requesting node. Request: requestType is getMyInfo Response: host (S) is the node hostname address (S) is the node address requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get My Info example. Get Peer Get information about a given peer. Request: requestType is getPeer peer is the IP address or domain name of the peer (plus optional port) Response: hallmark (S) is the hex string of the peer's hallmark, if it is defined downloadedVolume (N) is the number of bytes downloaded by the peer address (S) the IP address or DNS name of the peer weight (N) is the peer's weight value uploadedVolume (N) is the number of bytes uploaded by the peer version (S) is the version of the software running on the peer platform (S) is a string representing the peer's platform lastUpdated (N) is the timestamp (in seconds since the genesis block) of the last peer status update blacklisted (B) is true if the peer is blacklisted services (A) is an array of strings with the services the node provides blacklistingCause (S) is the cause of blacklisting (if blacklisted is true ) announcedAddress (S) is the name that the peer announced to the network (could be a DNS name, IP address, or any other string) application (S) is the name of the software application, typically NRS state (N) defines the state of the peer: 0 for NON-cONNECTED, 1 for CONNECTED, or 2 for DISCONNECTED shareAddress (B) is true if the address is allowed to be shared with other peers inbound (B) is true if the peer has made a request to this node inboundWebSocket (B) is true if an inbound websocket has been established from this node outboundWebSocket (B) is true if an outbound websocket has been established to this node lastConnectAttempt (B) is the timestamp (in seconds since the genesis block) of the last connection attempt to the peer requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Peer example. Get Peers Get a list of peer IP addresses. Request: requestType is getPeers active is true for active (not NON-cONNECTED) peers only (optional, if true overrides state ) state is the state of the peers, one of NON-cONNECTED , -cONNECTED_, or -dISCONNECTED_ (optional) includePeerInfo is true to include peer detail as in Get Peer service to filter on a specific service Note: If neither active nor state is specified, all known peers are retrieved. Response: peers (A) is an array of peer addresses requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Peers example. Set API Proxy Peer Set the remote node to use when in roaming and light client modes. POST only. Request: requestType is setAPIProxyPeer peer is the IP address or domain name of the peer (plus optional port) adminPassword is a string with the admin password (optional) Response: downloadedVolume (N) is the number of bytes downloaded by the peer address (S) the IP address or DNS name of the peer weight (N) is the peer's weight value uploadedVolume (N) is the number of bytes uploaded by the peer version (S) is the version of the software running on the peer platform (S) is a string representing the peer's platform blockchainState (S) is a string describing the state of the blockchain in the peer lastUpdated (N) is the timestamp (in seconds since the genesis block) of the last peer status update blacklisted (B) is true if the peer is blacklisted services (A) is an array of strings with the services the node provides apiPort (N) is the API access port of the peer apiSSLPort (N) is the SSL API access port of the peer blacklistingCause (S) is the cause of blacklisting (if blacklisted is true ) announcedAddress (S) is the name that the peer announced to the network (could be a DNS name, IP address, or any other string) application (S) is the name of the software application, typically NRS state (N) defines the state of the peer: 0 for NON-CONNECTED, 1 for CONNECTED, or 2 for DISCONNECTED shareAddress (B) is true if the address is allowed to be shared with other peers inbound (B) is true if the peer has made a request to this node inboundWebSocket (B) is true if an inbound websocket has been established from this node outboundWebSocket (B) is true if an outbound websocket has been established to this node lastConnectAttempt (B) is the timestamp (in seconds since the genesis block) of the last connection attempt to the peer requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Set API Proxy Peer example. Phasing Operations Approve Transaction Approve (vote for) a phased transaction. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is approveTransaction transactionFullHash is the full hash of the transaction to be approved (may be used up to 10 times per API request) revealedSecret is the secret phrase (required only for phasingVotingModel 5 , refer to Create Phasing Poll ) revealedSecretIsText is a way of specifying whether revealedSecret is text or binary. Note: This transaction will be accepted in the blockchain only if all phased transactions it is voting for are already in it. Response: Refer to Create Transaction Response . Example: Refer to Approve Transaction example. Create Phasing Poll Create a phased transaction with conditional deferred execution based on the result of a vote, on a list of linked transactions or on the revelation of a secret; or simply with unconditional deferred execution. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is any type from the Create Transaction list which is phasing-safe, indicated with italics such as -send Money_ phased is true to create a phased transaction (optional but required for all of the following parameters, which are all optional for unphased transactions) phasingFinishHeight is the block height at which the poll will finish; the transaction will be executed at this block height only if all conditions (if any) have been met, otherwise the transaction will never be executed phasingVotingModel is an integer code for the method of approval: -1 for None 0 for Vote By Account 1 for Vote By Account Balance 2 for Vote By Asset Balance 3 for Vote By Currency Balance 4 for -by Linked Transactions_ 5 for -by Secret_ phasingQuorum is the number of \"votes\" needed for transaction approval (required if phasingVotingModel >= 0 , default 0 ): 0 for voting model -1 the number of accounts for model 0 total NQT for model 1 total QNT for models 2 and 3 the number of transactions for model 4 1 for model 5 phasingMinBalance is the minimum balance (in NQT or QNT) required for voting (optional, default 0 ) phasingMinBalanceModel is (required if phasingMinBalance > 0 , must match phasingVotingModel when phasingVotingModel = 1 , 2 or 3 ): 1 for BLX balance 2 for an asset balance 3 for a currency balance phasingHolding is the asset or currency ID (required if phasingMinBalanceModel = 2 or 3 ) phasingWhitelisted is the account ID of an account allowed to vote for the transaction; once used, only whitelisted accounts are allowed to vote (optional, may be used up to ten times per API request) phasingLinkedFullHash is the full hash of a transaction that must be in the blockchain at the phasingFinishHeight ; transactions already in the blockchain before the acceptance of the phased transaction can also be linked, as long as they are not more than 60 days old, or themselves phased transactions (required only for voting model 4 , may be used up to ten times per API request) phasingHashedSecret is the hash of a secret phrase (up to 100 bytes long) required for approval (required only for voting model 5 ) phasingHashedSecretAlgorithm is the hash function used: 2 for SHA256, 6 for RIPEMD160 and 62 for SHA256 followed by RIPEMD160, according to Get Constants (required for a phasingHashedSecret ) Note: When a balance affects the poll result, the result depends only on the balance (including pending outgoing phased transfers) computed just prior to the finish height. Response: Refer to Create Transaction Response . Example: Refer to Create Phasing Poll example. Get Account Phased Transaction Count Get the number of pending phased transactions associated with an account given the account ID. Request: requestType is getAccountPhasedTransactionCount account is the account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfPhasedTransactions (N) is the number of pending phased transactions lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Phased Transaction Count example. Get Account Phased Transactions Get pending phased transactions associated with an account given the account ID in reverse chronological creation order. Request: requestType is getAccountPhasedTransactions account is the account ID firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for details. Example: Refer to Get Account Phased Transactions example. Get Asset Phased Transactions Get pending phased transactions based on an asset in reverse chronological creation order. These transactions can be considered transaction approval requests. Request: requestType is getAssetPhasedTransactions asset is the asset ID account is an account ID of the account that created the phased transactions (optional) withoutWhitelist is true to omit phased transactions that include a whitelist (optional) firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for details. Example: Refer to Get Asset Phased Transactions example. Get Currency Phased Transactions Get pending phased transactions based on a currency in reverse chronological creation order. These transactions can be considered transaction approval requests. Request: requestType is getCurrencyPhasedTransactions currency is the currency ID account is an account ID of the account that created the phased transactions (optional) withoutWhitelist is true to omit phased transactions that include a whitelist (optional) firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for details. Example: Refer to Get Currency Phased Transactions example. Get Linked Phased Transactions Gets the phased transactions with by-transaction voting model for a given linkedFullHash, regardless of their phasing status (pending, approved or rejected). Since the corresponding table is trimmed after finish height however, the result will not include those transactions that finished before the last trimming height. Request: requestType is getLinkedPhasedTransactions -linkedFullHash_ is the full hash of the transaction transaction requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of transactions (refer to Get Transaction for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Linked Phased Transactions example. Get Phasing Poll Get the details of a phasing poll. Request: requestType is getPhasingPoll transaction is the transaction ID of the phasing poll countVotes is true to compute the poll result while the votes are still available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transaction (S) is the transaction ID of the phasing poll account (S) is the number of the account that created the phasing poll accountRS (S) is the Reed-Solomon address of the account that created the phasing poll finishHeight (N) is the block height at which the poll finished or will finish votingModel (N) is the voting model (refer to Create Transaction Request ) quorum (S) is the minimum number of votes needed to approve the poll transactionFullHash (S) is the full hash of the phasing poll transaction finished (B) is true if the poll is finished, false otherwise (omitted if finished is false ) result (S) is the sum of the result of each account that approved (voted for) the transaction; an account's result is 1 if the voting model is 0 , 4 or 5 ; it is the NQT, asset QNT or currency QNT balance of the account if the voting model is 1 , 2 or 3 respectively; however, the result is 0 if minBalance is not met approved (B) is true if the poll was approved, false otherwise minBalance (S) is the required minimum balance of voting accounts to be eligible to vote minBalanceModel (N) is the minimum balance model (refer to Create Transaction Request ) hashedSecret (S) is the hash of a secret that must be included in each approval (vote) transaction for the approval to be accepted (refer to Create Transaction Request ) -linkedFullHashes_ (A) is an array of full hashes of linked transactions (omitted if votingModel != 4 ) whitelist (A) is an array of whitelist objects containing the following two fields (omitted if votingModel != 5 ): whitelisted (S) is the number of the whitelisted account whitelistedRS (S) is the Reed-Solomon address of the whitelisted account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Phasing Poll example. Get Phasing Poll Vote Get a cast phasing poll vote given a phased transaction ID and an account ID of a voter, if it is still available. Request: requestType is getPhasingPollVote transaction is the phased transaction ID account is the account ID of a voter in the poll requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: voter (S) is the account ID of the voter in the poll voterRS (S) is the Reed-Solomon address of the voter transaction (S) is the phased transaction ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Phasing Poll Vote example. Get Phasing Poll Votes Get all cast phasing poll votes in a phasing poll given a phased transaction ID, if they are still available. Request: requestType is getPhasingPollVotes transaction is the phased transaction ID firstIndex is a zero-based index to the first vote to retrieve (optional) lastIndex is a zero-based index to the last vote to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Phasing Poll Vote Example: Refer to Get Phasing Poll Votes example. Get Phasing Polls Get phasing poll details given multiple phased transaction IDs. Request: requestType is getPhasingPolls transaction is one of the multiple phased transaction IDs transaction is one of the multiple phased transaction IDs \u22ee countVotes is true to compute the poll result while the votes are still available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Phasing Poll . Example: Refer to Get Phasing Polls example. Get Voter Phased Transactions Get pending phased transactions which include a whitelist in reverse chronological creation order. These transactions can be considered transaction approval requests. Request: requestType is getVoterPhasedTransactions account is a whitelisted account ID included in the phased transactions firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for details. Example: Refer to Get Voter Phased Transactions example. Server Information Operations Event Register Create, modify or remove an event listener which can report server events via Event Wait . POST only. Request: requestType is eventRegister event is one of multiple server events from the following list of event names: (optional, default is all possible events) Block.BLOCK-GENERATED Block.BLOCK-POPPED Block.BLOCK-PUSHED Peer.ADD-INBOUND Peer.ADDED-ACTIVE-PEER Peer.BLACKLIST Peer.CHANGED-ACTIVE-PEER Peer.DEACTIVATE Peer.NEW-PEER Peer.REMOVE Peer.REMOVE-INBOUND Peer.UNBLACKLIST Transaction.ADDED-CONFIRMED-TRANSACTIONS Transaction.ADDED-UNCONFIRMED-TRANSACTIONS Transaction.REJECT-PHASED-TRANSACTION Transaction.RELEASE-PHASED-TRANSACTION Transaction.REMOVE-UNCONFIRMED-TRANSACTIONS event is one of multiple server events (optional) add is true to add events to an existing listener (optional, omit if remove is true ) remove is true to remove events from an existing listener (optional, omit if add is true ) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: To create a new event listener, omit both add and remove . To remove an existing event listener, set remove to true and omit event ; all registered events will be removed, any outstanding Event Wait will be completed and the listener will be deactivated. Note: An event listener is automatically deactivated whenever all registered events are removed or if Event Wait is not called frequently enough, according to the nxt.apiEventTimeout property. The timeout is not precise; the removal process runs every nxt.apiEventTimeout / 2 seconds, so that many extra seconds may elapse before removal; the first Event Wait call should be made immediately after registration to avoid deactivation. Note: Each API user (with a unique address) can create only one event listener. When a new one is created, it will replace an existing one. The maximum number of unique users is controlled by the nxt.maxEventUsers property. Response: registered is true if the operation completed successfully lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Event Register example. Event Wait Wait for events registered with Event Register . POST only. Request: requestType is eventWait timeout is the amount of time (in seconds) to wait for an event before the call returns (optional, default and maximum is the nxt.apiEventTimeout property) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Notes: The call returns immediately if one or more events have occurred since the last call; multiple events are all returned together. If a new call is made before the last one returns, the timeout timer resets to the new value. Event registration expires if wait calls are not made frequently enough, according to the nxt.apiEventTimeout property. Response: events (A) is an array of event objects each of which has the following fields: name (S) is the name of the event (refer to Event Register for the list of event names) ids (A) is an array of identifiers, depending on the type of event: block string identifier (S) for a block event peer network address (S) for a peer event transaction string identifier (S) for a transaction event lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Event Wait example. Get Blockchain Status Get the blockchain status. Request: requestType is getBlockchainStatus Response: currentMinRollbackHeight (N) is the current minimum rollback height numberOfBlocks (N) is the number of blocks in the blockchain (height + 1) isTestnet (B) is true if the node is connected to testnet, false otherwise includeExpiredPrunable (B) is the value of the nxt.includeExpiredPrunable property requestProcessingTime (N) is the API request processing time (in millisec) version (S) is the application version maxRollback (N) is the value of the nxt.maxRollback property lastBlock (S) is the last block ID on the blockchain application (S) is application name, typically NRS isScanning (B) is true if the blockchain is being scanned by the application, false otherwise isDownloading (B) is true if a download is in progress, false otherwise; true when a batch of more than 10 blocks at once has been downloaded from a peer, reset to false when an attempt to download more blocks from a peer does not result in any new blocks cumulativeDifficulty (S) is the cumulative difficulty lastBlockchainFeederHeight (N) is the height of the last blockchain of greatest cumulative difficulty obtained from a peer maxPrunableLifetime (N) is the maximum prunable lifetime (in seconds) time (N) is the current timestamp (in seconds since the genesis block) lastBlockchainFeeder (S) is the address or announced address of the peer providing the last blockchain of greatest cumulative difficulty blockchainState (S) Current state of this node's blockchain (UP-TO-DATE or DOWNLOADING) Example: Refer to Get Blockchain Status example. Get Constants Get all defined constants. Request: requestType is getConstants Response: maxBlockPayloadLength (N) is the maximum block payload length (in bytes) maxArbitraryMessageLength (N) is the maximum length (in bytes) of an arbitrary message maxPrunableMessageLength (N) is the maximum length (in bytes) of a prunable message maxTaggedDataDataLength (N) is the maximum length (in bytes) of tagged data maxPhasingDuration (N) is the maximum allowed phasing duration in block height epochBeginning (N) is the time in milliseconds when genesis block was created genesisAccountId (S) is the genesis account number genesisBlockId (S) is the genesis block ID transactionTypes (A) is an array of defined transaction types and subtypes (refer to the example below) transactionSubTypes (A) is an array of defined transaction subtypes and subtypes (refer to the example below) peerStates (A) is an array of defined peer states (refer to the example below) currencyTypes (A) is an array of defined currency types (refer to the example below) disabledAPIs (A) is an array of configured disabled apis (refer to the example below) apiTags (A) is an array of defined api tags (refer to the example below) disabledAPITags (A) is an array of configured disabled api tags (refer to the example below) votingModels (A) is an array of defined voting models (refer to the example below) holdingTypes (A) is an array of defined holding types (refer to the example below) minBalanceModels (A) is an array of defined minimum balance models (refer to the example below) shufflingStages (A) is an array of defined shuffling stages (refer to the example below) shufflingParticipantStates (A) is an array of defined shuffling participant states (refer to the example below) hashAlgorithms (A) is an array of defined hash algorithms (refer to the example below) mintingHashAlgorithms (A) is an array of defined minting hash algorithms (refer to the example below) phasingHashAlgorithms (A) is an array of defined phasing hash algorithms (refer to the example below) requestTypes (A) is an array of decined request types (refer to the example below) Get Plugins Get a list of all installed plugins on the server. Request: requestType is getPlugins Response: plugins (A) is an array of plugin names (S) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Plugins example. Get State Get the state of the server node and network. Request: requestType is getState includeCounts is true if the fields beginning with numberOf... are to be included (optional); password protected like the Debug Operations if true . Response: numberOfPeers (N) is the number of known peers on the network numberOfGoods (N) is the number of DGS goods in the blockchain numberOfPolls (N) is the number of polls in the blockchain numberOfUnlockedAccounts (N) is the number of unlocked accounts on this node numberOfTransfers (N) is the number of AE transfers in the blockchain includeExpiredPrunable (B) is the value of the nxt.includeExpiredPrunable property numberOfOrders (N) is the number of AE orders in the blockchain numberOfTransactions (N) is the number of transactions in the blockchain maxMemory (N) is the maximum amount of memory the node may use (in Bytes) maxRollback (N) is the value of the nxt.maxRollback property numberOfOffers (N) is the number of buy currency offers in the blockchain isDownloading (B) is true if a download is in progress, false otherwise; true when a batch of more than 10 blocks at once has been downloaded from a peer, reset to false when an attempt to download more blocks from a peer does not result in any new blocks isScanning (B) is true if this node is scanning the blockchain, false otherwise cumulativeDifficulty (S) is the current cumulative forging difficulty numberOfCurrencies (N) is the number of currencies in the blockchain numberOfAssets (N) is the number of AE assets in the blockchain numberOfPrunableMessages (N) is the number of prunable messages in the blockchain freeMemory (N) is the amount of free memory on this node (in Bytes) peerPort (N) is the port used for connecting to peers numberOfVotes (N) is the number of votes in the blockchain availableProcessors (N) is the number of processors on this node numberOfTaggedData (N) is the number of tagged data in the blockchain numberOfActiveAccountLeases (N) is the number of active account leases in the blockchain numberOfAccountLeases (N) is the total number of account leases including scheduled leases (first scheduled lease only) in the blockchain numberOfAccounts (N) is the number of accounts in the blockchain numberOfDataTags (N) is the number of data tags in the blockchain needsAdminPassword (B) is true if the nxt.disableAdminPassword property is false currentMinRollbackHeight (N) is the current minimum rollback height numberOfBlocks (N) is the number of blocks (height + 1) in the blockchain isTestnet (B) is true if the node is connected to testnet, false otherwise numberOfCurrencyTransfers (N) is the number of currency transfers in the blockchain requestProcessingTime (N) is the API request processing time (in millisec) numberOfPhasedTransactions (N) is the number of phased transactions in the blockchain version (S) is the software version on this node numberOfBidOrders (N) is the number of AE bid orders in the blockchain lastBlock (S) is the last block address totalMemory (N) is the amount of memory this node is using (in Bytes) application (S) is the name of the software running on this node (typically NRS ) numberOfAliases (N) is the number of aliases in the blockchain numberOfActivePeers (N) is the number of active peers on the network lastBlockchainFeederHeight (N) is the height of the last blockchain feeder maxPrunableLifetime (N) is the maximum prunable lifetime (in seconds) numberOfExchanges (N) is the number of currency exchanges in the blockchain numberOfTrades (N) is the number of AE trades in the blockchain numberOfPurchases (N) is the number of DGS purchases in the blockchain numberOfTags (N) is the number of DGS tags in the blockchain time (N) is the current node time (in seconds since the genesis block) numberOfAskOrders (N) is the number of AE ask orders in the blockchain lastBlockchainFeeder (S) is the announced name of the feeder of the last blockchain isOffline (B) is true if this node is connected to other peers, false otherwise Note: AE is Asset Exchange, DGS is Digital Goods Store Example: Refer to Get State example. Get Time Get the current time. Request: requestType is getTime Response: time (N) is the current time (in seconds since the genesis block). requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Time example. Shuffling Operations Coin shuffling can be used to perform mixing of BLX, MS currencies (unless created as non-shuffleable), or AE assets. Any account can create a new shuffling, specifying the holding to be shuffled, the shuffle amount, number of participants required, and registration deadline. Get Account Shufflings Retrieves info about shufflings for a specific account. Request: requestType is getAccountShufflings account is the account ID includeFinished is true to include completed shufflings (optional) includeHoldingInfo is true to include holding info (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) shufflings (A) is an array containing the shuffling object (refer to Get Shuffling ) Example: Refer to Get Account Shufflings example. Get All Shufflings Retrieves info about all shufflings. Request: requestType is getAllShufflings includeFinished is true to include completed shufflings (optional) includeHoldingInfo is true to include holding info (optional) finishedOnly is true to omit not yet finished shufflings (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) shufflings (A) is an array containing the shuffling object (refer to Get Shuffling ) Example: Refer to Get All Shufflings example. Get Assigned Shufflings Retrieves info about a shufflings that are currently assigned to a specific account. Request: requestType is getAssignedShufflings account is the account ID includeHoldingInfo is true to include holding info (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) shufflings (A) is an array containing the shuffling object (refer to Get Shuffling ) Example: Refer to Get Assigned Shufflings example. Get Holding Shufflings Retrieves info about shufflings for a specific holding and/or stage. Request: requestType is getHoldingShufflings holding is the holding ID (optional) stage is the stage of the shuffling (See Get Constants for type definitions) (optional) includeFinished is true to include completed shufflings (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) shufflings (A) is an array containing the shuffling object (refer to Get Shuffling ) Example: Refer to Get Holding Shufflings example. Get Shufflers Retrieves info about active shufflers on the current node. Request: requestType is getShufflers account is account ID (optional) shufflingFullHash is shuffling full hash (optional) secretPhrase is secret phrase of the account doing the shuffling (required if adminPassword is not provided) adminPassword is the admin password (required if secretPhrase is not provided) includeParticipantState to include each shuffling participant's state (optional) Response: shufflers (A) is an array containing all currently running shuffling processes on the node. account (S) is account ID accountRS (S) is the account Reed Solomon address recipient (S) is the recipient account ID to where the funds will be sent once the shuffling is completed recipientRS (S) is the recipient account Reed Solomon address to where the funds will be sent once the shuffling is completed shuffling (S) is the shuffling ID shufflingFullHash (S) is the shuffling full hash participantState (N) is the state for the participant (For more info, see shufflingParticipantStates array in Get Constants ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Shufflers example. Get Shuffling Retrieves info about a shuffling. Request: requestType is getShuffling shuffling is the shuffling ID includeHoldingInfo is true to include holding info (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: blocksRemaining (N) number of blocks remaining until current stage is finished. amount (S) the amount of holdingType to be shuffled shufflingStateHash (S) state hash of the shuffling shufflingFullHash (S) the full hash of the shuffling issuer (S) is the issuer account ID issuerRS (S) is the Reed-Solomon address of the issuer account assignee (S) is the current assignee account ID assigneeRS (S) is the Reed-Solomon address of the current assignee account shuffling (S) is the shuffling ID holding (S) is the asset or currency ID holdingType (N) is the holding type (See Get Constants for type definitions) stage (N) is the current stage of the shuffling (See Get Constants for type definitions) participantCount (N) is the number of participants required to start the shuffling registrantCount (N) is the number of registrered participants recipientPublicKeys (A) is an array of recipient public keys holdingInfo (A) is an array containing the asset or currency info (if includeHoldingInfo is true and holdingType is not Blue0x) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Shuffling example. Get Shuffling Participants Retrieves info about participants in a shuffling. Request: requestType is getShufflingParticipants shuffling is the shuffling ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: participants (A) shuffling (S) is the shuffling ID account (S) is the account ID accountRS (S) is the account Reed Solomong address state (N) is the state for the participant (For more info, see shufflingParticipantStates array in Get Constants ) nextAccount (S) is the account ID of the next account in turn nextAccountRS (S) is the account Reed Solomon address of the next account in turn requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Shuffling Participants example. Shuffling Cancel Cancels a shuffling Request: Refer to Create Transaction Request for common parameters. requestType is shufflingCancel shuffling is the shuffling ID shufflingStateHash is the state hash of the shuffling cancellingAccount is the account ID (optional) Response Refer to Create Transaction Response . Shuffling Create Creates a new shuffling. Request: Refer to Create Transaction Request for common parameters. requestType is shufflingCreate holding is the holding id (optional if holdingType is 0) holdingType is the holding type (See Get Constants for type definitions) (optional) amount is the amount of the holding to shuffle participantCount is the number of participants registrationPeriod is the number of blocks the participants have to register until the shuffle is cancelled Response Refer to Create Transaction Response . Example: Refer to Shuffling Create example. Shuffling Process Manually process the shuffling for a specific participant. Note that the shuffling must be in processing stage and the secretPhrase must match the current shuffling assignee. Request: Refer to Create Transaction Request for common parameters. requestType is shufflingProcess shuffling is the shuffling ID recipientSecretPhrase is the secret phrase of the recipient account (optional if recipientPublicKey is provided) recipientPublicKey is the public key of the recipient account (optional if recipientSecretPhrase is provided) Response Refer to Create Transaction Response . Example: Refer to Shuffling Process example. Shuffling Register Registers a new participant to an existing shuffling. The shuffling must be in stage registration. Request: Refer to Create Transaction Request for common parameters. requestType is shufflingRegister shufflingFullHash is the full hash of the shuffling to register Response Refer to Create Transaction Response . Example: Refer to Shuffling Register example. Shuffling Verify Sends a verification that an account's recipient public key is found within a shuffling. Request: Refer to Create Transaction Request for common parameters. requestType is shufflingVerify shuffling is the shuffling ID shufflingStateHash is the current state hash of the shuffle Response Refer to Create Transaction Response . Example: Refer to Shuffling Verify example. Start Shuffler Starts a automated Shuffler. Once started, the Shuffler monitors the blockchain state for transactions relevant to the specified shuffle, and automatically submits the required transactions on behalf of the user, performing shuffle processing, verification, or cancellation as needed. Request: requestType is startShuffler secretPhrase is the secret phrase of the account entering the shuffling shufflingFullHash the full hash of the shuffling recipientSecretPhrase the secret phrase of the recipient account (optional if recipientPublicKey is present) recipientPublicKey the public key of the recipient account (optional if recipientSecretPhrase is present) Response shuffling (S) is the shuffling ID shufflingFullHash (S) is the full hash of the shuffling account (S) is the account ID accountRS (S) is the account Reed Solomong address recipient (S) is the account ID of the recipient account recipientRS (S) is the account Reed Solomon address of the recipient account requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Start Shuffler example. Stop Shuffler Stops a previously started automated Shuffler. Request: requestType is stopShuffler account is the account ID (optional if shufflingFullHash or secretPhrase or adminPassword is provided) shufflingFullHash the full hash of the shuffling (optional if account or adminPassword is provided) secretPhrase is the secret phrase of the account entering the shuffling (optional if adminPassword is provided) adminPassword is the admin password (optional if secretPhrase is provided) Response stoppedShuffler (B) means the specified shuffler was stopped stoppedAllShufflers (B) means all shufflers on the node was stopped (only if adminPassword is provided in request) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Stop Shuffler example. Tagged Data Operations Tagged data are similar to prunable plain messages without a recipient, but with additional searchable metadata fields. Download Tagged Data Download tagged data as a file if it is still available. Request: requestType is downloadTaggedData transaction is the transaction ID of the tagged data retrieve is true to retrieve pruned data from other nodes if not available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: The downloaded data file named nxt , unless there is an error in the request. Example: Refer to Download Tagged Data example. Extend Tagged Data Extend the expiration time of already uploaded tagged data. POST only. Request: requestType is extendTaggedData transaction is the transaction ID of the tagged data data is the tagged data (optional) file is the pathname of a data file to upload (optional if data provided) filename name description tags type channel isText Note: The data and metadata ( filename , name , description , tags , type , channel and isText ) parameters can be omitted if the tagged data has not yet expired; otherwise, the tagged data can be restored to the blockchain only if these fields have exactly the same values as when the data was uploaded (refer to Upload Tagged Data ). Note: Anyone can submit an extension, not only the original uploader. Each extend transaction increases the expiration deadline by two weeks (24 hours on Testnet). Extending an existing tagged data from another account does not change the original submitter account ID by which it is indexed and searchable. Response: Refer to Create Transaction Response . Example: Refer to Extend Tagged Data example. Get Account Tagged Data Get all available tagged data uploaded by a given account in reverse chronological order. Request: requestType is getAccountTaggedData account is the account ID includeData is true to include data (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (A) is an array of tagged data objects (refer to Get Tagged Data with hash omitted for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Tagged Data example. Get All Tagged Data Get all available tagged data in reverse chronological order. Request: requestType is getAllTaggedData includeData is true to include data (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (A) is an array of tagged data objects (refer to Get Tagged Data with hash omitted for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Tagged Data example. Get Channel Tagged Data Get available tagged data by channel, optionally filtered by account, in reverse chronological order. Request: requestType is getChannelTaggedData channel is the channel string account is an account ID (optional) includeData is true to include data (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (A) is an array of tagged data objects (refer to Get Tagged Data with hash omitted for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Channel Tagged Data example. Get Data Tag Count Get the total number of distinct available data tags. Request: requestType is getDataTagCount requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfDataTags (N) is the total number of distinct data tags lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Data Tag Count example. Get Data Tags Get the distinct tags of all available tagged data, with the number of uses of each tag, in order of number of uses, then alphabetical order. Request: requestType is getDataTags firstIndex is a zero-based index to the first tag to retrieve (optional) lastIndex is a zero-based index to the last tag to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: tags (A) is an array of tag objects including the fields: tag (S) is a tag word count (N) is the number of uses of tag among all tagged data lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Data Tags example. Get Data Tags Like Prefix search of available data tags, return in alphabetical order. Request: requestType is getDataTagsLike tagPrefix is the prefix to search for (2 character minimum) among all data tags firstIndex is a zero-based index to the first tag to retrieve (optional) lastIndex is a zero-based index to the last tag to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: tags (A) is an array of tag objects including the fields: tag (S) is a tag word count (N) is the number of uses of tag among all tagged data lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Data Tags Like example. Get Tagged Data Get available tagged data given a transaction ID. Request: requestType is getTaggedData transaction is the transaction ID includeData is true to include data (optional) retrieve is true to retrieve pruned data from other nodes if not available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (S) is the tagged data hash (S) is the hash of the tagged data filename (S) is the metadata filename field name (S) is the metadata name field description (S) is the metadata description field tags (S) is the metadata tags field parsedTags (A) is an array of tag words (S) parsed from tags type (S) is the metadata type field channel (S) is the metadata channel field isText (B) is the metadata isText field account (S) is the number of the account that originally uploaded the tagged data accountRS (S) is the Reed-Solomon address of the uploading account transaction (S) is the transaction ID transactionTimestamp (N) is the transaction timestamp (in seconds since the genesis block) blockTimestamp (N) is the block timestamp (in seconds since the genesis block) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: Refer to Upload Tagged Data for details about the data and metadata ( filename , name , description , tags , type , channel and isText ) fields. Example: Refer to Get Tagged Data example. Get Tagged Data Extend Transactions Retrieves all tagged data extend transactions for a given tagged data upload transaction. Request: requestType is getTaggedDataExtendTransactions requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: extendTransactions (A) is an array of transactions requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Tagged Data Extend Transactions example. Search Tagged Data Full text search on available tagged data name, description and tags; optionally filtered by tag, channel or uploading account; return in reverse relevance order. Request: requestType is searchTaggedData query is a full text query on the metadata fields name (S), description (S) and tags (S) in the standard Lucene syntax tag is a word in the tags string (optional) channel is a channel string (optional) account is an account ID (optional) includeData is true to include data (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (A) is an array of tagged data objects (refer to Get Tagged Data with hash omitted for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Tagged Data example. Upload Tagged Data Upload and broadcast new tagged data. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is uploadTaggedData data is the data (optional) file is the pathname of a data file to upload (optional if data provided) filename is a filename to associate with data (optional if file uploaded in which case the uploaded filename is always used) name is the name or title of data (optional if file uploaded in which case the uploaded filename is used, but name takes precedence if provided) description is a description of data (optional) tags is a list of up to 5 words from 3 to 20 characters long and separated by spaces and/or commas, describing the actual content of data ; for example: audio,mp3,classical (optional) type is the mime type of data such as torrent , pdf , doc , image , etc. (optional) channel is a data feed label such as pirate bay torrents , wikileaks , etc. (optional) isText is false if data is a hex string (optional) Note: The maximum length of data plus all associated metadata is 42 kilobytes. The maximum length of description is 1000 bytes. The maximum length of the other metadata ( name , tags , type , channel and filename ) is 100 bytes each. Response: Refer to Create Transaction Response . Example: Refer to Upload Tagged Data example. Verify Tagged Data Verify expired tagged data downloaded from another node, against the hash in the blockchain. Request: requestType is verifyTaggedData transaction is the transaction ID of the tagged data data is the tagged data (optional) file is the pathname of a data file to upload (optional if data provided) filename name description tags type channel isText requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: The data and metadata ( filename , name , description , tags , type , channel and isText ) must have exactly the same values as when the data was uploaded (refer to Upload Tagged Data ). Response: verify (B) is true if the hash of the provided data and metadata matches the hash in the blockchain hash (S) is the hash of the tagged data lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) version.TaggedDataUpload (N) is 1 , the version number Note: This call returns an error if there is a hash mismatch. Example: Refer to Verify Tagged Data example. Token Operations Decode File Token Validate a file token without requiring the transmission of a secret passphrase. POST only. Request: requestType is decodeFileToken file is the path to the file that was signed token is the token of the file , as generated by Generate File Token Response: account (S) is the account number that generated the token accountRS (S) is the Reed-Solomon address of the account timestamp (N) is the time (in seconds since the genesis block) that the token was generated valid (B) is true if token is valid, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) Note: Since token contains the token generator's public key and digital signature, file can be validated as signed by the owner of the public key, and the public key determines the account ID. Example: Refer to Decode File Token example. Decode Token Validate a token without requiring the transmission of a secret passphrase. Request: requestType is decodeToken website is the signed text, typically an authorized URL token is the token generated by Generate Token Response: account (S) is the account number that generated the token accountRS (S) is the Reed-Solomon address of the account timestamp (N) is the time (in seconds since the genesis block) that the token was created valid (B) is true if token is valid, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) Note: Since token contains the token generator's public key and digital signature, website can be validated as authorized by the owner of the public key, and the public key determines the account ID. Example: Refer to Decode Token example. Generate File Token Generate a file token. POST only. Request: requestType is generateFileToken secretPhrase is the passphrase of the account generating the token file is the path to the file to be signed Response: token (S) is a 160 character string representing the 100-byte token which consists of a 32-byte public key, a 4-byte timestamp, and a 64-byte digital signature account (S) is the account number corresponding to secretPhrase accountRS (S) is the Reed-Solomon address of the account timestamp (N) is the time (in seconds since the genesis block) that the token was generated valid (B) is true if token is valid, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) Note: Since token contains the token generator's public key and digital signature, the file can be validated as digitally signed by the owner of the public key using Decode File Token . Example: Refer to Generate File Token example. Generate Token Generate a token. POST only. Request: requestType is generateToken secretPhrase is the passphrase of the account generating the token website is a web site URL for which authorization should be granted, or general text to be digitally signed Note: website is typically a URL (with the leading https:// unnecessary) that an account owner signs with his secretPhrase (private key) to bind the account to the URL, but website can be any text that the owner wishes to sign. Response: token (S) is a 160 character string representing the 100-byte token which consists of a 32-byte public key, a 4-byte timestamp, and a 64-byte signature account (S) is the account number corresponding to secretPhrase accountRS (S) is the Reed-Solomon address of the account timestamp (N) is the time (in seconds since the genesis block) that the token was generated valid (B) is true if token is valid, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) Note: Since token contains the token generator's public key and signature, the website can be validated as authorized by the owner of the public key using Decode Token . Example: Refer to Generate Token example. Transaction Operations Broadcast Transaction Broadcast a transaction to the network. POST only. Request: requestType is broadcastTransaction transactionBytes is the bytecode of a signed transaction (optional) transactionJSON is the transaction object (optional if transactionBytes provided) prunableAttachmentJSON is the attachment object embedded in transactionJSON containing a prunable message (required if transactionJSON not provided because transactionBytes never includes prunable data) Response: requestProcessingTime (N) is the API request processing time (in millisec) fullHash (S) is the full hash of the signed transaction transaction (S) is the transaction ID Example: Refer to Broadcast Transaction example. Calculate Full Hash Calculate the full hash of a transaction. Request: requestType is calculateFullHash unsignedTransactionJSON is the unsigned transaction JSON object (optional) unsignedTransactionBytes are the unsigned bytes of a transaction (optional if unsignedTransactionJSON is provided) signatureHash is a SHA-256 hash of the transaction signature Response: requestProcessingTime (N) is the API request processing time (in millisec) fullHash (S) is the full hash of the signed transaction Example: Refer to Calculate Full Hash example. Get Expected Transactions Returns the non-phased unconfirmed transactions expected to be included in the next block (only), plus the phased transactions scheduled to finish in that block (whether approved or not). Request: requestType is getExpectedTransactions account is one account ID (optional) account is one account ID (optional) \u22ee requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: expectedTransactions (A) is an array of expected transactions (refer to Get Transaction for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Expected Transactions example. Get Referencing Transactions Gets the transactions referencing a given transaction id. Request: requestType is getReferencingTransactions transaction is one transaction ID firstIndex is a zero-based index to the first block ID to retrieve (optional) lastIndex is a zero-based index to the last block ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of transactions (refer to Get Transaction for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Referencing Transactions example. Get Transaction Get a transaction object given a transaction ID. Request: requestType is getTransaction transaction is the transaction ID (optional) fullHash is the full hash of the transaction (optional if transaction ID is provided) includePhasingResult is true to retrieve execution status of each phased transaction (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: sender (S) is the account ID of the sender senderRS (S) is the Reed-Solomon address of the sender feeNQT (S) is the fee (in NQT) of the transaction amountNQT (S) is the amount (in NQT) of the transaction transactionIndex (N) is a zero-based index giving the order of the transaction in its block timestamp (N) is the time (in seconds since the genesis block) of the transaction referencedTransactionFullHash (S) is the full hash of a transaction referenced by this one, omitted if no previous transaction is referenced confirmations (N) is the number of transaction confirmations subtype (N) is the transaction subtype (refer to Get Constants for a current list of subtypes) block (S) is the ID of the block containing the transaction blockTimestamp (N) is the timestamp (in seconds since the genesis block) of the block height (N) is the height of the block in the blockchain senderPublicKey (S) is the public key of the sending account for the transaction type (N) is the transaction type (refer to Get Constants for a current list of types) deadline (N) is the deadline (in minutes) for the transaction to be confirmed signature (S) is the digital signature of the transaction recipient (S) is the account number of the recipient, if applicable recipientRS (S) is the Reed-Solomon address of the recipient, if applicable fullHash (S) is the full hash of the signed transaction signatureHash (S) is a SHA-256 hash of the transaction signature approved (B) is a boolean indicating if the transaction is approved (only included when includePhasingResult is true and the transaction is phased) result (S) is a string containing the result of the transaction (only included when includePhasingResult is true and the transaction is phased) executionHeight (N) is the height the transaction was executed (only included when includePhasingResult is true and the transaction is phased) transaction (S) is the transaction ID version (N) is the transaction version number phased (B) is true if the transaction is phased, false otherwise ecBlockId (N) is the economic clustering block ID ecBlockHeight (N) is the economic clustering block height attachment (O) is an object containing any additional data needed for the transaction, if applicable lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: The block , blockTimestamp and confirmations fields are omitted for unconfirmed transactions. Double-spending transactions are not retrieved. Example: Refer to Get Transaction example. Get Transaction Bytes Get the bytecode of a transaction. Request: requestType is getTransactionBytes transaction is a transaction ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: confirmations (N) is the number of transaction confirmations transactionBytes (S) are the bytes contained in the transaction unsignedTransactionBytes (S) are the unsigned bytes contained in the transaction prunableAttachmentJSON (O) is the prunable attachment JSON object, if applicable, because transactionBytes never includes prunable data lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Transaction Bytes example. Parse Transaction Get a transaction object given a (signed or unsigned) transaction bytecode, or re-parse a transaction object. Verify the signature. Request: requestType is parseTransaction transactionBytes is the signed or unsigned bytecode of the transaction (optional) transactionJSON is the transaction object (optional if transactionBytes is included) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for additional fields. verify (B) is true if the signature is verified, false otherwise Example: Refer to Parse Transaction example. Retrieve Pruned Transaction Force retrieval of the prunable data for a given transaction, even if past the configured nxt.maxPrunableLifetime. Request: requestType is retrievePrunedTransaction transaction is transaction ID Response: Refer to Get Transaction for fields. Example: Refer to Retrieve Pruned Transaction example. Send Transaction It broadcasts a transaction to the network without validating it, without re-broadcasting it and without adding it locally as unconfirmed transaction. Specially intended for roaming or light clients to send transactions to remote peers. POST only. Request: requestType is sendTransaction transactionBytes is the bytecode of a signed transaction (optional) transactionJSON is the transaction object (optional if transactionBytes provided) prunableAttachmentJSON is the attachment object embedded in transactionJSON containing a prunable message (required if transactionJSON not provided because transactionBytes never includes prunable data) adminPassword is a string with the admin password (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) fullHash (S) is the full hash of the signed transaction transaction (S) is the transaction ID Example: Refer to Send Transaction example. Sign Transaction Calculates the full hash, signature hash, and transaction ID of an unsigned transaction. Request: requestType is signTransaction unsignedTransactionJSON is the transactionJSON field of the transaction, without a signature subfield unsignedTransactionBytes is the unsignedTransactionBytes field of the transaction (optional, if unsignedTransactionJSON provided) prunableAttachmentJSON is a prunable attachment JSON object, if applicable, because unsignedTransactionBytes never includes prunable data (optional if the transaction has already been broadcast and the prunable message can still be retrieved from the database) secretPhrase is the secret passphrase of the signing account validate is false to skip validation of the transaction bytes being signed (useful on nodes where the full blockchain is not downloaded) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: signatureHash (S) is a SHA-256 hash of the transaction signature, used in escrow transactions verify (B) is true the signature is verified, false if not transactionJSON (O) is the signed transaction JSON object transactionBytes (S) are the signed transaction bytes fullHash (S) is the full hash of the signed transaction prunableAttachmentJSON (O) is the prunable attachment JSON object, if applicable, because transactionBytes never includes prunable data transaction (S) is the transaction ID, derived from the fullHash lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Sign Transaction example. Voting System Operations Cast Vote Cast a vote on a poll. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is castVote poll is the poll ID vote00 is an integer within the allowed range to vote for option (answer) 0 (optional if minNumberOfOptions met, default is -128 ) vote01 is an integer within the allowed range to vote for option (answer) 1 (optional if minNumberOfOptions met, default is -128 ) vote02 is an integer within the allowed range to vote for option (answer) 2 (optional if minNumberOfOptions met, default is -128 ) \u22ee Note: The allowed vote values are integers between minRangeValue and maxRangeValue , inclusive. This range, along with the minimum and maximum number of options that can and must be voted on are specified when the poll is created. Refer to Create Poll . Response: Refer to Create Transaction Response . Example: Refer to Cast Vote example. Create Poll Create a new poll. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is createPoll name is the name of the poll description is the description of the poll, or the question to be answered finishHeight is the block height when the poll is completed votingModel is 0 for -one Vote Per Account_, 1 for Vote By BLX Balance , 2 for Vote By Asset Balance and 3 for Vote By Currency Balance minNumberOfOptions is the minimum number of options (answers) that must be voted for maxNumberOfOptions is the maximum number of options (answers) that can be voted for minRangeValue is the minimum integer value for an option (answer) (>= 0 ) maxRangeValue is the maximum integer value for an option (answer) (>= minRangeValue ) minBalance is the minimum balance (in NQT or QNT) required for voting (optional, default 0) minBalanceModel is (required if minBalance > 0 , must match votingModel when votingModel > 0 ) 1 for BLX balance 2 for an asset balance 3 for a currency balance holding is the asset or currency ID (required if minBalanceModel > 1 ) option00 is the name of option (answer) 0 option01 is the name of option (answer) 1 (optional) option02 is the name of option (answer) 2 (optional) \u22ee Notes: Up to 100 options (answers) can be specified, but there is an extra fee for each option beyond 20. Unlike the API, the NRS client treats a vote of 0 as a nonvote not contributing to the number answers (options) chosen. The NRS client uses checkboxes for selecting answers when minRangeValue = 0 and maxRangeValue = 1; otherwise sliding controls are used to select answers from the allowed range. Note: When a balance affects the poll result, the result depends only on the balance (including pending outgoing phased transfers) computed just prior to the finish height. Response: Refer to Create Transaction Response . The transaction ID is also the poll ID. Example: Refer to Create Poll example. Get Poll Get the details of a poll. Request: requestType is getPoll poll is the poll ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: poll (S) is the poll ID account (S) is the account number of the poll creator accountRS (S) is the Reed-Solomon address of the account name (S) is the name of the poll description (S) is the description of the poll, or the question to be answered finishHeight (N) is the block height when the poll is completed finished (B) is true if the poll is completed, false otherwise votingModel (N) is 0 for -one Vote Per Account_, 1 for Vote By BLX Balance , 2 for Vote By Asset Balance and 3 for Vote By Currency Balance minNumberOfOptions (N) is the minimum number of options (answers) that must be voted for maxNumberOfOptions (N) is the maximum number of options (answers) that can be voted for minBalance (S) is the minimum balance (in NQT or QNT) required for voting minBalanceModel (N) is 1 for BLX balance, 2 for an asset balance, 3 for a currency balance when minBalance > 0 holding is the asset or currency ID when minBalanceModel > 1 options (A) is the array of options (answers) minRangeValue (N) is the minimum integer value for an option (answer) maxRangeValue (N) is the maximum integer value for an option (answer) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Poll example. Get Poll Result Get the result of a poll. Request: requestType is getPollResult poll is the poll ID votingModel (optional, default null) holding (optional, default null) minBalance (optional, default 0 ) minBalanceModel (required if minBalance > 0 , must match votingModel when votingModel > 0 ) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: The votingModel , holding , minBalance and minBalanceModel parameters are optional and default to the original values specified when the poll was created (refer to Create Poll ). The original values can only be overridden while the votes are still stored in the database, until 1441 blocks after the poll is completed. If votingModel is specified, holding , minBalance and minBalanceModel or the defaults specified above apply, otherwise they are ignored. Response: poll (S) is the poll ID votingModel (N) is the votingModel used to calculate results (refer to Note above) minBalanceModel (N) is the minBalanceModel used to calculate results (refer to Note above) minBalance (S) is the minBalance used to calculate results (refer to Note above) holding (S) is the asset or currency ID if the voting model uses an asset or currency balance to determine weight , if applicable (refer to Note above) decimals (N) is the number decimal places used by the asset or currency, if applicable finished (B) is true if the poll is complete, false otherwise options (A) is the array of options (answers) of the poll results (A) is an array of result objects with the following fields for each result: weight (S) is the sum of the weight of each account that voted for the corresponding option (answer); an account's weight is 1 if the voting model is 0 , otherwise it is the NQT, asset QNT or currency QNT balance of the account if the voting model is 1 , 2 or 3 respectively; however, the weight is 0 if minBalance is not met result (S) is the sum over each account that voted for the corresponding option (answer) of: the product of the account's weight and the rangeValue selected when the vote was cast. lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Poll Result example. Get Poll Vote Get a poll vote given a poll ID and an account ID. Request: requestType is getPollVote poll is the poll ID account is the account ID includeWeights is true to calculate and return the weight assigned to each vote (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: votes (A) is an array of votes, the range values (S) corresponding to each option (answer) with empty strings for non-votes voter (S) is the account number of the voter voterRS (S) is the Reed-Solomon address of the voter transaction (S) is the transaction ID of the vote weight (S) is the weight assigned to each vote (applies if includeWeights is true ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: Votes are deleted from the database 1441 blocks after the poll is finished. Only aggregate results are kept (refer to Get Poll Result ). Example: Refer to Get Poll Vote example. Get Poll Votes Get all votes on a poll in reverse chronological order. Request: requestType is getPollVotes poll is the poll ID includeWeights is true to calculate and return the weight assigned to each vote (optional) firstIndex is a zero-based index to the first vote to retrieve (optional) lastIndex is a zero-based index to the last vote to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: votes (A) is an array of vote objects (refer to Get Poll Vote for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: Votes are deleted from the database 1441 blocks after the poll is finished. Only aggregate results are kept (refer to Get Poll Result ). Example: Refer to Get Poll Votes example. Get Polls Get poll details in reverse creation order. Request: requestType is getPolls account is a creation account ID filter (optional) timestamp is the earliest poll (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first poll to retrieve (optional) lastIndex is a zero-based index to the last poll to retrieve (optional) includeFinished is true to include completed polls (optional) finishedOnly is true to exclude not yet executed, phased transactions (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: polls (A) is an array of polls (refer to Get Poll for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Polls example. Search Polls Search for poll details given a name/description query string. Request: requestType is searchPolls query is a full text query on the poll fields name (S) and description (S) in the standard Lucene syntax (optional) firstIndex is a zero-based index to the first poll to retrieve (optional) lastIndex is a zero-based index to the last poll to retrieve (optional) includeFinished is true to include completed polls (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: polls (A) is an array of polls (refer to Get Poll for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Polls example. Utilities Decode QR Code Decodes a base64-encoded jpeg to a UTF-8 string. POST only. Request: requestType is decodeQRCode qrCodeBase64 is a base64-encoded jpeg string to be decoded Response qrCodeData (S) is a UTF-8 string containing the decoded data from the base64 string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Decode QR Code example. Detect Mime Type Gets the mime type of uploaded file or data. Request: requestType is detectMimeType data is the data (optional) file is the pathname of a data file to upload (optional if data provided) filename is a filename to associate with data (optional if file uploaded in which case the uploaded filename is always used) isText is false if data is a hex string (optional) Response type (S) is the mime type requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Detect Mime Type example. Encode QR Code Encodes a UTF-8 string to a base64-encoded jpeg. POST only. Request: requestType is encodeQRCode qrCodeData is a UTF-8 text string to be encoded width is the width of the output image (optional) height is the height of the output image (optional) Response qrCodeBase64 (S) is a base64 string encoding a jpeg image of the QR code requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Encode QR Code example. Full Hash To Id Converts a full hash to an ID. Request: requestType is fullHashToId fullHash is the full hash 64-digit (32-byte) hex string Response: stringId (S) is the ID corresponding to the hash, in the form of an decimal string -longId_ (S) is the signed long integer (8-bytes) representation of the ID used internally, returned as a string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Full Hash To Id example. Hash Calculates the hash of a secret for use in phased transactions with voting model 5 ( Vote By Secret ). Request: requestType is hash hashAlgorithm is the hash function used: 2 for SHA256, 3 for SHA3, 5 for SCRYPT, 6 for RIPEMD160, 25 for Keccack25 and 62 for SHA256 followed by RIPEMD160, according to Get Constants secret is a secret phrase in text form or hex string form secretIsText is true if secret is text, false if it is a hex string (optional) Note: secret is converted from a hex string to a byte array, which is what the hash algorithm expects, unless secretIsText is true , in which case secret is first converted from text to a UTF-8 hex string as by Hex Convert . Response: hash (S) is the hash of the secret, in the form of a hex string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Hash example. Hex Convert Converts a text string into a UTF-8 hex string and if the text input is already a hex string, also into text. Request: requestType is hexConvert string is a text string, possibly a hex string Response: binary (S) is the converted UTF-8 hex string text (S) is a text string converted from string if it is a valid UTF-8 hex string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Hex Convert example. Long Convert Converts an ID to the signed long integer representation used internally. Request: requestType is -longConvert_ id is a numerical ID, in decimal form but equivalent to an 8-byte unsigned integer as produced by SHA-256 hashing Response: stringId (S) is the numerical ID -longId_ (S) is the signed long integer (8-bytes) representation of the ID used internally, returned as a string requestProcessingTime (N) is the API request processing time (in millisec) Note: Java does not support unsigned integers, so any unsigned ID (such as a block ID) visible in the NRS client is represented internally as a signed integer. Example: Refer to Long Convert example. RS Convert Get both the Reed-Solomon account address and the account number given an account ID. Request: requestType is rsConvert account is an account ID (either RS address or number) Response: accountRS (S) is the Reed-Solomon address of the account requestProcessingTime (N) is the API request processing time (in millisec) account (S) is the account number Example: Refer to RS Convert example. Debug Operations All debug utilities require an adminPassword request parameter. See Admin Password for more info. Clear Unconfirmed Transactions Empties the unconfirmed transaction pool. POST only. Request: requestType is clearUnconfirmedTransactions Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Clear Unconfirmed Transactions example. Dump Peers Get all active peers, optionally of a certain version or a minimum weight. Request: requestType is dumpPeers version is a version filter such as 1.5.11 (optional) weight is a minimum weight filter such as 1000 (optional) connect is true to force a connection attempt to each known peer first (optional); password protected like the Debug Operations if true Response: peers (S) is a string of peer IP addresses or DNS names, separated by semicolons count (N) is the number of peers in the peers string. requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Dump Peers example. Full Reset Deletes the entire blockchain. POST only. Request: requestType is fullReset Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Note: After successful completion of the reset, a new blockchain will automatically begin downloading. Example: Refer to Full Reset example. Get All Broadcasted Transactions Get unconfirmed transactions broadcasted from this node but not yet received back from a peer, if transaction rebroadcasting is enabled. Request: requestType is -getAllBroadcastedTransactions_ requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of broadcasted unconfirmed transactions not yet received back from a peer (S) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Broadcasted Transactions example. Get All Waiting Transactions Get unconfirmed transactions temporarily kept in memory during transaction processing. Request: requestType is getAllWaitingTransactions requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of unconfirmed transactions temporarily kept in memory (S) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Waiting Transactions example. Get Log Get up to 100 of the most recent log messages from a memory buffer. Request: requestType is getLog count is the number of messages to return (optional, default 100) Response: messages (A) is an array of log messages (S) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Log example. Get Stack Traces Get the stack traces of the currently running threads in reverse id order. Request: requestType is getStackTraces depth is the maximum trace depth to retrieve (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) -locks_ (A) is an array of lock objects threads (A) is an array of thread objects with the following fields: trace (A) is an array of traces (S) name (S) is the thread name id (N) is the thread ID state (S) is the thread state, one of WAITING , -tIMED_WAITING_ and -rUNNABLE_ -locks_ (A) is an array of lock objects with the following fields, if not empty: trace (S) depth (N) name (S) hash (N) Example: Refer to Get Stack Traces example. Lucene Reindex Forces a rebuild of the Lucene search index. POST only. Request: requestType is -luceneReindex_ Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Lucene Reindex example. Pop Off Removes specified number of blocks (and associated transactions) from the top of the blockchain. POST only. Request: requestType is popOff numBlocks is the number of blocks to pop off the blockchain (optional) height is the new height of the blockchain after popping (optional if numBlocks provided) Note: If table trimming is enabled (default), at most 1440 blocks can be popped off without triggering a full rescan. Response: blocks (A) is an array of the blocks popped off (refer to Get Block for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Pop Off example. Rebroadcast Unconfirmed Transactions Rebroadcast transactions in the unconfirmed pool to peers, until received back or found in the blockchain. Rebroadcasting can be disabled by setting the nxt.enableTransactionRebroadcasting property to false . POST only. Request: requestType is -rebroadcastUnconfirmedTransactions_ Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Rebroadcast Unconfirmed Transactions example. Requeue Unconfirmed Transactions Requeue unconfirmed transactions. POST only. Request: requestType is requeueUnconfirmedTransactions Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Requeue Unconfirmed Transactions example. Retrieve Pruned Data Initiates a task of requesting and restoring missing prunable data. POST only. Request: requestType is retrievePrunedData Response: done (B) is true if the operation completed successfully numberOfPrunedData (N) is the number of pruned data available pruned data transactions requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Retrieve Pruned Data example. Scan Scans the top of the blockchain. POST only. Request: requestType is scan numBlocks is the number of blocks to scan at the top of the blockchain (optional) height is the height above which blockchain is to be scanned (optional if numBlocks provided) validate is true if signatures are to be re-verified and blocks and transactions re-validated (optional) Note: The derived object tables are rolled back and rebuilt by rescanning the existing blockchain. A request to rescan more than 1440 blocks when table trimming is enabled will do a full rescan starting from height 0. Rescan status is saved in the database, so that if a rescan is interrupted or fails it will resume on restart. Response: scanTime (N) is the scan time done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Scan example. Set Logging Sets the log level and optionally specifies communication events to be logged, without restarting the server. POST only. Request: requestType is setLogging -logLevel_ is one of -eRROR_, WARN , -iNFO_ or -dEBUG_ with each level in the list including all of the previous levels (optional, default is -iNFO_) communicationEvent is one of multiple communication (HTTP) events to be logged, from the list: -eXCEPTION_, HTTP-eRROR , HTTP-OK (optional) communicationEvent is one of multiple communication events (optional) \u22ee Note: The initial log level is set by the nxt.level logging property, currently -fINE_ (equivalent to -dEBUG_). Response: -loggingUpdated_ (B) is true if the operation completed successfully Example: Refer to Set Logging example. Shutdown Shutdown the server. POST only. Request: requestType is shutdown scan is true to truncate the derived tables and schedule a full rescan with validation on the next start (optional) Response: shutdown (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Shutdown example. Trim Derived Tables Trigger a derived tables trim, and a prunable tables pruning. POST only. Request: requestType is trimDerivedTables Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Trim Derived Tables example.","title":"ALL OPERATIONS"},{"location":"api/#blue0x-api-documentation","text":"","title":"Blue0x API Documentation"},{"location":"api/#description","text":"The Blue0x API interacts with Blue0x nodes using HTTP requests to port 2022. Most HTTP requests can use either the GET or POST methods, but some API calls accept only the POST method for security reasons. Responses are returned as JSON objects. Each API call is documented below, with definitions given for HTTP request parameters and JSON response fields, followed by an example: The JSON response fields are each followed by one of s for string, a for array, o for object, N for number or b for boolean. In the examples, the Blue0x node is represented as localhost and requests and responses are formatted for easy reading; line breaks and spaces are not actually used except in some parameter values. All requests are in URL format which implies the HTTP GET method. When GET is allowed, the URL can be entered into a browser URL field but proper URL encoding is usually required (e.g., spaces in a parameter value must be replaced by + or %20 ). Otherwise, the URL should be used as a guide to preparing an HTTP POST request using cURL, for example. All API calls can be viewed and tested at https://localhost:2022/test while a local BLX node is running. For specific API calls, use https://localhost:2022/test?requestType= specificRequestType . This document is adapted for Blue0x from the NXT API Documentation .","title":"Description"},{"location":"api/#table-of-contents","text":"General Notes Genesis Block Flexible Account IDs Quantity Units BLX, NQT and QNT Creating Unsigned Transactions Escrow Operations Prunable Data Properties Files Admin Password Roaming and Light Client Modes Create Transaction Create Transaction Request Create Transaction Response Account Operations Delete Account Property Get Account Get Account Block Count Get Account Block Ids Get Account Blocks Get Account Id Get Account Ledger Get Account Ledger Entry Get Account Lessors Get Account Properties Get Account Public Key Get Balance Get Blockchain Transactions Get Guaranteed Balance Get Unconfirmed Transaction Ids Get Unconfirmed Transactions Search Accounts Send Money Send BLX Set Account Info Set Account Property Start Funding Monitor Stop Funding Monitor Account Control Operations Get All Phasing Only Controls Get Phasing Only Control Set Phasing Only Control Alias Operations Buy / Sell Alias Buy Alias Sell Alias Set Alias Delete Alias Get Alias Get Alias Count Get Aliases Get Aliases Like Arbitrary Message System Operations Decrypt From Download Prunable Message Encrypt To Get All Prunable Messages Get Prunable Message Get Prunable Messages Get Shared Key Read Message Send Message Verify Prunable Message Asset Exchange Operations Cancel Order Cancel Ask Order Cancel Bid Order Delete Asset Shares Dividend Payment Get Account Asset Count Get Account Assets Get Account Current Order Ids Get Account Current Ask Order Ids Get Account Current Bid Order Ids Get Account Current Orders Get Account Current Ask Orders Get Account Current Bid Orders Get All Assets Get All Open Orders Get All Open Ask Orders Get All Open Bid Orders Get All Trades Get Asset Get Asset Account Count Get Asset Accounts Get Asset Deletes Get Asset Dividends Get Asset Ids Get Asset Transfers Get Expected Asset Transfers Get Assets Get Assets By Issuer Get Expected Asset Deletes Get Order Get Ask Order Get Bid Order Get Order Ids Get Ask Order Ids Get Bid Order Ids Get Orders Get Ask Orders Get Bid Orders Get Expected Ask Orders Get Expected Bid Orders Get Expected Order Cancellations Get Last Trades Get Order Trades Get Trades Issue Asset Place Order Place Ask Order Place Bid Order Search Assets Transfer Asset Block Operations Get Block Get Block Id Get Blocks Get EC Block Digital Goods Store Operations DGS Delisting DGS Delivery DGS Feedback DGS Listing DGS Price Change DGS Purchase DGS Quantity Change DGS Refund Get DGS Expired Purchases Get DGS Good Get DGS Goods Get DGS Goods Count Get DGS Goods Purchase Count Get DGS Goods Purchases Get DGS Pending Purchases Get DGS Purchase Get DGS Purchase Count Get DGS Purchases Get DGS Tag Count Get DGS Tags Get DGS Tags Like Search DGS Goods Forging Operations Start / Stop / Get Forging Get Forging Start Forging Stop Forging Lease Balance Get Next Block Generators Hallmark Operations Decode Hallmark Mark Host Generate Hallmark Monetary System Operations Can Delete Currency Currency Buy / Sell Currency Buy Currency Sell Currency Mint Currency Reserve Claim Currency Reserve Increase Delete Currency Get Account Currencies Get Account Currency Count Get Account Exchange Requests Get Expected Exchange Requests Get Funding Monitor Get All Currencies Get All Exchanges Get Available To Buy Get Available To Sell Get Buy / Sell Offers Get Buy Offers Get Sell Offers Get Expected Buy Offers Get Expected Sell Offers Get Currencies Get Currencies By Issuer Get Currency Get Currency Account Count Get Currency Accounts Get Currency Founders Get Currency Ids Get Currency Transfers Get Expected Currency Transfers Get Exchanges Get Exchanges By Exchange Request Get Exchanges By Offer Get Last Exchanges Get Minting Target Get Offer Issue Currency Publish Exchange Offer Search Currencies Transfer Currency Networking Operations Add Peer Blacklist API Proxy Peer Blacklist Peer Get Inbound Peers Get My Info Get Peer Get Peers Set API Proxy Peer Phasing Operations Approve Transaction Create Phasing Poll Get Account Phased Transaction Count Get Account Phased Transactions Get Asset Phased Transactions Get Currency Phased Transactions Get Linked Phased Transactions Get Phasing Poll Get Phasing Poll Vote Get Phasing Poll Votes Get Phasing Polls Get Voter Phased Transactions Server Information Operations Event Register Event Wait Get Blockchain Status Get Constants Get Plugins Get State Get Time Shuffling Operations Get Account Shufflings Get All Shufflings Get Assigned Shufflings Get Holding Shufflings Get Shufflers Get Shuffling Get Shuffling Participants Shuffling Cancel Shuffling Create Shuffling Process Shuffling Register Shuffling Verify Start Shuffler Stop Shuffler Tagged Data Operations Download Tagged Data Extend Tagged Data Get Account Tagged Data Get All Tagged Data Get Channel Tagged Data Get Data Tag Count Get Data Tags Get Data Tags Like Get Tagged Data Get Tagged Data Extend Transactions Search Tagged Data Upload Tagged Data Verify Tagged Data Token Operations Decode File Token Decode Token Generate File Token Generate Token Transaction Operations Broadcast Transaction Calculate Full Hash Get Expected Transactions Get Referencing Transactions Get Transaction Get Transaction Bytes Parse Transaction Retrieve Pruned Transaction Send Transaction Sign Transaction Voting System Operations Cast Vote Create Poll Get Poll Get Poll Result Get Poll Vote Get Poll Votes Get Polls Search Polls Utilities Decode QR Code Detect Mime Type Encode QR Code Full Hash To Id Hash Hex Convert Long Convert RS Convert Debug Operations Clear Unconfirmed Transactions Dump Peers Full Reset Get All Broadcasted Transactions Get All Waiting Transactions Get Log Get Stack Traces Lucene Reindex Pop Off Rebroadcast Unconfirmed Transactions Requeue Unconfirmed Transactions Retrieve Pruned Data Scan Set Logging Shutdown Trim Derived Tables","title":"Table of Contents"},{"location":"api/#general-notes","text":"","title":"General Notes"},{"location":"api/#genesis-block","text":"Many API requests make reference to the genesis block. FYI, the genesis block's ID is 4777664216118977193 . Sending messages, selling aliases, and leasing balances to the Genesis account are not allowed.","title":"Genesis Block"},{"location":"api/#flexible-account-ids","text":"All API requests that require an account ID accept either an account number or the corresponding Reed-Solomon address .","title":"Flexible Account IDs"},{"location":"api/#quantity-units-blx-nqt-and-qnt","text":"The Blue0x token, BLX, is used to quantify value within the network and a certain amount of BLX is required, as a fee, for each transaction within the network. This fee goes to the node that forges (generates) the new block containing the transaction that is then accepted into the blockchain. One billion BLX were created in the Genesis Block , and 100,000 BLX were then distributed to NXT owners as per the Jelurida license agreement. The Blue0x (BLX) blockchain was created on May 7, 2021 at 12:34:00. The Blue0x system can be thought of as a network owned by all who posses BLX. In this sense, BLX quantifies ownership of or stake in the system. Stakeholders are entitled to forge blocks and collect transaction fees in proportion to the amount of BLX they possess. Seperate assets and currencies, such as USDX, are created within the Blue0x network. The amount of these assets and currencies are represented as integers in units of QNT, and are priced in NQT per QNT.","title":"Quantity Units BLX, NQT and QNT"},{"location":"api/#creating-unsigned-transactions","text":"All API requests that create a new transaction will accept either a secretPhrase or a publicKey parameter: If secretPhrase is supplied, a transaction is created, signed at the server, and broadcast by the server as usual. If only a publicKey parameter is supplied as a 64-digit (32-byte) hex string, the transaction will be prepared by the server and returned in the JSON response as transactionJSON without a signature. This JSON object along with secretPhrase can then be supplied to Sign Transaction as unsignedTransactionJSON and the resulting signed transactionJSON can then be supplied to Broadcast Transaction . This sequence allows for offline signing of transactions so that secretPhrase never needs to be exposed. unsignedTransactionBytes may be used instead of unsigned transactionJSON when there is no encrypted message. Messages to be encrypted require the secretPhrase for encryption and so cannot be included in unsignedTransactionBytes .","title":"Creating Unsigned Transactions"},{"location":"api/#escrow-operations","text":"All API requests that create a new transaction will accept an optional referencedTransactionFullHash parameter which creates a chained transaction, meaning that the new transaction cannot be confirmed unless the referenced transaction is also confirmed. This feature allows a simple way of transaction escrow: Alice prepares and signs a transaction A, but doesn't broadcast it by setting the broadcast parameter to false . She sends to Bob the unsignedTransactionBytes , the fullHash of the transaction, and the signatureHash . All of those are included in the JSON returned by the API request. (Warning: make sure not to send the signed transactionBytes , or the signature itself, as then Bob can just broadcast transaction A himself). Bob prepares, signs and broadcasts transaction B, setting the referencedTransactionFullHash parameter to the fullHash of A provided by Alice. He can verify that this hash indeed belongs to the transaction he expects from Alice, by using Calculate Full Hash , which takes unsignedTransactionBytes and signatureHash (both of which Alice has also sent to Bob). He can also use Parse Transaction to decode the unsigned bytes and inspect all transaction fields. Transaction B is accepted in the unconfirmed transaction pool, but as long as A is still missing, B will not be confirmed, i.e. will not be included in the blockchain. If A is never submitted, B will eventually expire -- so Bob should make sure to set a long enough deadline, such as the maximum of 32767 minutes. Once in the unconfirmed transactions pool, Bob has no way of recalling B back. So now Alice can safely submit her transaction A, by just broadcasting the signedTransactionBytes she got in the first step. Transaction A will get included in the blockchain first, and in the next block Bob's transaction B will also be included. Note that while the above scheme is good enough for a simple escrow, the blockchain does not enforce that if A is included, B will also be included. It may happen due to forks and blockchain reorganization, that B never gets a chance to be included and expires unconfirmed, while A still remains in the blockchain. However, it is not practically possible for Bob to intentionally cause such chain of events and to prevent B from being confirmed.","title":"Escrow Operations"},{"location":"api/#prunable-data","text":"Prunable data can be removed from the blockchain without affecting the integrity of the blockchain. When a transaction containing prunable data is created, only the 32-byte sha256 hash of the prunable data is included in the transactionBytes , not the prunable data itself. The non-prunable signed transactionBytes are used to verify the signature and to generate the transaction's fullHash and ID; when the prunable part of the transaction is removed at a later time, none of these operations are affected. Prunable data has a predetermined minimum lifetime of two weeks (24 hours on the Testnet) from the timestamp of the transaction. Transactions and blocks received from peer nodes are not accepted if prunable data is missing before this time has elapsed. After this time has elapsed, prunable data is no longer included with transactions and blocks transmitted to peer nodes, and is no longer included in the transaction JSON returned by general-purpose API calls such as Get Transaction; the only way to retrieve it, if still available, is through special-purpose API calls such as Get Prunable Message. Expired prunable data remains stored in the blockchain until removed at the same time derived tables are trimmed, which occurs automatically every 1000 blocks by default. Use Trim Derived Tables to remove expired prunable data immediately. Prunable data can be preserved on a node beyond the predetermined minimum lifetime by setting the nxt.maxPrunableLifetime property to a larger value than two weeks or to -1 to preserve it indefinitely. To force the node to include such preserved prunable data when transactions and blocks are transmitted to peer nodes, set the nxt.includeExpiredPrunables property to true , thus making it an archival node. Currently, there are two varieties of prunable data in the Blue0x system: prunable Arbitrary Messages and Tagged Data . Both varities have a maximum prunable data length of 42 kilobytes.","title":"Prunable Data"},{"location":"api/#properties-files","text":"The behavior of some API calls is affected by property settings loaded from files in the nxt/conf directory during Blue0x server intialization. This directory contains the nxt-default.properties and logging-default.properties files, both of which contain default property settings along with documentation. It is recommended not to modify default properties files because they can be overwritten during software updates. Instead, properties in the default files can be overridden by including them in optional nxt.properties and logging.properties files in the same directory. For example, a nxt.properties file can be created with the contents: nxt.isTestnet=true This causes the Blue0x server to connect to the Testnet instead of the Mainnet.","title":"Properties Files"},{"location":"api/#admin-password","text":"Some API functions take an adminPassword parameter, which must match the nxt.adminPassword property unless the nxt.disableAdminPassword property is set to true or the API server only listens on the localhost interface (when the nxt.apiServerHost property is set to 127.0.0.1). All Debug Operations require adminPassword since they require some kind of privilege. On some functions adminPassword is used so you can override maximum allowed value for lastIndex parameter, which is set to 100 by default by the nxt.maxAPIRecords property. Giving you the option to retrieve more than objects per request.","title":"Admin Password"},{"location":"api/#roaming-and-light-client-modes","text":"The remote node to use when in roaming and light client modes is selected randomly, but can be changed manually in the UI, or using the Set API Proxy Peer API, or forced to a specific peer using the nxt.forceAPIProxyServerURL property. Remote nodes can be blacklisted from the UI, or using the Blacklist API Proxy Peer API. This blacklisting is independent from peer blacklisting. The API proxy blacklisting period can be set using the nxt.apiProxyBlacklistingPeriod property (default 1800000 milliseconds). API requests that require sending the secret phrase, shared key, or admin password to the server, for features like forging, shuffling, or running a funding monitor, are disabled when in roaming or light client mode.","title":"Roaming and Light Client Modes"},{"location":"api/#create-transaction","text":"The following API calls create Blue0x transactions using HTTP POST requests. Follow the links for examples and HTTP POST request parameters specific to each call. Refer to the sections below for HTTP POST request parameters and JSON response fields common to all calls that create transactions. Calls in italics are phasing-safe (refer to Get Constants and Create Phasing Poll ) Send Money Set Account Information Set Account Property Buy / Sell Alias Delete Alias Set Alias Send Message Cancel Order Dividend Payment Issue Asset Place Order Transfer Asset DGS Delisting DGS Delivery DGS Feedback DGS Listing DGS PriceChange DGS Purchase DGS Quantity Change DGS Refund Lease Balance Currency Buy / Sell Currency Mint Currency Reserve Claim Currency Reserve Increase Delete Currency Issue Currency Publish Exchange Offer Transfer Currency Create Poll Cast Vote Approve Transaction Extend Tagged Data Upload Tagged Data","title":"Create Transaction"},{"location":"api/#create-transaction-request","text":"The following HTTP POST parameters are common to all API calls that create transactions: secretPhrase is the secret passphrase of the account (optional, but transaction neither signed nor broadcast if omitted) publicKey is the public key of the account (optional if secretPhrase provided) feeNQT is the fee (in NQT) for the transaction: minimum 1000 BLX for Issue Asset , unless singleton asset is issued, for which the fee is 1 BLX 2 BLX in base fee for Set Alias , with 2 BLX additional fee for each 32 chars of name plus URI total length, after the first 32 chars [25000, 1000, 40] BLX for [3-letter, 4-letter, 5-letter] Issue Currency 40 BLX for re-issue of any currency 10 BLX for a Create Poll , including 20 options and total size of poll name plus poll description plus total option length not exceeding 320 chars. For each option above 20, an additional fee of 1 BLX, and for each 32 chars after 320, an additional fee of 2 BLX. [2, 21] BLX for a [basic, required-minimum-balance] Create Phasing Poll . 1 BLX will be added for each option (answer) beyond 20, and 1 BLX for each 32 bytes of hashedSecret or linkedFullHash fields. 1 BLX for the first 32 bytes of a unencrypted non-prunable message , 1 BLX for each additional 32 bytes 2 BLX for the first 32 bytes of an encrypted non-prunable message , 1 BLX for each additional 32 bytes. The length is measured excluding the nonce and the 16 byte AES initialization vector. 1 BLX for the first 1024 bytes of a prunable message , 0.1 BLX for each additional 1024 prunable bytes 1 BLX for Set Account Info , including 32 chars, with 2 BLX additional fee for each 32 chars 2 BLX for DGS Listing , including 32 chars of name plust description. With 2 BLX additional fee for each 32 chars. 1 BLX for DGS Delivery , including 32 bytes of encrypted goods data (AES initialization bytes and nonce excluded). With 2 BLX additional fee for each 32 bytes. 2 BLX for transactions that make use of referencedTransactionFullHash property when creating a new transaction. 1 BLX otherwise, where 1 BLX = 100000000 NQT deadline is the deadline (in minutes) for the transaction to be confirmed, 32767 minutes maximum referencedTransactionFullHash creates a chained transaction, meaning that the current transaction cannot be confirmed unless the referenced transaction is also confirmed (optional) broadcast is set to false to prevent broadcasting the transaction to the network (optional) Note: An optional arbitrary message can be appended to any transaction by adding message-related parameters as in Send Message . Note: Any phasing-safe transaction (refer to Create Transaction ) can have its execution deferred either conditionally or unconditionally (refer to Create Phasing Poll ).","title":"Create Transaction Request"},{"location":"api/#create-transaction-response","text":"The following JSON response fields are common to all API calls that create transactions: signatureHash (S) is a SHA-256 hash of the transaction signature unsignedTransactionBytes (S) are the unsigned transaction bytes transactionJSON (O) is a transaction object (refer to Get Transaction for details) broadcasted (B) is true if the transaction was broadcast, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) transactionBytes (S) are the signed transaction bytes fullHash (S) is the full hash of the signed transaction transaction (S) is the ID of the newly created transaction","title":"Create Transaction Response"},{"location":"api/#account-operations","text":"","title":"Account Operations"},{"location":"api/#delete-account-property","text":"Deletes an account property. POST only. Request: requestType is deleteAccountProperty property is the name of the property recipient is the account where a property should be removed (optional) setter is the account who did set the property (optional) Response: Refer to Create Transaction Response . Example: Refer to Delete Account Property example.","title":"Delete Account Property"},{"location":"api/#get-account","text":"Get account information given an account ID. Request: requestType is getAccount account is the account ID includeLessors is true to include lessors , lessorsRS and lessorsInfo (optional) includeAssets is true to include assetBalances and unconfirmedAssetBalances (optional) includeCurrencies is true to include accountCurrencies (optional) includeEffectiveBalance is true to include effectiveBalanceNXT and guaranteedBalanceNQT (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: unconfirmedBalanceNQT (S) is balanceNQT less unconfirmed outgoing transactions, the balance displayed in the client effectiveBalanceNXT (N) is the balance (in BLX) of the account available for forging: the unleased guaranteedBalance of this account plus the leased guaranteedBalance of all lessors to this account lessorsInfo (A) is an array of lessor objects including the fields: currentHeightTo (S) nextHeightFrom (S) effectiveBalanceNXT (S) nextLesseeRS (S) currentLesseeRS (S) currentHeightFrom (S) nextHeightTo (S) lessors (A) is an array of lessor account IDs currentLessee (S) is the account number of the lessee, if applicable currentLeasingHeightTo (N) is the block height when the lease completes, if applicable forgedBalanceNQT (S) is the balance (in NQT) that the account has forged balanceNQT (S) is the minimally confirmed basic balance (in NQT) of the account publicKey (S) is the public key of the account requestProcessingTime (N) is the API request processing time (in millisec) assetBalances (A) is an array of asset objects including the fields balanceQNT (S) and asset (S) ID guaranteedBalanceNQT (S) is the balance (in NQT) of the account with at least 1440 confirmations unconfirmedAssetBalances (A) is an array of asset objects including the fields unconfirmedBalanceQNT (S) and asset (S) ID currentLesseeRS (S) is the Reed-Solomon address of the lessee account accountRS (S) is the Reed-Solomon address of the account lessorsRS (A) is an array of Reed-Solomon lessor account addresses accountCurrencies (A) is an array of currency objects (refer to Get Account Currencies for details) name (S) is the name associated with the account, if applicable description (S) is the description of the account, if applicable account (S) is the account number currentLeasingHeightFrom (N) is the block height when the lease starts, if applicable lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) Example: Refer to Get Account example.","title":"Get Account"},{"location":"api/#get-account-block-count","text":"Get the number of blocks forged by an account. Request: requestType is getAccountBlockCount account is an account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfBlocks (N) is the number of blocks forged by the account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Block Count example.","title":"Get Account Block Count"},{"location":"api/#get-account-block-ids","text":"Get the block IDs of all blocks forged (generated) by an account in reverse block height order. Request: requestType is getAccountBlockIds account is the account ID timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first block ID to retrieve (optional) lastIndex is a zero-based index to the last block ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: blockIds (A) is an array of block IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Get Account Block Ids example.","title":"Get Account Block Ids"},{"location":"api/#get-account-blocks","text":"Get all blocks forged (generated) by an account in reverse block height order. Request: requestType is getAccountBlocks account is the account ID timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first block to retrieve (optional) lastIndex is a zero-based index to the last block to retrieve (optional) includeTransactions is true to retrieve transaction details, otherwise only transaction IDs are retrieved (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: blocks (A) is an array of blocks (refer to Get Block for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Blocks example.","title":"Get Account Blocks"},{"location":"api/#get-account-id","text":"Get an account ID given a secret passphrase or public key. POST only. Request: requestType is getAccountId secretPhrase is the secret passphrase of the account (optional) publicKey is the public key of the account (optional if secretPhrase provided) Response: accountRS (S) is the Reed-Solomon address of the account publicKey (S) is the public key of the account requestProcessingTime (N) is the API request processing time (in millisec) account (S) is the account number Example: Refer to Get Account Id example.","title":"Get Account Id"},{"location":"api/#get-account-ledger","text":"Get multiple account ledger entries. Request: requestType is getAccountLedger account is the account ID (optional) firstIndex is a zero-based index to the first block to retrieve (optional) lastIndex is a zero-based index to the last block to retrieve (optional) event is the event ID (optional) eventType is a string representing the event type (optional) holdingType is a string representing the holding type (optional) holding is the holding ID (optional) includeTransactions is true to retrieve transaction details, otherwise only transaction IDs are retrieved (optional) includeHoldingInfo is true to retrieve asset or currency info (optional) with each ledger entry. The default is false. requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: entries (A) is an array of ledger objects including the fields: change (S) is the change in the balance for the holding identified by 'holdingType' eventType (S) is the event type causing the account change ledgerId (S) is the ledger entry ID holding (S) is the item identifier for an asset or currency balance isTransactionEvent (B) is true if the event is associated with a transaction and false if it is associated with a block. balance (S) is the balance for the holding identified by 'holdingType' holdingType (S) is the item being changed (account balance, asset balance or currency balance) accountRS (S) is the Reed-Solomon address of the account block (S) is the block ID that created the ledger entry event (S) is the block or transaction associated with the event account (S) is the account number height (N) is the the block height associated with the event timestamp (N) is the the block timestamp associated with the event requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Ledger example.","title":"Get Account Ledger"},{"location":"api/#get-account-ledger-entry","text":"Get a specific account ledger entry. Request: requestType is getAccountLedgerEntry ledgerId is the ledger ID includeTransactions is true to retrieve transaction details, otherwise only transaction IDs are retrieved (optional) includeHoldingInfo is true to retrieve asset or currency info (optional) with the ledger entry. The default is false. Response: change (S) is the change in the balance for the holding identified by 'holdingType' eventType (S) is the event type causing the account change ledgerId (S) is the ledger entry ID holding (S) is the item identifier for an asset or currency balance isTransactionEvent (B) is true if the event is associated with a transaction and false if it is associated with a block. balance (S) is the balance for the holding identified by 'holdingType' holdingType (S) is the item being changed (account balance, asset balance or currency balance) accountRS (S) is the Reed-Solomon address of the account block (S) is the block ID that created the ledger entry event (S) is the block or transaction associated with the event account (S) is the account number height (N) is the the block height associated with the event timestamp (N) is the the block timestamp associated with the event requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Ledger Entry example.","title":"Get Account Ledger Entry"},{"location":"api/#get-account-lessors","text":"Get the lessors to an account. Request: requestType is getAccountLessors account is the account ID height is the height of the blockchain to determine the lessors (optional, default is last block) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: accountRS (S) is the Reed-Solomon address of the account account (S) is the account number height (N) is the height of the blockchain lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) lessors (A) is an array of lessor objects including the fields: lessorRS (S) lessor (S) guaranteedBalanceNQT (S) Example: Refer to Get Account Lessors example.","title":"Get Account Lessors"},{"location":"api/#get-account-properties","text":"Get the Account properties for a specific account or setter. Request: requestType is getAccountProperties recipient is the account ID to which the property is attached to setter is the account ID who set the property (optional if recipient provided) property is the property key (optional) firstIndex is a zero-based index to the first block to retrieve (optional) lastIndex is a zero-based index to the last block to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: setterRS : (S) is the Reed-Solomon address of the setter account (only if setter is defined in the request) recipientRS : (S) is the Reed-Solomon address of the recipient account (only if recipient is defined in the request) recipient : (S) is the account number of the recipient account (only if recipient is defined in the request) requestProcessingTime (N) is the API request processing time (in millisec) setter : (S) is the account number of the setter account (only if setter is defined in the request) properties : (A) is an array of properties including the fields: setterRS : (S) is the Reed-Solomon address of the setter account (only if setter is omitted in the request) recipientRS : (S) is the Reed-Solomon address of the recipient account (only if recipient is omitted in the request) recipient : (S) is the account number of the recipient account (only if recipient is omitted in the request) property : (S) property name setter : (S) is the account number of the setter account (only if setter is omitted in the request) value : (S) property value Example: Refer to Get Account Properties example.","title":"Get Account Properties"},{"location":"api/#get-account-public-key","text":"Get the public key associated with an account ID. Request: requestType is getAccountPublicKey account is the account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: publicKey (S) is the 32-byte public key associated with the account, returned as a hex string lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Public Key example.","title":"Get Account Public Key"},{"location":"api/#get-balance","text":"Get the balance of an account. Request: requestType is getBalance account is an account ID includeEffectiveBalance is true to include effectiveBalanceNXT and guaranteedBalanceNQT (optional) height is the height to retrieve account balance for, if still available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: unconfirmedBalanceNQT (S) is balanceNQT less unconfirmed outgoing transactions, the balance displayed in the client guaranteedBalanceNQT (S) is the balance (in NQT) of the account with at least 1440 confirmations effectiveBalanceNXT (N) is the balance (in Blue0x) of the account available for forging: the unleased guaranteedBalance of this account plus the leased guaranteedBalance of all lessors to this account forgedBalanceNQT (S) is the balance (in NQT) that the account has forged balanceNQT (S) is the minimally confirmed basic balance (in NQT) of the account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Balance example.","title":"Get Balance"},{"location":"api/#get-blockchain-transactions","text":"Get the transactions associated with an account in reverse block timestamp order. Request: requestType is getBlockchainTransactions account is the account ID timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) type is the type of transactions to retrieve (optional) subtype is the subtype of transactions to retrieve (optional) firstIndex is a zero-based index to the first transaction to retrieve (optional) lastIndex is a zero-based index to the last transaction to retrieve (optional) numberOfConfirmations is the required number of confirmations per transaction (optional) withMessage is true to retrieve only only transactions having a message attachment, either non-encrypted or decryptable by the account (optional) phasedOnly is true to retrieve only phased transactions (optional unless nonPhasedOnly provided) nonPhasedOnly is true to retrieve only nonphased transactions (optional unless phasedOnly provided) includeExpiredPrunable is true' to retrieve pruned data if available (optional) includePhasingResult is true to retrieve execution status of each phased transaction (optional) executedOnly is true to exclude phased transactions that are not yet executed (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: Refer to Get Constants for definitions of types and subtypes Response: transactions (A) is an array of transactions (refer to Get Transaction for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Blockchain Transactions example.","title":"Get Blockchain Transactions"},{"location":"api/#get-guaranteed-balance","text":"Get the balance of an account that is confirmed at least a specified number of times. Request: requestType is getGuaranteedBalance account is an account ID numberOfConfirmations is the minimum number of confirmations for a transaction to be included in the guaranteed balance (optional, if omitted or zero then minimally confirmed transactions are included) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: guaranteedBalanceNQT (S) is the balance (in NQT) of the account with at least numberOfConfirmations confirmations lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Guaranteed Balance example.","title":"Get Guaranteed Balance"},{"location":"api/#get-unconfirmed-transaction-ids","text":"Get a list of unconfirmed transaction IDs associated with an account. Request: requestType is getUnconfirmedTransactionIds account is one account ID (optional) account is one account ID (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) firstIndex is a zero-based index to the first transaction ID to retrieve (optional) lastIndex is a zero-based index to the last transaction ID to retrieve (optional) Response: unconfirmedTransactionIds (A) is an array of unconfirmed transaction IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Unconfirmed Transaction Ids example.","title":"Get Unconfirmed Transaction Ids"},{"location":"api/#get-unconfirmed-transactions","text":"Get a list of unconfirmed transactions associated with an account. Request: requestType is getUnconfirmedTransactions account is one account ID (optional) account is one account ID (optional) \u22ee requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) firstIndex is a zero-based index to the first unconfirmed transaction to retrieve (optional) lastIndex is a zero-based index to the last unconfirmed transaction to retrieve (optional) Response: unconfirmedTransactions (A) is an array of unconfirmed transactions (refer to Get Transaction for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Unconfirmed Transactions example.","title":"Get Unconfirmed Transactions"},{"location":"api/#search-accounts","text":"Get accounts having a name or description that match a given query in reverse relevance order. Request: requestType is searchAccounts query is a full text query on the account fields name (S) and description (S) in the standard Lucene syntax firstIndex is a zero-based index to the first account to retrieve (optional) lastIndex is a zero-based index to the last account to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: accounts (A) is an array of account objects with the following fields: account (S) is the account number accountRS (S) is the Reed-Solomon address of the account name (S) is the name of the account description (S) is the description of the account (if applicable) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Accounts example.","title":"Search Accounts"},{"location":"api/#send-money","text":"Send Blue0x to another account. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is sendMoney amountNQT is the amount (in NQT) in the transaction recipient is the account ID of the recipient recipientPublicKey is the public key of the receiving account (optional, enhances security of a new account) Response: Refer to Create Transaction Response . Example: Refer to Send Money example.","title":"Send Money"},{"location":"api/#send-blx","text":"Refer to Send Money .","title":"Send BLX"},{"location":"api/#set-account-info","text":"Set account information. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is setAccountInfo name is a name to associate with the account (optional) description is a description to associate with the account (optional) messagePatternRegex is a regular expression pattern following the java.util.regex.Pattern specification; incoming transactions are only accepted if they contain a plain text message which matches this pattern (disabled indefinitely due to a security issue) messagePatternFlags is a bitmask of java.util.regex.Pattern flags, such as 2 (Pattern.CASE-iNSENSITIVE) Response: Refer to Create Transaction Response . Example: Refer to Set Account Info example.","title":"Set Account Info"},{"location":"api/#set-account-property","text":"Set account property. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is setAccountProperty recipient is the account ID of the recipient. property is the property name. value is the property value. Response: Refer to Create Transaction Response . Example: Refer to Set Account Property example.","title":"Set Account Property"},{"location":"api/#start-funding-monitor","text":"Starts a funding monitor that will transfer BLX, an ASSET or a CURRENCY from the funding account to a recipient account when the amount held by the recipient account drops below the threshold. The transfer will not be done until the current block height is greater than equal to the block height of the last transfer plus the interval. The funding account is identified by the secret phrase. The recipient accounts are identified by the specified account property (see Set Account Property ). Each account that has this property set by the funding account will be monitored for changes. The property value can be omitted or it can consist of a JSON string containing one or more values in the format: {\"amount\":long,\"threshold\":long,\"interval\":integer} . POST only. Request: requestType is startFundingMonitor property is the name of the account property amount is the amount to fund the recipient account with (in NQT or QNT) threshold is the threshold interval is the the number of blocks to wait after before funding the recipient secretPhrase is the secret phrase of the funding account holdingType is a string representing the holding type (optional) holding is the holding ID (optional) Response: started (B) is true if the monitor has been started requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Start Funding Monitor example.","title":"Start Funding Monitor"},{"location":"api/#stop-funding-monitor","text":"Stop a funding monitor. When the secret phrase is specified, a single monitor will be stopped. The monitor is identified by the secret phrase, holding and account property. The administrator password is not required and will be ignored. When the administrator password is specified, a single monitor can be stopped by specifying the funding account, holding and account property. If no account is specified, all monitors will be stopped. The holding type and account property name must be specified when the secret phrase or account is specified. Holding type codes are listed in getConstants. In addition, the holding identifier must be specified when the holding type is ASSET or CURRENCY. POST only. Request: requestType is stopFundingMonitor secretPhrase is the secret phrase of the funding account, used to stop a single monitor. (optional) adminPassword is the admin password, used to stop a single monitor or all monitors (optional if secretPhrase is provided) property is the name of the account property (optional) holdingType is a string representing the holding type (optional) holding is the holding ID (optional) account is the account ID (optional) Response: stopped (N) is the number of the monitors that have been stopped requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Stop Funding Monitor example.","title":"Stop Funding Monitor"},{"location":"api/#account-control-operations","text":"","title":"Account Control Operations"},{"location":"api/#get-all-phasing-only-controls","text":"Retrieve all accounts subject to phasing control with their respective restrictions. Request: requestType is getAllPhasingOnlyControls firstIndex is a zero-based index to the first block ID to retrieve (optional) lastIndex is a zero-based index to the last block ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: phasingOnlyControls (A) is an array with phasing only controls objects (Refer to Get Phasing Only Control for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Phasing Only Controls example.","title":"Get All Phasing Only Controls"},{"location":"api/#get-phasing-only-control","text":"Retrieve phasing control with their respective restrictions for a specific account. Request: requestType is getPhasingOnlyControl account is the account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: account (S) is the account number accountRS (S) is the Reed-Solomon address of the account quorum (S) is the minimum number of votes needed to approve the transaction whitelist (A) is an array with the whitelisted accounts including the fields: whitelisted (S) is the account number whitelistedRS (S) is the Reed-Solomon address of the account maxFees (S) is the maximum fees the account can spend per block minDuration (N) is the minimum duration of the phasing period maxDuration (N) is the maximum duration of the phasing period votingModel (N) is an integer code for the method of approval minBalance (S) is the minimum balance (in NQT or QNT) required for voting minBalanceModel (N) is the minimum balance model holding (S) is the asset or currency ID (only included if holding != 0) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Phasing Only Control example.","title":"Get Phasing Only Control"},{"location":"api/#set-phasing-only-control","text":"Sets (or removes) phasing control for a specific account. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is setPhasingOnlyControl controlVotingModel is the voting model or -1 to remove phasing control controlQuorum is the expected quorum (optional) controlMinBalance is the expected minimum balance (optional) controlMinBalanceModel is the expected minimum balance model (optional) controlHolding is the holding ID (optional) controlWhitelisted is the whitelisted accounts (optional, multiple values) controlWhitelisted is the whitelisted accounts (optional, multiple values) controlMaxFees is the maximum allowed accumulated total fees for not yet finished phased transactions (optional) controlMinDuration is the minimum duration in block height (optional) controlMaxDuration is the maximum phasing duration in block height (optional) Response: Refer to Create Transaction Response . Example: Refer to Set Phasing Only Control example.","title":"Set Phasing Only Control"},{"location":"api/#alias-operations","text":"","title":"Alias Operations"},{"location":"api/#buy-sell-alias","text":"Buy or sell an alias. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is either buyAlias or sellAlias alias is the ID of the alias (optional) aliasName is the alias name (optional if alias provided) priceNQT is the asking price (in NQT) of the alias ( sellAlias only) amountNQT is the amount (in NQT) offered for an alias for sale ( buyAlias only) recipient is the account ID of the recipient (only required for sellAlias and only if there is a designated recipient) recipientPublicKey is the public key of the recipient account (only applicable if recipient provided; optional, enhances security of a new account) Note : An alias can be transferred rather than sold by setting priceNQT to zero. A pending sale can be canceled by selling again to self for a price of zero. Response: Refer to Create Transaction Response . Example: Refer to Buy / Sell Alias example.","title":"Buy / Sell Alias"},{"location":"api/#buy-alias","text":"Refer to Buy / Sell Alias .","title":"Buy Alias"},{"location":"api/#sell-alias","text":"Refer to Buy / Sell Alias .","title":"Sell Alias"},{"location":"api/#set-alias","text":"Create and/or assign an alias. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is setAlias aliasName is the alias name aliasURI is the alias URI (e.g. https://www.google.com/ ) Response: Refer to Create Transaction Response . The transaction ID is also the alias ID. Example: Refer to Set Alias example.","title":"Set Alias"},{"location":"api/#delete-alias","text":"Delete an alias given an alias ID or name. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is deleteAlias alias is the alias ID (optional) aliasName is the alias name to be deleted (optional if alias provided) Response: Refer to Create Transaction Response . Example: Refer to Delete Alias example.","title":"Delete Alias"},{"location":"api/#get-alias","text":"Get information about a given alias Request: requestType is getAlias alias is the alias ID (optional) aliasName is the name of the alias (optional if alias provided) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: timestamp (N) is the time (in seconds since the genesis block) when the alias was created or last transferred aliasName (S) is the name of the alias account (S) is the number of the account that owns the alias accountRS (S) is the Reed-Solomon address of the account that owns the alias aliasURI (S) is what the alias points to, in URI format alias (S) is the alias ID priceNQT (S) is the asking price (in NQT) of the alias if it is for sale buyer (S) is the account number of the buyer if the alias is for sale and a buyer is specified lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Alias example.","title":"Get Alias"},{"location":"api/#get-alias-count","text":"Get the number of aliases owned by an account given the account ID. Request: requestType is getAliasCount account is the account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfAliases (N) is the number of aliases owned by the account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Alias Count example.","title":"Get Alias Count"},{"location":"api/#get-aliases","text":"Get information on aliases owned by a given account in alias name order. Request: requestType is getAliases account is the ID of the account that owns the aliases timestamp is the earliest creation time (in seconds since the genesis block) of the aliases (optional) firstIndex is a zero-based index to the first alias to retrieve (optional) lastIndex is a zero-based index to the last alias to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: aliases (A) is an array of alias objects (refer to Get Alias for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Aliases example.","title":"Get Aliases"},{"location":"api/#get-aliases-like","text":"Get all aliases starting with a given prefix in alias name order. Request: requestType is getAliasesLike aliasPrefix is the prefix (at least 2 characters long) of the aliasName firstIndex is a zero-based index to the first alias to retrieve (optional) lastIndex is a zero-based index to the last alias to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: aliases (A) is an array of alias objects (refer to Get Alias for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Aliases Like example.","title":"Get Aliases Like"},{"location":"api/#arbitrary-message-system-operations","text":"","title":"Arbitrary Message System Operations"},{"location":"api/#decrypt-from","text":"Decrypt an AES-encrypted message. Request: requestType is decryptFrom secretPhrase is the secret passphrase of the recipient account is the account ID of the recipient data is AES-encrypted data nonce is the unique nonce associated with the encrypted data decryptedMessageIsText is false if the decrypted message is a hex string, otherwise the decrypted message is text (optional) uncompressDecryptedMessage is false to prevent gzip uncompression after decryption (optional) Response: decryptedMessage (S) is the decrypted message requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Decrypt From example.","title":"Decrypt From"},{"location":"api/#download-prunable-message","text":"Downloadins a prunable message attachments directly as binary data. An optional secretPhrase parameter is supported, to allow decryption and downloading of the encrypted part of the message instead of the plain text part. Request: requestType is downloadPrunableMessage transaction is the transaction ID secretPhrase is the secret passphrase used to decrypt the encrypted part of the message (optional) sharedKey is the shared key used to decrypt the message (optional) (see Get Shared Key ) retrieve is true to retrieve the message from achival node if needed (optional) requireBlock is theblock ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: The prunable data as a binary file. Example: Refer to Download Prunable Message example.","title":"Download Prunable Message"},{"location":"api/#encrypt-to","text":"Encrypt a message using AES without sending it. Request: requestType is encryptTo secretPhrase is the secret passphrase of the sender recipient is the account ID of the recipient messageToEncrypt is either UTF-8 text or a string of hex digits to be compressed and converted into a 1000 byte maximum bytecode then encrypted using AES messageToEncryptIsText is false if the message to encrypt is a hex string, otherwise the message to encrypt is text (optional) compressMessageToEncrypt is false to prevent gzip compression before encryption (optional) Response: data (S) is the AES-encrypted data nonce (S) is a 32-byte pseudorandom nonce requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Encrypt To example.","title":"Encrypt To"},{"location":"api/#get-all-prunable-messages","text":"Get all available prunable messages in reverse block timestamp order. Request: requestType is getAllPrunableMessages timestamp is the earliest message (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first prunable message to retrieve (optional) lastIndex is a zero-based index to the last prunable message to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: prunableMessages (A) is an array of prunable messages (refer to Get Prunable Message ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Get All Prunable Messages example.","title":"Get All Prunable Messages"},{"location":"api/#get-prunable-message","text":"Get the prunable message given a transaction ID, optionally decrypting it if encrypted and if a secretPhrase is provided, if it is still available. Request: requestType is getPrunableMessage transaction is the transaction ID secretPhrase is the secret phrase needed for decryption (optional) sharedKey is the shared key used to decrypt the message (optional) (see Get Shared Key ) retrieve is true to retrieve pruned data from other nodes if not available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: sender (S) is the sender account number senderRS (S) is the Reed-Solomon address of the sender account recipient (S) is the recipient account number recipientRS (S) is the Reed-Solomon address of the recipient account message (S) is the plain message text messageIsText (B) is true if the plain message is text, false if it is a hex string encryptedMessage (O) is the encrypted message object, containing data (S) and nonce (S) fields encryptedMessageIsText (B) is true if the encrypted message is text, false if it is a hex string decryptedMessage (S) is the decrypted and decompressed (if necessary) encrypted message, if applicable and if secretPhrase is provided isCompressed (B) is true if the encrypted message was compressed before encryption, if applicable transaction (S) is the transaction ID transactionTimestamp (N) is the transaction timestamp (in seconds since the genesis block) blockTimestamp (N) is the block timestamp (in seconds since the genesis block) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Get Prunable Message example.","title":"Get Prunable Message"},{"location":"api/#get-prunable-messages","text":"Get all still-available prunable messages given an account id, optionally limiting to only those with another account as recipient or sender, in reverse chronological order. Request: requestType is getPrunableMessages account is the account ID otherAccount is another account ID, either sender or recipient, to limit the response secretPhrase is the secret phrase needed for decryption (optional) timestamp is the earliest prunable message (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first prunable message to retrieve (optional) lastIndex is a zero-based index to the last prunable message to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: prunableMessages (A) is an array of prunable message objects (refer to Get Prunable Message for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Get Prunable Messages example.","title":"Get Prunable Messages"},{"location":"api/#get-shared-key","text":"Get the one-time shared key used for encryption of messages. Request: requestType is getSharedKey account is the recipient account ID secretPhrase is the secret phrase of the sender nonce is the 32-byte pseudorandom nonce Response: sharedKey (S) is shared key as a hexadecimal string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Shared Key example.","title":"Get Shared Key"},{"location":"api/#read-message","text":"Get a message given a transaction ID. Request: requestType is readMessage transaction is the transaction ID of the message secretPhrase is the secret passphrase of the account that received the message (optional) sharedKey is the shared key used to decrypt the message (optional) (see Get Shared Key ) retrieve is true to retrieve pruned data from archival nodes (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: messageIsPrunable (B) is true if there is a plain message and it is prunable, false if it is not prunable message (S) is the plain message, if applicable encryptedMessageIsPrunable (B) is true if there is an encrypted message and it is prunable, false if it is not prunable decryptedMessage (S) is the decrypted message, if applicable and only if the provided secretPhrase belongs to either the sender or receiver of the transaction decryptedMessageToSelf (S) is the decrypted message sent to self, if applicable and only if the provided secretPhrase belongs to the sender of transaction lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Read Message example.","title":"Read Message"},{"location":"api/#send-message","text":"Create an Arbitrary Message transaction. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is sendMessage recipient is the account ID of the recipient (optional) recipientPublicKey is the public key of the receiving account (optional, enhances security of a new account) message is either UTF-8 text or a string of hex digits (perhaps previously encoded using an arbitrary algorithm) to be converted into a bytecode with a maximum length of one kilobyte, 42 kilobytes if prunable (optional) messageIsText is false if the message is a hex string, otherwise the message is text (optional) messageIsPrunable is true if the message is prunable (optional) messageToEncrypt is either UTF-8 text or a string of hex digits to be compressed (unless compressMessageToEncrypt is false ) and converted into a bytecode with a maximum length of one kilobyte, 42 kilobytes if prunable, then encrypted using AES (optional) messageToEncryptIsText is false if the message to encrypt is a hex string, otherwise the message to encrypt is text (optional) encryptedMessageData is already encrypted data which overrides messageToEncrypt if provided (optional) encryptedMessageNonce is a unique 32-byte number which cannot be reused (optional unless encryptedMessageData is provided) encryptedMessageIsPrunable is true if the encrypted message is prunable (optional) compressMessageToEncrypt is false to prevent gzip compression before encryption (optional) messageToEncryptToSelf is either UTF-8 text or a string of hex digits to be compressed (unless compressMessageToEncryptToSelf is false) and converted into a one kilobyte maximum bytecode then encrypted with AES, then sent to the sending account (optional) messageToEncryptToSelfIsText is false if the message to self-encrypt is a hex string, otherwise the message to encrypt is text (optional) encryptToSelfMessageData is already encrypted data which overrides messageToEncryptToSelf if provided (optional) encryptToSelfMessageNonce is a unique 32-byte number which cannot be reused (optional unless encryptToSelfMessageData is provided) compressMessageToEncryptToSelf is false to prevent gzip compression before encryption (optional) Note: Any combination (including none or all) of the three options plain message , messageToEncrypt , and messageToEncryptToSelf will be included in the transaction. However, one and only one prunable message may be included in a single transaction if there is not already a message of the same type (either plain or encrypted). Note: The encryptedMessageData-encryptedMessageNonce pair or the encryptToSelfMessageData-encryptToSelfMessageNonce pair can be the output of Encrypt To Response: Refer to Create Transaction Response . Example: Refer to Send Message example.","title":"Send Message"},{"location":"api/#verify-prunable-message","text":"Verify that a prunable message obtained from any source, when hashed, matches the hash of the original prunable message. Request: Refer to Send Message for more details about the following request parameters. requestType is verifyPrunableMessage message is the plain message, if applicable (optional) messageIsText is false if the provided plain message is a hex string (optional) encryptedMessageData is the data part of the encrypted data-nonce pair (optional if message provided) encryptedMessageNonce is the nonce part of the encrypted data-nonce pair (required if encryptedMessageData provided) messageToEncryptIsText is false if the encrypted message was a hex string before encryption (optional) compressMessageToEncrypt is false if the encrypted message was not compressed before encryption (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: The hash is computed from the message itself plus its associated flag(s) isText and isCompressed (encrypted only); therefore the flag(s) must be provided for verification if different from the default(s). The original encryptedMessageData-encryptedMessageNonce pair used to compute the original hash must be provided again to recompute the hash for verification of a prunable encrypted message. Response: version.PrunablePlainMessage or version.PrunableEncryptedMessage (N) is 1 , the version number verify (B) is true if the original hash matches the hash computed from the provided values message (S) or encryptedMessage (O) is the prunable plain message or the prunable encrypted message object containing the fields: data (S) nonce (B) isText (B) isCompressed (B) messageIsText (B) is true if the plain message is text, false if it is a hex string, if applicable messageHash or encryptedMessageHash (S) is the hash lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Verify Prunable Message example.","title":"Verify Prunable Message"},{"location":"api/#asset-exchange-operations","text":"","title":"Asset Exchange Operations"},{"location":"api/#cancel-order","text":"Cancel an existing asset order. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is either cancelBidOrder or cancelAskOrder order is the order ID of the order being canceled Response: Refer to Create Transaction Response . Example: Refer to Cancel Order example.","title":"Cancel Order"},{"location":"api/#cancel-ask-order","text":"Refer to Cancel Order .","title":"Cancel Ask Order"},{"location":"api/#cancel-bid-order","text":"Refer to Cancel Order .","title":"Cancel Bid Order"},{"location":"api/#delete-asset-shares","text":"Permanently deletes a specified quantity of owned asset shares. Request: Refer to Create Transaction Request for common parameters. requestType is deleteAssetShares asset is the asset ID quantityQNT is the quantity (in QNT) of the asset to be deleted Response: Refer to Create Transaction Response . Example: Refer to Delete Asset Shares example.","title":"Delete Asset Shares"},{"location":"api/#dividend-payment","text":"Pay dividend to all shareholders of an asset. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dividendPayment asset is the asset ID height is the blockchain height at which asset holders shares will be counted (must be less than 1440 blocks in the past) amountNQTPerQNT is dividend amount (in NQT per QNT of the asset) Response: Refer to Create Transaction Response . Example: Refer to Dividend Payment example.","title":"Dividend Payment"},{"location":"api/#get-account-asset-count","text":"Get the number of assets owned by an account given the account ID. Request: requestType is getAccountAssetCount account is the account ID height is the height of the blockchain to determine the asset count (optional, default is last block) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: numberOfAssets (N) is the number of assets owned by the account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Asset Count example.","title":"Get Account Asset Count"},{"location":"api/#get-account-assets","text":"Get the assets owned by a given account in reverse quantity order. Request: requestType is getAccountAssets account is the account ID asset is an asset ID filter (optional) height is the blockchain height at which to retrieve balances (optional, default is the last block in the blockchain) includeAssetInfo is true if asset information is to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: accountAssets (A) is an array of asset objects (unless the asset parameter is specified) with the following fields for each asset: quantityQNT (S) is the quantity (in QNT) of the asset unconfirmedQuantityQNT (S) is the unconfirmed quantity (in QNT) of the asset decimals (N) is the number of decimal places used by the asset (if includeAssetInfo is true ) name (S) is the asset name (if includeAssetInfo is true ) asset (S) is the asset ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Assets example.","title":"Get Account Assets"},{"location":"api/#get-account-current-order-ids","text":"Get current asset order IDs given an account ID in reverse block height order. Request: requestType is either getAccountCurrentBidOrderIds or getAccountCurrentAskOrderIds account is the account ID asset is an asset ID filter (optional) firstIndex is a zero-based index to the first order ID to retrieve (optional) lastIndex is a zero-based index to the last order ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: bidOrderIds or askOrderIds (A) is an array of order IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Current Order Ids example.","title":"Get Account Current Order Ids"},{"location":"api/#get-account-current-ask-order-ids","text":"Refer to Get Account Current Order Ids .","title":"Get Account Current Ask Order Ids"},{"location":"api/#get-account-current-bid-order-ids","text":"Refer to Get Account Current Order Ids .","title":"Get Account Current Bid Order Ids"},{"location":"api/#get-account-current-orders","text":"Get current asset orders given an account ID in reverse block height order. Request: requestType is either getAccountCurrentBidOrders or getAccountCurrentAskOrders account is the account ID asset is an asset ID filter (optional) firstIndex is a zero-based index to the first order to retrieve (optional) lastIndex is a zero-based index to the last order to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: bidOrders or askOrders (A) is an array of order objects (refer to Get Order for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Current Orders example.","title":"Get Account Current Orders"},{"location":"api/#get-account-current-ask-orders","text":"Refer to Get Account Current Orders .","title":"Get Account Current Ask Orders"},{"location":"api/#get-account-current-bid-orders","text":"Refer to Get Account Current Orders .","title":"Get Account Current Bid Orders"},{"location":"api/#get-all-assets","text":"Get all assets in the exchange in reverse block height of creation order. Request: requestType is getAllAssets firstIndex is a zero-based index to the first asset to retrieve (optional) lastIndex is a zero-based index to the last asset to retrieve (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset objects (refer to Get Asset ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Assets example.","title":"Get All Assets"},{"location":"api/#get-all-open-orders","text":"Get all open bid/ask orders in reverse block height order. Request: requestType is either getAllOpenBidOrders or getAllOpenAskOrders firstIndex is a zero-based index to the first order to retrieve (optional) lastIndex is a zero-based index to the last order to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: openOrders (A) is an array of order objects (refer to Get Order for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Open Orders example.","title":"Get All Open Orders"},{"location":"api/#get-all-open-ask-orders","text":"Refer to Get All Open Orders .","title":"Get All Open Ask Orders"},{"location":"api/#get-all-open-bid-orders","text":"Refer to Get All Open Orders .","title":"Get All Open Bid Orders"},{"location":"api/#get-all-trades","text":"Get all trades since a given timestamp in reverse block height order. Request: requestType is getAllTrades timestamp is the timestamp (in seconds since the genesis block) to begin retrieving trades (optional, default 0) firstIndex is a zero-based index to the first trade to retrieve (optional) lastIndex is a zero-based index to the last trade to retrieve (optional) includeAssetInfo is true if asset information is to be included in the result (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If timestamp is omitted or zero, and no index is given, all trades in the entire blockchain will be retrieved, which may timeout or crash your system. Response: trades (A) is an array of trade objects (refer to Get Trades ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Trades example.","title":"Get All Trades"},{"location":"api/#get-asset","text":"Get asset information given an asset ID. Request: requestType is getAsset asset is the asset ID includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: account (S) is the number of the account that issued the asset accountRS (S) is the Reed-Solomon address of the account that issued the asset name (S) is the asset name description (S) is the asset description quantityQNT (S) is the total asset quantity (in QNT) in existence asset (N) is the asset ID decimals (N) is the number of decimal places used by the asset numberOfAccounts (N) is the number of accounts that own the asset numberOfTrades (N) is the number of trades of this asset numberOfTransfers (N) is the number of transfers of this asset lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset example.","title":"Get Asset"},{"location":"api/#get-asset-account-count","text":"Get the number of accounts that own an asset given the asset ID. Request: requestType is getAssetAccountCount asset is the asset ID height is the height of the blockchain to determine the account count (optional, default is last block) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: numberOfAccounts (N) is the number of accounts that own the asset lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset Account Count example.","title":"Get Asset Account Count"},{"location":"api/#get-asset-accounts","text":"Get the accounts that own an asset given the asset ID in reverse quantity order. Request: requestType is getAssetAccounts asset is the asset ID height is the height of the blockchain to determine the accounts (optional, default is last block) firstIndex is a zero-based index to the first account to retrieve (optional) lastIndex is a zero-based index to the last account to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: accountAssets (A) is an array of asset objects with the following fields for each asset: quantityQNT (S) is the quantity (in QNT) of the asset accountRS (S) is the Reed-Solomon address of the account that owns the asset unconfirmedQuantityQNT (S) is the unconfirmed quantity (in QNT) of the asset asset (S) is the asset ID account (S) is the number of the account that owns the asset lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset Accounts example.","title":"Get Asset Accounts"},{"location":"api/#get-asset-deletes","text":"Get asset deletions for a specific asset or account. Request: requestType is getAssetDeletes asset is the asset ID (optional if account is provided) account is the account ID (optional if asset is provided) firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) timestamp is the earliest deletion (in seconds since the genesis block) to retrieve (optional) includeAssetInfo is true if asset information is to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: deletes (A) is an array of asset delete objects with following properties: quantityQNT (S) is the number of shares that was deleted assetDelete (S) is the transaction ID account (S) is the account ID accountRS (S) is the account Reed Solomon address asset (S) is the asset ID height (N) is the block height of the delete timestamp (N) is the block timestamp of the delete decimals (N) is the number of decimal places used by the asset (if includeAssetInfo is true ) name (S) is the asset name (if includeAssetInfo is true ) Example: Refer to Get Asset Deletes example.","title":"Get Asset Deletes"},{"location":"api/#get-asset-dividends","text":"Get the dividend payment history for a specific asset. Request: requestType is getAssetDividends asset is the asset ID firstIndex is a zero-based index to the first dividend payment to retrieve (optional) lastIndex is a zero-based index to the last dividend payment to retrieve (optional) timestamp is the earliest dividend payment (in seconds since the genesis block) to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: dividends (A) is an array of dividend transactions with the following properties: assetDividend (S) is the dividend payment transaction ID numberOfAccounts (N) is the number of accounts that received a dividend amountNQTPerQNT (S) is the amount of BLX (in NQT) paid per quantity (in QNT) of the asset totalDividend (S) is the total amount of BLX (in NQT) sent in the dividend payment dividendHeight (N) is the block height of the dividend calculation asset (S) is the asset ID height (N) is the block height of the dividend payment timestamp (N) is the block timestamp of the dividend payment Example: Refer to Get Asset Dividends example.","title":"Get Asset Dividends"},{"location":"api/#get-asset-ids","text":"Get the IDs of all assets in the exchange in reverse block height of creation order. Request: requestType is getAssetIds firstIndex is a zero-based index to the first asset ID to retrieve (optional) lastIndex is a zero-based index to the last asset ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset Ids example.","title":"Get Asset Ids"},{"location":"api/#get-asset-transfers","text":"Get transfers associated with a given asset and/or account in reverse block height order (or in the expected order of execution for expected transfers). Request: requestType is either getAssetTransfers or getExpectedAssetTransfers , where expected transfers are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block asset is the asset ID (optional) account is the account ID (optional if asset provided) timestamp is the earliest transfer (in seconds since the genesis block) to retrieve (optional, does not apply to expected transfers) firstIndex is a zero-based index to the first transfer to retrieve (optional, does not apply to expected transfers) lastIndex is a zero-based index to the last transfer to retrieve (optional, does not apply to expected transfers) includeAssetInfo is true if the decimals and name fields are to be included (optional, does not apply to expected transfers) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transfers (A) is an array of transfer objects with the following fields for each transfer: quantityQNT (S) is the quantity (in QNT) of the asset traded senderRS (S) is the Reed-Solomon address of the sender assetTransfer (S) is the transaction ID of the asset transfer sender (S) is the account number of the sender recipientRS (S) is the Reed-Solomon address of the recipient decimals (N) is the number of decimal places used by the asset (if includeAssetInfo is true ) recipient (S) is the account number of the recipient name (S) is the name of the asset (if includeAssetInfo is true ) asset (S) is the asset ID height (N) is the height of the transfer block timestamp (N) is the timestamp (in seconds since the genesis block) of the transfer block, does not apply to an expected transfer phased (B) is true if the transaction is phased, false otherwise, applies only to an expected transfer lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset Transfers example.","title":"Get Asset Transfers"},{"location":"api/#get-expected-asset-transfers","text":"Refer to Get Asset Transfers .","title":"Get Expected Asset Transfers"},{"location":"api/#get-assets","text":"Get asset information given multiple asset IDs Request: requestType is getAssets assets is one the multiple asset IDs assets is one the multiple asset IDs includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset objects (refer to Get Asset ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Assets example.","title":"Get Assets"},{"location":"api/#get-assets-by-issuer","text":"Get asset information given multiple creation account IDs in reverse block height of creation order. Request: requestType is getAssetsByIssuer account is one of the multiple account IDs account is one of the multiple account IDs firstIndex is a zero-based index to the first asset to retrieve (optional) lastIndex is a zero-based index to the last asset to retrieve (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset objects (refer to Get Asset ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Assets By Issuer example.","title":"Get Assets By Issuer"},{"location":"api/#get-expected-asset-deletes","text":"Gets asset deletes which are expected to be executed in the next block. Request: requestType is either getExpectedAssetDeletes asset is the asset ID (optional) account is the account ID (optional) firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) timestamp is the earliest deletion (in seconds since the genesis block) to retrieve (optional) includeAssetInfo is true if asset information is to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: deletes (A) is an array of expected asset delete objects with following properties: assetDelete (S) is the transaction ID asset (S) is the asset ID account (S) is the account ID accountRS (S) is the account Reed Solomon address quantityQNT (S) is the number of shares that will be deleted decimals (N) is the number of decimal places used by the asset (if includeAssetInfo is true ) name (S) is the asset name (if includeAssetInfo is true ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Expected Asset Deletes example.","title":"Get Expected Asset Deletes"},{"location":"api/#get-order","text":"Get a bid/ask order given an order ID. Request: requestType is either getBidOrder or getAskOrder order is the Order ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: account (S) is the account number associated with the order accountRS (S) is the Reed-Solomon address of the account asset (S) is the ID of the asset being ordered quantityQNT (S) is the order quantity (in QNT) priceNQT (S) is the order price (in NQT) height (N) is the block height of the order transaction transactionHeight (N) is the transaction height transactionIndex (N) is a zero-based index giving the order of the transaction in its block order (S) is the ID of the order type (S) is the type of order ( bid or ask ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Order example.","title":"Get Order"},{"location":"api/#get-ask-order","text":"Refer to Get Order .","title":"Get Ask Order"},{"location":"api/#get-bid-order","text":"Refer to Get Order .","title":"Get Bid Order"},{"location":"api/#get-order-ids","text":"Get bid/ask order IDs given an asset ID, in order of decreasing bid price or increasing ask price. Request: requestType is either getBidOrderIds or getAskOrderIds asset is the asset ID firstIndex is a zero-based index to the first order ID to retrieve (optional) lastIndex is a zero-based index to the last order ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: bidOrderIds or askOrderIds (A) is an array of order IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Order Ids example.","title":"Get Order Ids"},{"location":"api/#get-ask-order-ids","text":"Refer to Get Order Ids .","title":"Get Ask Order Ids"},{"location":"api/#get-bid-order-ids","text":"Refer to Get Order Ids .","title":"Get Bid Order Ids"},{"location":"api/#get-orders","text":"Get bid/ask orders given an asset ID, in order of decreasing bid price or increasing ask price (if sortByPrice is true for expected orders, otherwise in the expected order of execution). Request: requestType is one of getBidOrders , getAskOrders , getExpectedBidOrders or getExpectedAskOrders , where expected orders are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block asset is the asset ID sortByPrice is true to sort by price (optional, applies only to expected orders, which are returned in expected order of execution by default) showExpectedCancellations is true to include orders that are expected to be cancelled in the next block, based on the content of the unconfirmed transactions pool and the phased transactions expected to finish in the next block (optional, does not apply to expected orders) firstIndex is a zero-based index to the first order to retrieve (optional, does not apply to expected orders) lastIndex is a zero-based index to the last order to retrieve (optional, does not apply to expected orders) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: bidOrders or askOrders (A) is an array of order objects (refer to Get Order for details) with the following additional field only for an expected order: phased (B) is true if the order is phased, false otherwise lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Orders example.","title":"Get Orders"},{"location":"api/#get-ask-orders","text":"Refer to Get Orders .","title":"Get Ask Orders"},{"location":"api/#get-bid-orders","text":"Refer to Get Orders .","title":"Get Bid Orders"},{"location":"api/#get-expected-ask-orders","text":"Refer to Get Orders .","title":"Get Expected Ask Orders"},{"location":"api/#get-expected-bid-orders","text":"Refer to Get Orders .","title":"Get Expected Bid Orders"},{"location":"api/#get-expected-order-cancellations","text":"Get all expected order cancellations in the order in which they are expected to be executed. Request: requestType is getExpectedOrderCancellations , where expected cancellations are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: orderCancellations (A) is an array of order cancellation objects with the following fields for each transfer: account (S) is the cancelling account number accountRS (S) is the Reed-Solomon address of the account order (S) is the ID of the order to be cancelled height (N) is the block height of the order cancellation transaction phased (B) is true if the order cancellation transaction is phased lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Expected Order Cancellations example.","title":"Get Expected Order Cancellations"},{"location":"api/#get-last-trades","text":"Get the last trade of each of multiple assets. Request: requestType is getLastTrades assets is one of multiple asset IDs assets is one of multiple asset IDs requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: trades (A) is an array of trade objects (refer to Get Trades without name and decimals for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Last Trades example.","title":"Get Last Trades"},{"location":"api/#get-order-trades","text":"Get all trades that were executed as a result of a given askOrder and/or bidOrder in reverse block height order. Request: requestType is getOrderTrades askOrder is an ask order ID (optional) bidOrder is a bid order ID (optional if askOrder provided) firstIndex is a zero-based index to the first trade to retrieve (optional) lastIndex is a zero-based index to the last trade to retrieve (optional) includeAssetInfo is true if the decimals and name fields are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Trades . Example: Refer to Get Order Trades example.","title":"Get Order Trades"},{"location":"api/#get-trades","text":"Get trades associated with a given asset and/or account in reverse block height order. Request: requestType is getTrades asset is the asset ID (optional) account is the account ID (optional if asset provided) firstIndex is a zero-based index to the first trade to retrieve (optional) lastIndex is a zero-based index to the last trade to retrieve (optional) timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) includeAssetInfo is true if the decimals and name fields are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: trades (A) is an array of trade objects with the following fields for each trade: seller (S) is the account number of the seller quantityQNT (S) is the quantity (in QNT) of the asset traded bidOrder (S) is the bid order ID sellerRS (S) is the Reed-Solomon address of the seller buyer (S) is the account number of the buyer priceNQT (S) is the trade price (in NQT, the ask price for a buy or the bid price for a sell) askOrder (S) is the ask order ID buyerRS (S) is the Reed-Solomon address of the buyer decimals (N) is the number of decimal places used by the asset name (S) is the name of the asset (if includeAssetInfo is true ) block (S) is the block ID of the trade (if includeAssetInfo is true ) asset (S) is the asset ID askOrderHeight (N) is the block height of the ask order bidOrderHeight (N) is the block height of the bid order tradeType (S) is the trade type ( sell or buy , where buy implies that the bid occurred after the ask, or if in the same block, has a greater order ID) timestamp (N) is the timestamp (in seconds since the genesis block) of the trade block height (N) is the height of the trade block lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Trades example.","title":"Get Trades"},{"location":"api/#issue-asset","text":"Create an asset on the exchange. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is issueAsset name is the name of the asset description is a url-encoded description of the asset in UTF-8 with a maximum length of 1000 bytes (optional) quantityQNT is the total amount (in QNT) of the asset in existence decimals is the number of decimal places used by the asset (optional, zero default) Response: Refer to Create Transaction Response . The transaction ID is also the asset ID. Example: Refer to Issue Asset example.","title":"Issue Asset"},{"location":"api/#place-order","text":"Place an asset order. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is either placeBidOrder or placeAskOrder asset is the asset ID of the asset being ordered quantityQNT is the amount (in QNT) of the asset being ordered priceNQT is the bid/ask price (in NQT) Response: Refer to Create Transaction Response . The transaction ID is also the order ID. Example: Refer to Place Order example.","title":"Place Order"},{"location":"api/#place-ask-order","text":"Refer to Place Order .","title":"Place Ask Order"},{"location":"api/#place-bid-order","text":"Refer to Place Order .","title":"Place Bid Order"},{"location":"api/#search-assets","text":"Get assets having a name or description that match a given query in reverse relevance order. Request: requestType is searchAssets query is a full text query on the asset fields name (S) and description (S) in the standard Lucene syntax firstIndex is a zero-based index to the first asset to retrieve (optional) lastIndex is a zero-based index to the last asset to retrieve (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset objects (refer to Get Asset ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Assets example.","title":"Search Assets"},{"location":"api/#transfer-asset","text":"Transfer a quantity of an asset from one account to another. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is transferAsset recipient is the recipient account ID recipientPublicKey is the public key of the recipient account (optional, enhances security of a new account) asset is the ID of the asset being transferred quantityQNT is the amount (in QNT) of the asset being transferred Response: Refer to Create Transaction Response . The transaction ID is also the transfered asset ID. Example: Refer to Transfer Asset example.","title":"Transfer Asset"},{"location":"api/#block-operations","text":"","title":"Block Operations"},{"location":"api/#get-block","text":"Get a block object given a block ID or block height. Request: requestType is getBlock block is the block ID (optional) height is the block height (optional if block provided) timestamp is the timestamp (in seconds since the genesis block) of the block (optional if height provided) includeTransactions is true to include transaction details (optional) includeExecutedPhased is true to include approved and executed phased transactions (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: block overrides height which overrides timestamp . Response: previousBlockHash (S) is the 32-byte hash of the previous block payloadLength (N) is the length (in bytes) of all transactions included in the block totalAmountNQT (S) is the total amount (in NQT) of the transactions in the block generationSignature (S) is the 32-byte generation signature of the generating account generator (S) is the generating account number generatorPublicKey (S) is the 32-byte public key of the generating account baseTarget (S) is the base target for the next block generation payloadHash (S) is the 32-byte hash of the payload (all transactions) generatorRS (S) is the Reed-Solomon address of the generating account nextBlock (S) is the next block ID numberOfTransactions (N) is the number of transactions in the block blockSignature (S) is the 64-byte block signature transactions (A) is an array of transaction IDs or transaction objects (if includeTransactions provided, refer to Get Transaction for details) executedPhasedTransactions (A) is an array of transaction IDs or transaction objects (if includeExecutedPhased provided, refer to Get Transaction for details) version (N) is the block version totalFeeNQT (S) is the total fee (in NQT) of the transactions in the block previousBlock (S) is the previous block ID cumulativeDifficulty (S) is the cumulative difficulty for the next block generation block (S) is the block ID height (N) is the zero-based block height timestamp (N) is the timestamp (in seconds since the genesis block) of the block lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Block example.","title":"Get Block"},{"location":"api/#get-block-id","text":"Get a block ID given a block height. Request: requestType is getBlockId height is the block height requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: block (S) is the block ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Block Id example.","title":"Get Block Id"},{"location":"api/#get-blocks","text":"Get blocks from the blockchain in reverse block height order. Request: requestType is getBlocks timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) firstIndex is first block to retrieve (optional, default is zero or the last block on the blockchain) lastIndex is the last block to retrieve (optional, default is firstIndex + 99) includeTransactions is true to include transaction details (optional) includeExecutedPhased is true to include approved and executed phased transactions (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: blocks (A) is an array of blocks retrieved (refer to Get Block for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Blocks example.","title":"Get Blocks"},{"location":"api/#get-ec-block","text":"Get Economic Cluster block data. Request: requestType is getECBlock timestamp is the timestamp (in seconds since the genesis block) of the EC block (optional, default (or zero) is the current timestamp) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If timestamp is more than 15 seconds before the timestamp of the last block on the blockchain, errorCode 4 is returned. Response: ecBlockHeight (N) is the EC block height ecBlockId (S) is the EC block ID timestamp (N) is the timestamp (in seconds since the genesis block) of the EC block lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get EC Block example.","title":"Get EC Block"},{"location":"api/#digital-goods-store-operations","text":"In the BLX client interface, the Digital Goods Store (DGS) is referred to as the 'Marketplace'.","title":"Digital Goods Store Operations"},{"location":"api/#dgs-delisting","text":"Delist a listed product. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsDelisting goods is the goods ID Response: Refer to Create Transaction Response . Example: Refer to DGS Delisting example.","title":"DGS Delisting"},{"location":"api/#dgs-delivery","text":"Deliver a product. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsDelivery purchase is the purchase order ID discountNQT is a discount (in NQT) off the selling price (optional, default is zero) goodsToEncrypt is the product, a text or a hex string to be encrypted (optional if goodsData provided) goodsIsText is false if goodsToEncrypt is a hex string (optional) goodsData is AES-encrypted (using Encrypt To ) goodsToEncrypt , up to 1000 bytes long (required only if secretPhrase is omitted) goodsNonce is the unique nonce associated with the encrypted data (required only if secretPhrase is omitted) Note: If the encrypted goods data is longer than 1000 bytes, use a prunable encrypted message to deliver the goods. Response: Refer to Create Transaction Response . Example: Refer to DGS Delivery example.","title":"DGS Delivery"},{"location":"api/#dgs-feedback","text":"Give feedback about a purchased product after delivery. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsFeedback purchase is the purchase order ID message is unencrypted (public) feedback text up to 1000 bytes Note : The unencrypted message parameter is used for public feedback. Response: Refer to Create Transaction Response . Example: Refer to DGS Feedback example.","title":"DGS Feedback"},{"location":"api/#dgs-listing","text":"List a product in the DGS by creating a listing transaction. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsListing name is the name of the product up to 100 characters in length description is a description of the product up to 1000 characters in length tags are up to three comma separated keywords describing the product up to 100 characters in length (optional) quantity is the quantity of the product for sale priceNQT is the price (in NQT) of the product Response: Refer to Create Transaction Response . The transaction ID is also the goods ID. Example: Refer to DGS Listing example.","title":"DGS Listing"},{"location":"api/#dgs-price-change","text":"Change the price of a listed product. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsPriceChange goods is the goods ID of the product priceNQT is the new price of the product Response: Refer to Create Transaction Response . Example: Refer to DGS Price Change example.","title":"DGS Price Change"},{"location":"api/#dgs-purchase","text":"Purchase a product for sale. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsPurchase goods is the goods ID of the product priceNQT is the price of the product quantity is the quantity to be purchased deliveryDeadlineTimestamp is the timestamp (in seconds since the genesis block) by which delivery of the product must occur Response: Refer to Create Transaction Response . The transaction ID is also the purchase order ID. Example: Refer to DGS Purchase example.","title":"DGS Purchase"},{"location":"api/#dgs-quantity-change","text":"Change the quantity of a listed product. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsQuantityChange goods is the goods ID of the product deltaQuantity is the change in the quantity of the product for sale (use negative numbers for a decrease in quantity) Response: Refer to Create Transaction Response . Example: Refer to DGS Quantity Change example.","title":"DGS Quantity Change"},{"location":"api/#dgs-refund","text":"Refund a purchase. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsRefund purchase is the purchase order ID refundNQT is the amount (in NQT) of the refund Response: Refer to Create Transaction Response . Example: Refer to DGS Refund example.","title":"DGS Refund"},{"location":"api/#get-dgs-expired-purchases","text":"Get purchase orders which have expired without being delivered, given a seller ID, in reverse chronological order. Request: requestType is getDGSExpiredPurchases seller is the account ID of the product seller firstIndex is a zero-based index to the first purchase order to retrieve (optional) lastIndex is a zero-based index to the last purchase order to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: purchases (A) is an array of purchase orders (refer to Get DGS Purchase for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Expired Purchases example.","title":"Get DGS Expired Purchases"},{"location":"api/#get-dgs-good","text":"Get a DGS product given a goods ID. Request: requestType is getDGSGood goods is the goods ID of the product includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: seller (S) is the seller's account ID quantity (N) is the quantity of the product remaining for sale goods (S) is the ID of the product description (S) is the description of the product sellerRS (S) is the Reed-Solomon address of the seller's account requestProcessingTime (N) is the API request processing time (in millisec) delisted (B) is true if the product has been delisted, false otherwise parsedTags (A) is an array of up to three tag strings, parsed from the tags field tags (S) is the comma separated list of tags provided by the seller when the listing was created priceNQT (S) is the current price of the product numberOfPublicFeedbacks (N) is the number of public feedbacks given for the product name (S) is the name of the product numberOfPurchases (N) is the number of purchases of the product timestamp (N) is the timestamp (in seconds since the genesis block) of the creation of the product listing lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) Example: Refer to Get DGS Good example.","title":"Get DGS Good"},{"location":"api/#get-dgs-goods","text":"Get DGS products for sale in reverse chronological listing creation order unless a seller is given, then in product name order. Request: requestType is getDGSGoods seller is the account ID of the product seller (optional) firstIndex is a zero-based index to the first product to retrieve (optional) lastIndex is a zero-based index to the last product to retrieve (optional) inStockOnly is false if out-of-stock products (zero quantity) are to be retrieved (optional) hideDelisted is true if delisted products are to be omitted (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If none of the optional parameters are specified, all in-stock products in the blockchain are retrieved at once, which may take a long time. Response: goods (A) is an array of goods (refer to Get DGS Good for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Goods example.","title":"Get DGS Goods"},{"location":"api/#get-dgs-goods-count","text":"Get the number of products for sale by a given seller or all sellers. Request: requestType is getDGSGoodsCount seller is the account ID of the seller (optional, default is all sellers combined) inStockOnly is false if out-of-stock (zero quantity) products are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfGoods (N) is the number of goods for sale by the seller lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: The numberOfGoods field refers to the number of distinct products for sale, regardless of the quantity of each. Example: Refer to Get DGS Goods Count example.","title":"Get DGS Goods Count"},{"location":"api/#get-dgs-goods-purchase-count","text":"Get the number of completed purchase orders given a goods ID. Request: requestType is getDGSGoodsPurchaseCount goods is the goods ID withPublicFeedbacksOnly is true if purchase orders without public feedback are to be omitted (optional) completed is true if only completed purchase orders are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfPurchases (N) is the number of completed purchase orders lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Goods Purchase Count example.","title":"Get DGS Goods Purchase Count"},{"location":"api/#get-dgs-goods-purchases","text":"Get completed purchase orders given a goods ID and optionally a buyer ID in reverse chronological order. Request: requestType is getDGSGoodsPurchases goods is the goods ID buyer is a buyer ID (optional) firstIndex is a zero-based index to the first purchase order to retrieve (optional) lastIndex is a zero-based index to the last purchase order to retrieve (optional) withPublicFeedbacksOnly is true if purchase orders without public feedback are to be omitted (optional) completed is true if only completed purchase orders are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: purchases (A) is an array of purchase orders (refer to Get DGS Purchase for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Goods Purchases example.","title":"Get DGS Goods Purchases"},{"location":"api/#get-dgs-pending-purchases","text":"Get pending purchase orders given a seller ID in reverse chronological order. Request: requestType is getDGSPendingPurchases seller is the account ID of the seller firstIndex is a zero-based index to the first purchase order to retrieve (optional) lastIndex is a zero-based index to the last purchase order to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: purchases (A) is an array of pending purchase orders (refer to Get DGS Purchase for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Pending Purchases example.","title":"Get DGS Pending Purchases"},{"location":"api/#get-dgs-purchase","text":"Get a purchase order given a purchase order ID. Request: requestType is getDGSPurchase purchase is the purchase order ID sharedKey is the shared key used to decrypt the message (optional) (see Get Shared Key ) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: seller (S) is the account number of the seller quantity (N) is the quantity of the product to be purchased feedbackNotes (A) is an array of AES-encrypted objects, each with data (S) and nonce (S) fields, in reverse chronological order, if applicable publicFeedbacks (A) is an array of feedback strings in reverse chronological order if applicable pending (B) is true if the deliveryDeadline has not passed, false otherwise purchase (S) is the purchase order ID goods (S) is the ID of the product sellerRS (S) is the Reed-Solomon address of the seller buyer (S) is the account number of the buyer priceNQT (S) is the price (in NQT) of the product deliveryDeadlineTimestamp (N) is the timestamp (in seconds since the genesis block) by which the product must be delivered goodsIsText (B) is false if the message is a hex string, otherwise the message is text (optional) buyerRS (S) is the Reed-Solomon address of the buyer refundNQT (S) is the amount (in NQT) refunded, if applicable name (S) is the name of the product goodsData (O) is an object with the two fields data (S) (the encrypted product hex string) and nonce (S), if the product has been delivered timestamp (N) is the timestamp (in seconds since the genesis block) of the purchase order lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Purchase example.","title":"Get DGS Purchase"},{"location":"api/#get-dgs-purchase-count","text":"Get the number of purchase orders given a seller and/or buyer ID, or all orders combined. Request: requestType is getDGSPurchaseCount seller is the account ID of the seller (optional, default is all sellers) buyer is the account ID of the buyer (optional, default is all buyers) withPublicFeedbacksOnly is true if purchase orders without public feedback are to be omitted (optional) completed is true if only completed purchase orders are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfPurchases (N) is the number of purchase orders associated with the seller and/or buyer lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Purchase Count example.","title":"Get DGS Purchase Count"},{"location":"api/#get-dgs-purchases","text":"Get purchase orders given a seller and/or buyer ID in reverse chronological order. Request: requestType is getDGSPurchases seller is the account ID of the seller (optional) buyer is the account ID of the buyer (optional if seller provided) firstIndex is a zero-based index to the purchase order to retrieve (optional) lastIndex is a zero-based index to the purchase order to retrieve (optional) withPublicFeedbacksOnly is true if purchase orders without public feedback are to be omitted (optional) completed is true if only completed purchase orders are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: purchases (A) is an array of purchase orders (refer to Get DGS Purchase for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Purchases example.","title":"Get DGS Purchases"},{"location":"api/#get-dgs-tag-count","text":"Get the number of tags used by all sellers. Request: requestType is getDGSTagCount inStockOnly is false if tags with no associated in-stock products are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfTags (N) is the number of tags lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Tag Count example.","title":"Get DGS Tag Count"},{"location":"api/#get-dgs-tags","text":"Get tags used by all sellers in reverse inStockCount , reverse totalCount , tag order. Request: requestType is getDGSTags inStockOnly is false if out-of-stock tags are to be retrieved (optional) firstIndex is a zero-based index to the first tag to retrieve (optional) lastIndex is a zero-based index to the last tag to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: tags (A) is an array of tag objects with the following fields for each tag: inStockCount (N) is the number of products available for sale as tagged tag (S) is the tag word totalCount (N) is the total number of products as tagged lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: The ...Count fields refer to the number of distinct products tagged, regardless of the quantity of each. Example: Refer to Get DGS Tags example.","title":"Get DGS Tags"},{"location":"api/#get-dgs-tags-like","text":"Get all tags starting with a given prefix (at least 2 characters long) in reverse inStockCount , reverse totalCount , tag order. Request: requestType is getDGSTagsLike tagPrefix is the prefix (at least 2 characters long) of the tag inStockOnly is false if out-of-stock tags are to be retrieved (optional) firstIndex is a zero-based index to the first tag to retrieve (optional) lastIndex is a zero-based index to the last tag to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: tags (A) is an array of tag objects with the following fields for each tag: inStockCount (N) is the number of products available for sale as tagged tag (S) is the tag word totalCount (N) is the total number of products as tagged lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: The ...Count fields refer to the number of distinct products tagged, regardless of the quantity of each. Example: Refer to Get DGS Tags Like example.","title":"Get DGS Tags Like"},{"location":"api/#search-dgs-goods","text":"Get product listings that have a name or description that match a given query in reverse relevance order, then name order (given a seller), then reverse chronological order. Request: requestType is searchDGSGoods query is a full text query on the goods fields name and description in the standard Lucene syntax (optional) tag is a query on the good field tags in the standard Lucene syntax (optional) seller is the account ID of the product seller (optional) firstIndex is a zero-based index to the first product to retrieve (optional) lastIndex is a zero-based index to the last product to retrieve (optional) inStockOnly is false if out-of-stock products (zero quantity) are to be retrieved (optional) hideDelisted is true if delisted products are to be omitted (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: goods (A) is an array of goods objects (refer to Get DGS Good for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search DGS Goods example.","title":"Search DGS Goods"},{"location":"api/#forging-operations","text":"","title":"Forging Operations"},{"location":"api/#start-stop-get-forging","text":"Start or stop forging with an account, or check to see if an account is forging. POST only. Request: requestType is either startForging , stopForging or getForging secretPhrase is the secret passphrase of the account (optional for stopForging and getForging if password protected like the Debug Operations ) Response: deadline (N) is the estimated time (in seconds since the last block) until the account will forge a block ( startForging and getForging only) hitTime (N) is the estimated time (in seconds since the genesis block) when the account will forge a block ( startForging and getForging only) remaining (N) is the deadline less the elapsed time since the last block ( getForging only) foundAndStopped (B) is true if forging was stopped, false if forging was already stopped ( stopForging only) account (S) is the account number ( getForging only) accountRS (S) is the Reed-Solomon address of the account ( getForging only) requestProcessingTime (N) is the API request processing time (in millisec) Note: A getForging request returns errorCode 5 if the account is not forging. If the account has a zero effectiveBalance , forging can be started but deadline , remainingTime and hitTime will be set to zero. Example: Refer to Start / Stop / Get Forging example.","title":"Start / Stop / Get Forging"},{"location":"api/#get-forging","text":"Refer to Start / Stop / Get Forging .","title":"Get Forging"},{"location":"api/#start-forging","text":"Refer to Start / Stop / Get Forging .","title":"Start Forging"},{"location":"api/#stop-forging","text":"Refer to Start / Stop / Get Forging .","title":"Stop Forging"},{"location":"api/#lease-balance","text":"Lease the entire guaranteed balance of Blue0x to another account, after 1440 confirmations. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is leaseBalance period is the lease period (in number of blocks, 1440 minimum) recipient is the lessee (recipient) account recipientPublicKey is the public key of the lessee (recipient) account (optional, enhances security of a new account) Response: Refer to Create Transaction Response . Example: Refer to Lease Balance example.","title":"Lease Balance"},{"location":"api/#get-next-block-generators","text":"Returns the next block generators ordered by hit time. The list of currently active forgers is first initialized using the block generators with at least 2 blocks generated within the previous 10,000 blocks, excluding accounts without a public key. The list is updated as new blocks are processed. The results are not 100% correct since previously active generators may no longer be running and new generators won't be known until they generate a block. Request: requestType is getNextBlockGenerators -limit_ (N) is the number of next block generators to display. Response: activeCount (N) is the number of active forging accounts lastBlock (S) is the last block ID on the blockchain generators (A) is an array containing the number of next block generators requested effectiveBalanceNXT (N) is the balance (in BLX) of the account available for forging: the unleased guaranteedBalance of this account plus the leased guaranteedBalance of all lessors to this account accountRS (S) is the Reed-Solomon address of the account deadline (N) is the estimated time (in seconds since the last block) until the account will forge a block account (S) is the account number hitTime (N) is the estimated time (in seconds since the genesis block) when the account will forge a block requestProcessingTime (N) is the API request processing time (in millisec) timestamp (N) is the timestamp (in seconds since the genesis block) when the request was executed height (N) is the height of the blockchain Example: Refer to Get Next Block Generators example.","title":"Get Next Block Generators"},{"location":"api/#hallmark-operations","text":"","title":"Hallmark Operations"},{"location":"api/#decode-hallmark","text":"Decode a node hallmark. Request: requestType is decodeHallmark hallmark is the hallmark value Response: valid (B) is true if host is less than 100 characters, weight > 0 and the embedded signature is verified weight (N) is the weight assigned to the hallmark host (S) is the IP address or domain name associated with the hallmark account (S) is the account number associated with the hallmark accountRS (S) is the Reed-Solomon address of the account date (S) is the date the hallmark was created, in YYYY-MM-DD format requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Decode Hallmark example.","title":"Decode Hallmark"},{"location":"api/#mark-host","text":"Generates a node hallmark. POST only. Request: requestType is markHost secretPhrase is the secret passphrase for the account that will be hallmarked on the node host is the IP address or domain name of the node weight is the weight to assign to the node date is the current date in YYYY-MM-DD format Note: Refer to Create Hallmark for details. Response: hallmark (S) is the hallmark hex string requestProcessingTime (N) is the API request processing time (in millisec) Note: Refer to Create Hallmark for instructions for applying the hallmark to a public node. Example: Refer to Mark Host example.","title":"Mark Host"},{"location":"api/#generate-hallmark","text":"Refer to Mark Host .","title":"Generate Hallmark"},{"location":"api/#monetary-system-operations","text":"","title":"Monetary System Operations"},{"location":"api/#can-delete-currency","text":"Determine if a currency can be deleted. Request: requestType is canDeleteCurrency account is the account ID currency is the currency ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: canDelete (B) is true if the currency can be deleted, false otherwise lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: a currency can be deleted only when all units of the currency are held by account . A reservable currency that has not yet been issued can be deleted by the issuer. A mintable currency that has not completed minting cannot be deleted by a non-issuer. Example: Refer to Can Delete Currency example.","title":"Can Delete Currency"},{"location":"api/#currency-buy-sell","text":"Make an exchange request to buy or sell an exchangeable currency. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is currencyBuy or currencySell currency is the currency ID rateNQT is the exchange rate (in NQT per QNT) units is the amount of the currency to buy or sell (in QNT) Note: An exchange request is immediately executed once accepted onto the blockchain based only on currently available offers (refer to Publish Exchange Offer ). The request then expires, regardless of the amount of currency exchanged; the request may be completely filled, partially filled, or expire without any exchange if no matching offers are found. Response: Refer to Create Transaction Response . Example: Refer to Currency Buy / Sell example.","title":"Currency Buy / Sell"},{"location":"api/#currency-buy","text":"Refer to Currency Buy / Sell .","title":"Currency Buy"},{"location":"api/#currency-sell","text":"Refer to Currency Buy / Sell .","title":"Currency Sell"},{"location":"api/#currency-mint","text":"Submit a valid computed nonce to the blockchain in return for newly minted currency. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is currencyMint currency is the mintable currency ID nonce is the computed nonce units is the amount (in QNT) of currency to mint counter (N) is the counter associated with the minting account Note: The hash of nonce must be less than targetBytes provided by Get Minting Target for given units and counter . counter must be increased with each submission. Response: Refer to Create Transaction Response . Example: Refer to Currency Mint example.","title":"Currency Mint"},{"location":"api/#currency-reserve-claim","text":"Claim currency reserve. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is currencyReserveClaim currency is the currency ID units is the amount (in QNT) of reserve currency to claim Note: Holders of a claimable currency may claim the locked NQT backing their units, thus reducing the supply of the currency. Response: Refer to Create Transaction Response . Example: Refer to Currency Reserve Claim example.","title":"Currency Reserve Claim"},{"location":"api/#currency-reserve-increase","text":"Increase the currency reserve of an unissued reservable currency. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is currencyReserveIncrease currency is the currency ID amountPerUnitNQT is the additional amount (in NQT per QNT of reserveSupply ) to reserve (refer to Issue Currency ) Note: An additional amountPerUnitNQT * reserveSupply NQT (beyond what has previously been reserved) will be locked until the issuanceHeight is reached. Upon issuance, if the currency is claimable the NQT will remain locked until claimed; otherwise the NQT will transfer to the issuing account. Also upon issuance, a portion of the reserveSupply QNT will be transfered to each reserving account in proportion to the NQT that was contributed. Response: Refer to Create Transaction Response . Example: Refer to Currency Reserve Increase example.","title":"Currency Reserve Increase"},{"location":"api/#delete-currency","text":"Delete a deletable currency (refer to Can Delete Currency ). POST only. Request: Refer to Create Transaction Request for common parameters. requestType is deleteCurrency currency is the currency ID Response: Refer to Create Transaction Response . Example: Refer to Delete Currency example.","title":"Delete Currency"},{"location":"api/#get-account-currencies","text":"Get the currencies issued by a given account. Request: requestType is getAccountCurrencies account is the account ID currency is a currency ID filter (optional) height is the blockchain height at which the response applies (optional, default is the current height) includeCurrencyInfo is true if several currency information properties is to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: accountCurrencies (A) is an array of currency objects with the following fields: code (S) is the currency code unconfirmedUnits (S) is the amount of unconfirmed currency units (in QNT) decimals (N) is the number of currency decimal places name (S) is the currency name currency (S) is the currency ID units (S) is the amount of currency (in QNT) issuanceHeight (N) is the blockchain height of issuance for a reservable currency type (N) is the currency type bitmask (refer to Get Currency ) issuerAccountRS (S) is the Reed-Solomon address of the issuer account issuerAccount (S) is the issuer account ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Currencies example.","title":"Get Account Currencies"},{"location":"api/#get-account-currency-count","text":"Get the number of currencies issued by a given account. Request: requestType is getAccountCurrencyCount account is the account ID height is the blockchain height at which the response applies (optional, default is the current height) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfCurrencies (N) is the number of currencies issued lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Currency Count example.","title":"Get Account Currency Count"},{"location":"api/#get-account-exchange-requests","text":"Get the exchange requests associated with a given account and/or currency in reverse chronological order (or in expected order of execution for expected requests). Request: requestType is either getAccountExchangeRequests or getExpectedExchangeRequests , where expected requests are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block account is the account ID (optional for expected requests) currency is the currency ID (optional for expected requests if account provided) includeCurrencyInfo is true to include the response fields code , decimals , name , issuanceHeight , type , timestamp , issuerAccountRS and issuerAccount (optional, applies only to expected requests) firstIndex is a zero-based index to the first request to retrieve (optional, does not apply to expected requests) lastIndex is a zero-based index to the last request to retrieve (optional, does not apply to expected requests) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchangeRequests (A) is an array of requests with the following fields for each request: code (S) is a currency code subtype (N) is 5 for buy and 6 for sell decimals (N) is the number of decimal places name (S) is the currency name units (S) is the number of currency units to buy or sell (in QNT) issuanceHeight (N) is the blockchain height of issuance for a reservable currency, zero otherwise type (N) is the currency type bitmask (refer to Get Currency ) transaction (S) is the transaction ID timestamp (N) is the timestamp (in seconds since the genesis block) of the block when the request was executed rateNQT (S) is the exchange rate (in NQT per QNT) issuerAccountRS (S) is the Reed-Solomon address of the issuer account issuerAccount (S) is the issuer account ID phased (B) is true if the transaction is phased (applies only to expected requests) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Exchange Requests example.","title":"Get Account Exchange Requests"},{"location":"api/#get-expected-exchange-requests","text":"Refer to Get Account Exchange Requests .","title":"Get Expected Exchange Requests"},{"location":"api/#get-funding-monitor","text":"Get a funding monitor. Request: requestType is getFundingMonitor secretPhrase is the secret phrase of the funding account, used to get a single monitor. (optional) adminPassword is the admin password, used to get a single monitor or all monitors (optional if secretPhrase is provided) includeMonitoredAccounts is true to include account info of the monitored accounts (optional) property is the name of the account property (optional) holdingType is a string representing the holding type (optional) holding is the holding ID (optional) account is the account ID (optional) Response: monitors (A) is an array of monitor objects including the following fields: holding (S) is the holding ID amount (S) is the amount to fund the monitored accounts with (NQT or QNT) monitoredAccounts (A) is an array of monitored account objects including the following fields (only if includeMonitoredAccounts is true ): amount (S) is the amount to fund the monitored accounts with. Overrides amount in parent object. account (S) is the monitored account ID accountRS (S) is the monitored account Reed Solomon address threshold (S) is the threshold. Overrides threshold in parent object. interval (N) is the interval. Overrides interval in parent object. holdingType (N) is the holding type account (S) is the monitoring account ID accountRS (S) is the Reed Solomon address of the monitoring account property (S) is the account property threshold (S) is the threshold interval (N) is the interval requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Funding Monitor example.","title":"Get Funding Monitor"},{"location":"api/#get-all-currencies","text":"Get all currencies in reverse creation order. Request: requestType is getAllCurrencies firstIndex is a zero-based index to the first currency to retrieve (optional) lastIndex is a zero-based index to the last currency to retrieve (optional) includeCounts is true to include numberOf... fields (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencies (A) is an array of currency objects (refer to Get Currency for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Currencies example.","title":"Get All Currencies"},{"location":"api/#get-all-exchanges","text":"Get all currency exchanges in reverse chronological order. Request: requestType is getAllExchanges timestamp is the earliest timestamp to retrieve (optional) firstIndex is a zero-based index to the first exchange to retrieve (optional) lastIndex is a zero-based index to the last exchange to retrieve (optional) includeCurrencyInfo is true to include some currency details (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects (refer to Get Exchanges for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Exchanges example.","title":"Get All Exchanges"},{"location":"api/#get-available-to-buy","text":"Calculates the rate required in order to completely fill an exchange request. Request: requestType is getAvailableToBuy or getAvailableToSell currency is the currency ID units is the number of units to buy requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: amountNQT (S) is the total amount needed to fill the exchange request units (S) is the number of units rateNQT (S) is the rate for the currency units requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Available To Buy example.","title":"Get Available To Buy"},{"location":"api/#get-available-to-sell","text":"Refer to Get Available To Buy .","title":"Get Available To Sell"},{"location":"api/#get-buy-sell-offers","text":"Get currency buy or sell offers given a currency ID and/or an account ID in order of rate (if sortByRate is true for expected offers, otherwise in the expected order of execution). Request: requestType is one of getBuyOffers , getSellOffers , getExpectedBuyOffers or getExpectedSellOffers , where expected offers are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block currency is the currency ID (optional) account is the account ID (optional if currency provided) availableOnly is true to include only offers with non-zero supply and limit, but is ignored when both currency and account are given (optional, does not apply to expected offers) sortByRate is true to sort by rate (optional, applies only to expected offers, which are returned in expected order of execution by default) firstIndex is a zero-based index to the first offer to retrieve (optional, does not apply to expected offers) lastIndex is a zero-based index to the last offer to retrieve (optional, does not apply to expected offers) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: offers (A) is an array of buy or sell offer objects (refer to Get Offer for details) with the following additional field only for an expected offer: phased (B) is true if the offer is phased, false otherwise lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Buy / Sell Offers example.","title":"Get Buy / Sell Offers"},{"location":"api/#get-buy-offers","text":"Refer to Get Buy / Sell Offers .","title":"Get Buy Offers"},{"location":"api/#get-sell-offers","text":"Refer to Get Buy / Sell Offers .","title":"Get Sell Offers"},{"location":"api/#get-expected-buy-offers","text":"Refer to Get Buy / Sell Offers .","title":"Get Expected Buy Offers"},{"location":"api/#get-expected-sell-offers","text":"Refer to Get Buy / Sell Offers .","title":"Get Expected Sell Offers"},{"location":"api/#get-currencies","text":"Get currencies given multiple currency IDs. Request: requestType is getCurrencies currencies is one of multiple currency IDs currencies is one of multiple currency IDs \u22ee includeCounts is true to include numberOf... fields (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencies (A) is an array of currency objects (refer to Get Currency for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currencies example.","title":"Get Currencies"},{"location":"api/#get-currencies-by-issuer","text":"Get currencies issued by multiple accounts in reverse creation order. Request: requestType is getCurrenciesByIssuer account is one of multiple account IDs account is one of multiple account IDs firstIndex is a zero-based index to the first currency to retrieve (optional) lastIndex is a zero-based index to the last currency to retrieve (optional) includeCounts is true if numberOf... fields are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencies (A) is an array of arrays of currency objects, where the outer array is indexed by the given account IDs (refer to Get Currency for details about the currency objects) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currencies By Issuer example.","title":"Get Currencies By Issuer"},{"location":"api/#get-currency","text":"Get the details of a currency. Request: requestType is getCurrency currency is the currency ID (optional) code is the currency code (optional if currency provided) includeCounts is true if numberOf... fields are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: initialSupply (S) is the initial currency supply (in QNT) currentReservePerUnitNQT (S) is the minimum currency reserve (in NQT per QNT) types (A) is an array of currency types, one or more of: -eXCHANGEABLE_ -cONTROLLABLE_ -rESERVABLE_ -cLAIMABLE_ -mINTABLE_ NON-sHUFFLEABLE code (S) is the currency code creationHeight (N) is the blockchain height of the currency creation minDifficulty (N) is the minimum difficulty for a mintable currency numberOfTransfers (N) is the number of currency transfers description (S) is the currency description minReservePerUnitNQT (S) is the minimum currency reserve (in NQT per QNT) for a reservable currency currentSupply (S) is the current currency supply (in QNT) issuanceHeight (N) is the blockchain height of the currency issuance for a reservable currency requestProcessingTime (N) is the API request processing time (in millisec) type (N) is the currency type bitmask, from least to most significant bit: exchangeable, controllable, reservable, claimable, mintable, non-shuffleable reserveSupply (S) is the reserve currency supply (in NQT) for a reservable currency maxDifficulty (N) is the maximum difficulty for a mintable currency accountRS (S) is the Reed-Solomon address of the issuing account decimals (N) is the number of decimal places used by the currency name (S) is the name of the currency numberOfExchanges (N) is the number of currency exchanges currency (S) is the currency ID maxSupply (S) is the maximum currency supply (in QNT) account (S) is the account ID of the currency issuer algorithm (N) is the algorithm number for a mintable currency: 2 for SHA256, 3 for SHA3, 5 for Scrypt, 25 for Keccak25 lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) Example: Refer to Get Currency example.","title":"Get Currency"},{"location":"api/#get-currency-account-count","text":"Get the number of accounts that hold a given currency. Request: requestType is getCurrencyAccountCount currency is the currency ID height is the blockchain height at which the response applies (optional, default is the current height) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfAccounts (N) is the number of accounts that hold the currency lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Account Count example.","title":"Get Currency Account Count"},{"location":"api/#get-currency-accounts","text":"Get the accounts that hold a given currency in reverse units order. Request: requestType is getCurrencyAccounts currency is the currency ID height is the blockchain height at which the response applies (optional, default is current height) firstIndex is a zero-based index to the first account to retrieve (optional) lastIndex is a zero-based index to the last account to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: accountCurrencies (A) is an array of account objects with the following fields: unconfirmedUnits (S) is the amount of unconfirmed currency units (in QNT) accountRS (S) is the Reed-Solomon address of the account currency (S) is the currency ID units (S) is the amount of currency (in QNT) account (S) is the account number lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Accounts example.","title":"Get Currency Accounts"},{"location":"api/#get-currency-founders","text":"Get a reservable currency's founders. Request: requestType is getCurrencyFounders currency is the currency ID account is an account ID (optional) firstIndex is a zero-based index to the first founder to retrieve (optional) lastIndex is a zero-based index to the last founder to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: founders (A) is an array of founder objects each of which has the following fields: accountRS (S) is the Reed-Solomon address of the founding account amountPerUnitNQT (S) is the amount (in NQT per QNT of reserveSupply ) reserved by the founder currency (S) is the currency ID account (S) is the founding account number lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Founders example.","title":"Get Currency Founders"},{"location":"api/#get-currency-ids","text":"Get all currency IDs in reverse chronological creation order. Request: requestType is getCurrencyIds firstIndex is a zero-based index to the first currency to retrieve (optional) lastIndex is a zero-based index to the last currency to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencyIds (A) is an array of currency IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Ids example.","title":"Get Currency Ids"},{"location":"api/#get-currency-transfers","text":"Get currency transfers given a currency ID and/or an account ID in reverse block height order (or in expected order of execution for expected transfers). Request: requestType is either getCurrencyTransfers or getExpectedCurrencyTransfers , where expected transfers are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block currency is the currency ID (optional) account is the account ID (optional if currency provided) timestamp is the earliest transfer (in seconds since the genesis block) to retrieve (optional, does not apply to expected transfers) firstIndex is a zero-based index to the first transfer to retrieve (optional, does not apply to expected transfers) lastIndex is a zero-based index to the last transfer to retrieve (optional, does not apply to expected transfers) includeCurrencyInfo is true to include some currency fields (optional, does not apply to expected transfers) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transfers (A) is an array of transfer objects with the following fields for each transfer: code (S) is the currency code units (S) is the amount (in QNT) of the transfer issuanceHeight (N) is the blockchain height of the currency issuance for a reservable currency type (N) is the currency type bitmask (refer to Get Currency for details) issuerAccountRS (S) is the Reed-Solomon address of the issuer account transfer (S) is the transfer ID senderRS (S) is the Reed-Solomon address of the sender account sender (S) is the account number of the sender account recipientRS (S) is the Reed-Solomon address of the recipient account decimals (N) is the number of decimal places used by the currency recipient (S) is the account number of the recipient account name (S) is the currency name currency (S) is the currency ID issuerAccount (S) is the issuer account ID height (N) is the blockchain height of the transfer timestamp (N) is the timestamp (in seconds since the genesis block) of the transfer block, does not apply to an expected transfer phased (B) is true if the transaction is phased, false otherwise, applies only to an expected transfer issuerAccountRS (S) is the Reed-Solomon address of the issuer account issuerAccount (S) is the issuer account ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Transfers example.","title":"Get Currency Transfers"},{"location":"api/#get-expected-currency-transfers","text":"Refer to Get Currency Transfers .","title":"Get Expected Currency Transfers"},{"location":"api/#get-exchanges","text":"Get currency exchanges given a currency and/or an account in reverse chronological order. Request: requestType is getExchanges currency is a currency ID (optional) account is an account ID (optional if currency provided) firstIndex is a zero-based index to the first currency exchange to retrieve (optional) lastIndex is a zero-based index to the last currency exchange to retrieve (optional) timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) includeCurrencyInfo is true to include several currency-related fields (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects with the following fields for each exchange: seller (S) is the seller account number code (S) is the currency code sellerRS (S) is the Reed-Solomon address of the seller account units (S) is the amount of currency exchanged (in QNT) issuanceHeight (N) is the blockchain height of currency issuance for a reservable currency type (N) is the currency type bitmask (refer to Get Currency for details) rateNQT (S) is the currency exchange rate (in NQT per QNT) buyer (S) is the account number of the buyer offer (S) is the offer ID buyerRS (S) is the Reed-Solomon address of the buyer account decimals (N) is the number of decimal places used by the currency name (S) is the currency name currency (S) is the currency ID block (S) is the block ID of the block containing the exchange transaction transaction (S) is the transaction ID of the exchange timestamp (N) is the timestamp (in seconds since the genesis block) of the exchange height is the blockchain height of the block containing the exchange transaction issuerAccountRS (S) is the Reed-Solomon address of the issuer account issuerAccount (S) is the issuer account ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Exchanges example.","title":"Get Exchanges"},{"location":"api/#get-exchanges-by-exchange-request","text":"Get currency exchanges given an exchange request transaction ID in reverse chronological order. Request: requestType is getExchangesByExchangeRequest transaction is the transaction ID of the exchange request includeCurrencyInfo is true to include several currency-related fields (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects (refer to Get Exchanges for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Exchanges By Exchange Request example.","title":"Get Exchanges By Exchange Request"},{"location":"api/#get-exchanges-by-offer","text":"Get currency exchanges given a currency offer ID in reverse chronological order. Request: requestType is getExchangesByOffer offer (S) is a currency offer ID includeCurrencyInfo is true to include several currency-related fields (optional) firstIndex is a zero-based index to the first currency exchange to retrieve (optional) lastIndex is a zero-based index to the last currency exchange to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects (refer to Get Exchanges for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Exchanges By Offer example.","title":"Get Exchanges By Offer"},{"location":"api/#get-last-exchanges","text":"Get the last exchange of each of multiple currencies. Request: requestType is getLastExchanges currencies is one of multiple currency IDs currencies is one of multiple currency IDs \u22ee requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects (refer to Get Exchanges without name , decimals , code , issuanceHeight , type , issuerAccountRS and issuerAccount for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Last Exchanges example.","title":"Get Last Exchanges"},{"location":"api/#get-minting-target","text":"Get the current minting target of a mintable currency. Request: requestType is getMintingTarget currency is the mintable currency ID account is the minting account ID units is the amount (in QNT) of currency to mint requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: units cannot be greater than 1/10000 of the maxSupply (refer to Issue Currency ). Increasing units decreases targetBytes . Response: difficulty (S) is the current difficulty, an estimate of the number of hashes needed to meet the target targetBytes (S) is the 32-byte target (little endian), which must equal or exceed the computed hash of the nonce currency (S) is the currency ID counter (N) is the counter associated with the minting account, the value previously submitted to Currency Mint lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: If a nonce is found such that its hash is less than the target, it can be submitted to the blockchain along with counter + 1 using Currency Mint , which results in units NQT being credited to the minting account. difficulty is inversely related to the target, and so increases exponentially as maxSupply is approached because the target is defined as (2exp-1)/ units , where exp decreases linearly from 256- minDifficulty to 256- maxDifficulty . (Refer to Issue Currency for maxSupply , minDifficulty and maxDifficulty .) Example: Refer to Get Minting Target example.","title":"Get Minting Target"},{"location":"api/#get-offer","text":"Get offer details given an offer ID. Request: requestType is getOffer offer is the offer ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: sellOffer and buyOffer (O) are objects with the following fields: offer (S) is the offer ID expirationHeight (N) is the blockchain height of offer expiration accountRS (S) is the Reed-Solomon address of the offering account -limit_ (S) is the cumulative limit of currency buys or sells currency (S) is the currency ID supply (S) is the current currency supply account (S) is the offering account number height (N) is the blockchain height of offer creation rateNQT (S) is the currency exchange rate (in NQT per QNT) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Offer example.","title":"Get Offer"},{"location":"api/#issue-currency","text":"Issue a new currency or re-issue an existing currency with different properties. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is issueCurrency name is the currency name, 3 to 10 characters and longer than the currency code code is the uppercase currency code with the following fee structure: three letters 25000 BLX, four letters 1000 BLX, five letters 40 BLX, re-issue 40 BLX description is the currency description type is the currency type bitmask, from least to most significant bit: exchangeable, controllable, reservable, claimable, mintable, non-shuffleable initialSupply is the initial currency supply (in QNT) (must match maxSupply unless mintable or claimable, must be zero for claimable) reserveSupply is the reserve currency supply (in QNT) (must match maxSupply ) maxSupply is the maximum currency supply (in QNT) issuanceHeight is the blockchain height at which a reservable currency is issued if the reserve minimum is met minReservePerUnitNQT is the minimum currency reserve (in NQT per QNT of reserveSupply ) for issuance of a reservable currency minDifficulty is the minimum difficulty (minimum 1 ) for a mintable currency maxDifficulty is the maximum difficulty (maximum 255 and greater than minDifficulty ) for a mintable currency ruleset is for future use, always set to zero algorithm is an algorithm code for a mintable currency: 2 for SHA256, 3 for SHA3, 5 for Scrypt, 25 for Keccak25 decimals is the number of decimal places used by the currency (optional, default zero) Notes: Reservable requires exchangeable and/or claimable, as does controllable; but mintable requires exchangeable. Claimable requires reservable, non-mintable and zero initialSupply . Response: Refer to Create Transaction Response . The transaction ID is also the currency ID. Example: Refer to Issue Currency example.","title":"Issue Currency"},{"location":"api/#publish-exchange-offer","text":"Publish an exchange offer for an exchangeable currency. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is publishExchangeOffer currency is the currency ID buyRateNQT is the offered buy rate (in NQT per QNT) sellRateNQT is the offered sell rate (in NQT per QNT) totalBuyLimit is the cumulative limit (in QNT) of currency buys totalSellLimit is the cumulative limit (in QNT) of currency sells initialBuySupply is the initial amount (in QNT) of currency offered to buy, cannot exceed totalBuyLimit initialSellSupply is the initial amount (in QNT) of currency offered to sell, cannot exceed totalSellLimit expirationHeight is the blockchain height for expiration of the offer Notes: Each time currency is bought in response to an exchange request to sell currency (refer to Currency Sell ), totalBuyLimit is reduced and the supply of currency offered to sell increases by the amount bought. When totalBuyLimit becomes zero, the buy offer is withdrawn. These same notes apply if buy and sell are interchanged. Only the most recent offer associated with an account is valid, even if an earlier offer by that account has not yet expired or reached its limits. Response: Refer to Create Transaction Response . The transaction ID is also the offer ID. Example: Refer to Publish Exchange Offer example.","title":"Publish Exchange Offer"},{"location":"api/#search-currencies","text":"Get currencies having a code that matches a given query in reverse relevance order. Request: requestType is searchCurrencies query is a full text query on the currency field code in the standard Lucene syntax firstIndex is a zero-based index to the first currency to retrieve (optional) lastIndex is a zero-based index to the last currency to retrieve (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencies (A) is an array of currency objects (refer to Get Currency for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Currencies example.","title":"Search Currencies"},{"location":"api/#transfer-currency","text":"Transfer currency to a given recipient. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is transferCurrency recipient is the account ID of the transfer recipient currency is the currency ID units is the amount (in QNT) of the transfer Response: Refer to Create Transaction Response . Example: Refer to Transfer Currency example.","title":"Transfer Currency"},{"location":"api/#networking-operations","text":"","title":"Networking Operations"},{"location":"api/#add-peer","text":"Add a peer to the list of known peers and attempt to connect to it. Password protected like the Debug Operations . POST only. Request: requestType is addPeer peer is the IP address or domain name of the peer (plus optional port) Response: refer to Get Peer isNewlyAdded is true if the peer was not already known, omitted otherwise Example: Refer to Add Peer example.","title":"Add Peer"},{"location":"api/#blacklist-api-proxy-peer","text":"Blacklist a remote node from the UI, so it won't be used when in roaming and light client modes. POST only. Request: requestType is blacklistAPIProxyPeer peer is the IP address or domain name of the peer (plus optional port) adminPassword is a string with the admin password (optional) Response: done (B) is true if the peer is blacklisted requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Blacklist API Proxy Peer example.","title":"Blacklist API Proxy Peer"},{"location":"api/#blacklist-peer","text":"Blacklist a peer for the default blacklisting period. Password protected like the Debug Operations . POST only. Request: requestType is blacklistPeer peer is the IP address or domain name of the peer (plus optional port) Response: done (B) is true if the peer is blacklisted requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Blacklist Peer example.","title":"Blacklist Peer"},{"location":"api/#get-inbound-peers","text":"Get all peers that have sent a request to this peer in the last 30 minutes. Request: requestType is getInboundPeers includePeerInfo is true to include peer information, otherwise include only the address (optional) Response: peers (A) is an array of peer addresses or peer objects (refer to Get Peer for details) depending on includePeerInfo requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Inbound Peers example.","title":"Get Inbound Peers"},{"location":"api/#get-my-info","text":"Get hostname and address of the requesting node. Request: requestType is getMyInfo Response: host (S) is the node hostname address (S) is the node address requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get My Info example.","title":"Get My Info"},{"location":"api/#get-peer","text":"Get information about a given peer. Request: requestType is getPeer peer is the IP address or domain name of the peer (plus optional port) Response: hallmark (S) is the hex string of the peer's hallmark, if it is defined downloadedVolume (N) is the number of bytes downloaded by the peer address (S) the IP address or DNS name of the peer weight (N) is the peer's weight value uploadedVolume (N) is the number of bytes uploaded by the peer version (S) is the version of the software running on the peer platform (S) is a string representing the peer's platform lastUpdated (N) is the timestamp (in seconds since the genesis block) of the last peer status update blacklisted (B) is true if the peer is blacklisted services (A) is an array of strings with the services the node provides blacklistingCause (S) is the cause of blacklisting (if blacklisted is true ) announcedAddress (S) is the name that the peer announced to the network (could be a DNS name, IP address, or any other string) application (S) is the name of the software application, typically NRS state (N) defines the state of the peer: 0 for NON-cONNECTED, 1 for CONNECTED, or 2 for DISCONNECTED shareAddress (B) is true if the address is allowed to be shared with other peers inbound (B) is true if the peer has made a request to this node inboundWebSocket (B) is true if an inbound websocket has been established from this node outboundWebSocket (B) is true if an outbound websocket has been established to this node lastConnectAttempt (B) is the timestamp (in seconds since the genesis block) of the last connection attempt to the peer requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Peer example.","title":"Get Peer"},{"location":"api/#get-peers","text":"Get a list of peer IP addresses. Request: requestType is getPeers active is true for active (not NON-cONNECTED) peers only (optional, if true overrides state ) state is the state of the peers, one of NON-cONNECTED , -cONNECTED_, or -dISCONNECTED_ (optional) includePeerInfo is true to include peer detail as in Get Peer service to filter on a specific service Note: If neither active nor state is specified, all known peers are retrieved. Response: peers (A) is an array of peer addresses requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Peers example.","title":"Get Peers"},{"location":"api/#set-api-proxy-peer","text":"Set the remote node to use when in roaming and light client modes. POST only. Request: requestType is setAPIProxyPeer peer is the IP address or domain name of the peer (plus optional port) adminPassword is a string with the admin password (optional) Response: downloadedVolume (N) is the number of bytes downloaded by the peer address (S) the IP address or DNS name of the peer weight (N) is the peer's weight value uploadedVolume (N) is the number of bytes uploaded by the peer version (S) is the version of the software running on the peer platform (S) is a string representing the peer's platform blockchainState (S) is a string describing the state of the blockchain in the peer lastUpdated (N) is the timestamp (in seconds since the genesis block) of the last peer status update blacklisted (B) is true if the peer is blacklisted services (A) is an array of strings with the services the node provides apiPort (N) is the API access port of the peer apiSSLPort (N) is the SSL API access port of the peer blacklistingCause (S) is the cause of blacklisting (if blacklisted is true ) announcedAddress (S) is the name that the peer announced to the network (could be a DNS name, IP address, or any other string) application (S) is the name of the software application, typically NRS state (N) defines the state of the peer: 0 for NON-CONNECTED, 1 for CONNECTED, or 2 for DISCONNECTED shareAddress (B) is true if the address is allowed to be shared with other peers inbound (B) is true if the peer has made a request to this node inboundWebSocket (B) is true if an inbound websocket has been established from this node outboundWebSocket (B) is true if an outbound websocket has been established to this node lastConnectAttempt (B) is the timestamp (in seconds since the genesis block) of the last connection attempt to the peer requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Set API Proxy Peer example.","title":"Set API Proxy Peer"},{"location":"api/#phasing-operations","text":"","title":"Phasing Operations"},{"location":"api/#approve-transaction","text":"Approve (vote for) a phased transaction. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is approveTransaction transactionFullHash is the full hash of the transaction to be approved (may be used up to 10 times per API request) revealedSecret is the secret phrase (required only for phasingVotingModel 5 , refer to Create Phasing Poll ) revealedSecretIsText is a way of specifying whether revealedSecret is text or binary. Note: This transaction will be accepted in the blockchain only if all phased transactions it is voting for are already in it. Response: Refer to Create Transaction Response . Example: Refer to Approve Transaction example.","title":"Approve Transaction"},{"location":"api/#create-phasing-poll","text":"Create a phased transaction with conditional deferred execution based on the result of a vote, on a list of linked transactions or on the revelation of a secret; or simply with unconditional deferred execution. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is any type from the Create Transaction list which is phasing-safe, indicated with italics such as -send Money_ phased is true to create a phased transaction (optional but required for all of the following parameters, which are all optional for unphased transactions) phasingFinishHeight is the block height at which the poll will finish; the transaction will be executed at this block height only if all conditions (if any) have been met, otherwise the transaction will never be executed phasingVotingModel is an integer code for the method of approval: -1 for None 0 for Vote By Account 1 for Vote By Account Balance 2 for Vote By Asset Balance 3 for Vote By Currency Balance 4 for -by Linked Transactions_ 5 for -by Secret_ phasingQuorum is the number of \"votes\" needed for transaction approval (required if phasingVotingModel >= 0 , default 0 ): 0 for voting model -1 the number of accounts for model 0 total NQT for model 1 total QNT for models 2 and 3 the number of transactions for model 4 1 for model 5 phasingMinBalance is the minimum balance (in NQT or QNT) required for voting (optional, default 0 ) phasingMinBalanceModel is (required if phasingMinBalance > 0 , must match phasingVotingModel when phasingVotingModel = 1 , 2 or 3 ): 1 for BLX balance 2 for an asset balance 3 for a currency balance phasingHolding is the asset or currency ID (required if phasingMinBalanceModel = 2 or 3 ) phasingWhitelisted is the account ID of an account allowed to vote for the transaction; once used, only whitelisted accounts are allowed to vote (optional, may be used up to ten times per API request) phasingLinkedFullHash is the full hash of a transaction that must be in the blockchain at the phasingFinishHeight ; transactions already in the blockchain before the acceptance of the phased transaction can also be linked, as long as they are not more than 60 days old, or themselves phased transactions (required only for voting model 4 , may be used up to ten times per API request) phasingHashedSecret is the hash of a secret phrase (up to 100 bytes long) required for approval (required only for voting model 5 ) phasingHashedSecretAlgorithm is the hash function used: 2 for SHA256, 6 for RIPEMD160 and 62 for SHA256 followed by RIPEMD160, according to Get Constants (required for a phasingHashedSecret ) Note: When a balance affects the poll result, the result depends only on the balance (including pending outgoing phased transfers) computed just prior to the finish height. Response: Refer to Create Transaction Response . Example: Refer to Create Phasing Poll example.","title":"Create Phasing Poll"},{"location":"api/#get-account-phased-transaction-count","text":"Get the number of pending phased transactions associated with an account given the account ID. Request: requestType is getAccountPhasedTransactionCount account is the account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfPhasedTransactions (N) is the number of pending phased transactions lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Phased Transaction Count example.","title":"Get Account Phased Transaction Count"},{"location":"api/#get-account-phased-transactions","text":"Get pending phased transactions associated with an account given the account ID in reverse chronological creation order. Request: requestType is getAccountPhasedTransactions account is the account ID firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for details. Example: Refer to Get Account Phased Transactions example.","title":"Get Account Phased Transactions"},{"location":"api/#get-asset-phased-transactions","text":"Get pending phased transactions based on an asset in reverse chronological creation order. These transactions can be considered transaction approval requests. Request: requestType is getAssetPhasedTransactions asset is the asset ID account is an account ID of the account that created the phased transactions (optional) withoutWhitelist is true to omit phased transactions that include a whitelist (optional) firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for details. Example: Refer to Get Asset Phased Transactions example.","title":"Get Asset Phased Transactions"},{"location":"api/#get-currency-phased-transactions","text":"Get pending phased transactions based on a currency in reverse chronological creation order. These transactions can be considered transaction approval requests. Request: requestType is getCurrencyPhasedTransactions currency is the currency ID account is an account ID of the account that created the phased transactions (optional) withoutWhitelist is true to omit phased transactions that include a whitelist (optional) firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for details. Example: Refer to Get Currency Phased Transactions example.","title":"Get Currency Phased Transactions"},{"location":"api/#get-linked-phased-transactions","text":"Gets the phased transactions with by-transaction voting model for a given linkedFullHash, regardless of their phasing status (pending, approved or rejected). Since the corresponding table is trimmed after finish height however, the result will not include those transactions that finished before the last trimming height. Request: requestType is getLinkedPhasedTransactions -linkedFullHash_ is the full hash of the transaction transaction requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of transactions (refer to Get Transaction for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Linked Phased Transactions example.","title":"Get Linked Phased Transactions"},{"location":"api/#get-phasing-poll","text":"Get the details of a phasing poll. Request: requestType is getPhasingPoll transaction is the transaction ID of the phasing poll countVotes is true to compute the poll result while the votes are still available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transaction (S) is the transaction ID of the phasing poll account (S) is the number of the account that created the phasing poll accountRS (S) is the Reed-Solomon address of the account that created the phasing poll finishHeight (N) is the block height at which the poll finished or will finish votingModel (N) is the voting model (refer to Create Transaction Request ) quorum (S) is the minimum number of votes needed to approve the poll transactionFullHash (S) is the full hash of the phasing poll transaction finished (B) is true if the poll is finished, false otherwise (omitted if finished is false ) result (S) is the sum of the result of each account that approved (voted for) the transaction; an account's result is 1 if the voting model is 0 , 4 or 5 ; it is the NQT, asset QNT or currency QNT balance of the account if the voting model is 1 , 2 or 3 respectively; however, the result is 0 if minBalance is not met approved (B) is true if the poll was approved, false otherwise minBalance (S) is the required minimum balance of voting accounts to be eligible to vote minBalanceModel (N) is the minimum balance model (refer to Create Transaction Request ) hashedSecret (S) is the hash of a secret that must be included in each approval (vote) transaction for the approval to be accepted (refer to Create Transaction Request ) -linkedFullHashes_ (A) is an array of full hashes of linked transactions (omitted if votingModel != 4 ) whitelist (A) is an array of whitelist objects containing the following two fields (omitted if votingModel != 5 ): whitelisted (S) is the number of the whitelisted account whitelistedRS (S) is the Reed-Solomon address of the whitelisted account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Phasing Poll example.","title":"Get Phasing Poll"},{"location":"api/#get-phasing-poll-vote","text":"Get a cast phasing poll vote given a phased transaction ID and an account ID of a voter, if it is still available. Request: requestType is getPhasingPollVote transaction is the phased transaction ID account is the account ID of a voter in the poll requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: voter (S) is the account ID of the voter in the poll voterRS (S) is the Reed-Solomon address of the voter transaction (S) is the phased transaction ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Phasing Poll Vote example.","title":"Get Phasing Poll Vote"},{"location":"api/#get-phasing-poll-votes","text":"Get all cast phasing poll votes in a phasing poll given a phased transaction ID, if they are still available. Request: requestType is getPhasingPollVotes transaction is the phased transaction ID firstIndex is a zero-based index to the first vote to retrieve (optional) lastIndex is a zero-based index to the last vote to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Phasing Poll Vote Example: Refer to Get Phasing Poll Votes example.","title":"Get Phasing Poll Votes"},{"location":"api/#get-phasing-polls","text":"Get phasing poll details given multiple phased transaction IDs. Request: requestType is getPhasingPolls transaction is one of the multiple phased transaction IDs transaction is one of the multiple phased transaction IDs \u22ee countVotes is true to compute the poll result while the votes are still available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Phasing Poll . Example: Refer to Get Phasing Polls example.","title":"Get Phasing Polls"},{"location":"api/#get-voter-phased-transactions","text":"Get pending phased transactions which include a whitelist in reverse chronological creation order. These transactions can be considered transaction approval requests. Request: requestType is getVoterPhasedTransactions account is a whitelisted account ID included in the phased transactions firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for details. Example: Refer to Get Voter Phased Transactions example.","title":"Get Voter Phased Transactions"},{"location":"api/#server-information-operations","text":"","title":"Server Information Operations"},{"location":"api/#event-register","text":"Create, modify or remove an event listener which can report server events via Event Wait . POST only. Request: requestType is eventRegister event is one of multiple server events from the following list of event names: (optional, default is all possible events) Block.BLOCK-GENERATED Block.BLOCK-POPPED Block.BLOCK-PUSHED Peer.ADD-INBOUND Peer.ADDED-ACTIVE-PEER Peer.BLACKLIST Peer.CHANGED-ACTIVE-PEER Peer.DEACTIVATE Peer.NEW-PEER Peer.REMOVE Peer.REMOVE-INBOUND Peer.UNBLACKLIST Transaction.ADDED-CONFIRMED-TRANSACTIONS Transaction.ADDED-UNCONFIRMED-TRANSACTIONS Transaction.REJECT-PHASED-TRANSACTION Transaction.RELEASE-PHASED-TRANSACTION Transaction.REMOVE-UNCONFIRMED-TRANSACTIONS event is one of multiple server events (optional) add is true to add events to an existing listener (optional, omit if remove is true ) remove is true to remove events from an existing listener (optional, omit if add is true ) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: To create a new event listener, omit both add and remove . To remove an existing event listener, set remove to true and omit event ; all registered events will be removed, any outstanding Event Wait will be completed and the listener will be deactivated. Note: An event listener is automatically deactivated whenever all registered events are removed or if Event Wait is not called frequently enough, according to the nxt.apiEventTimeout property. The timeout is not precise; the removal process runs every nxt.apiEventTimeout / 2 seconds, so that many extra seconds may elapse before removal; the first Event Wait call should be made immediately after registration to avoid deactivation. Note: Each API user (with a unique address) can create only one event listener. When a new one is created, it will replace an existing one. The maximum number of unique users is controlled by the nxt.maxEventUsers property. Response: registered is true if the operation completed successfully lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Event Register example.","title":"Event Register"},{"location":"api/#event-wait","text":"Wait for events registered with Event Register . POST only. Request: requestType is eventWait timeout is the amount of time (in seconds) to wait for an event before the call returns (optional, default and maximum is the nxt.apiEventTimeout property) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Notes: The call returns immediately if one or more events have occurred since the last call; multiple events are all returned together. If a new call is made before the last one returns, the timeout timer resets to the new value. Event registration expires if wait calls are not made frequently enough, according to the nxt.apiEventTimeout property. Response: events (A) is an array of event objects each of which has the following fields: name (S) is the name of the event (refer to Event Register for the list of event names) ids (A) is an array of identifiers, depending on the type of event: block string identifier (S) for a block event peer network address (S) for a peer event transaction string identifier (S) for a transaction event lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Event Wait example.","title":"Event Wait"},{"location":"api/#get-blockchain-status","text":"Get the blockchain status. Request: requestType is getBlockchainStatus Response: currentMinRollbackHeight (N) is the current minimum rollback height numberOfBlocks (N) is the number of blocks in the blockchain (height + 1) isTestnet (B) is true if the node is connected to testnet, false otherwise includeExpiredPrunable (B) is the value of the nxt.includeExpiredPrunable property requestProcessingTime (N) is the API request processing time (in millisec) version (S) is the application version maxRollback (N) is the value of the nxt.maxRollback property lastBlock (S) is the last block ID on the blockchain application (S) is application name, typically NRS isScanning (B) is true if the blockchain is being scanned by the application, false otherwise isDownloading (B) is true if a download is in progress, false otherwise; true when a batch of more than 10 blocks at once has been downloaded from a peer, reset to false when an attempt to download more blocks from a peer does not result in any new blocks cumulativeDifficulty (S) is the cumulative difficulty lastBlockchainFeederHeight (N) is the height of the last blockchain of greatest cumulative difficulty obtained from a peer maxPrunableLifetime (N) is the maximum prunable lifetime (in seconds) time (N) is the current timestamp (in seconds since the genesis block) lastBlockchainFeeder (S) is the address or announced address of the peer providing the last blockchain of greatest cumulative difficulty blockchainState (S) Current state of this node's blockchain (UP-TO-DATE or DOWNLOADING) Example: Refer to Get Blockchain Status example.","title":"Get Blockchain Status"},{"location":"api/#get-constants","text":"Get all defined constants. Request: requestType is getConstants Response: maxBlockPayloadLength (N) is the maximum block payload length (in bytes) maxArbitraryMessageLength (N) is the maximum length (in bytes) of an arbitrary message maxPrunableMessageLength (N) is the maximum length (in bytes) of a prunable message maxTaggedDataDataLength (N) is the maximum length (in bytes) of tagged data maxPhasingDuration (N) is the maximum allowed phasing duration in block height epochBeginning (N) is the time in milliseconds when genesis block was created genesisAccountId (S) is the genesis account number genesisBlockId (S) is the genesis block ID transactionTypes (A) is an array of defined transaction types and subtypes (refer to the example below) transactionSubTypes (A) is an array of defined transaction subtypes and subtypes (refer to the example below) peerStates (A) is an array of defined peer states (refer to the example below) currencyTypes (A) is an array of defined currency types (refer to the example below) disabledAPIs (A) is an array of configured disabled apis (refer to the example below) apiTags (A) is an array of defined api tags (refer to the example below) disabledAPITags (A) is an array of configured disabled api tags (refer to the example below) votingModels (A) is an array of defined voting models (refer to the example below) holdingTypes (A) is an array of defined holding types (refer to the example below) minBalanceModels (A) is an array of defined minimum balance models (refer to the example below) shufflingStages (A) is an array of defined shuffling stages (refer to the example below) shufflingParticipantStates (A) is an array of defined shuffling participant states (refer to the example below) hashAlgorithms (A) is an array of defined hash algorithms (refer to the example below) mintingHashAlgorithms (A) is an array of defined minting hash algorithms (refer to the example below) phasingHashAlgorithms (A) is an array of defined phasing hash algorithms (refer to the example below) requestTypes (A) is an array of decined request types (refer to the example below)","title":"Get Constants"},{"location":"api/#get-plugins","text":"Get a list of all installed plugins on the server. Request: requestType is getPlugins Response: plugins (A) is an array of plugin names (S) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Plugins example.","title":"Get Plugins"},{"location":"api/#get-state","text":"Get the state of the server node and network. Request: requestType is getState includeCounts is true if the fields beginning with numberOf... are to be included (optional); password protected like the Debug Operations if true . Response: numberOfPeers (N) is the number of known peers on the network numberOfGoods (N) is the number of DGS goods in the blockchain numberOfPolls (N) is the number of polls in the blockchain numberOfUnlockedAccounts (N) is the number of unlocked accounts on this node numberOfTransfers (N) is the number of AE transfers in the blockchain includeExpiredPrunable (B) is the value of the nxt.includeExpiredPrunable property numberOfOrders (N) is the number of AE orders in the blockchain numberOfTransactions (N) is the number of transactions in the blockchain maxMemory (N) is the maximum amount of memory the node may use (in Bytes) maxRollback (N) is the value of the nxt.maxRollback property numberOfOffers (N) is the number of buy currency offers in the blockchain isDownloading (B) is true if a download is in progress, false otherwise; true when a batch of more than 10 blocks at once has been downloaded from a peer, reset to false when an attempt to download more blocks from a peer does not result in any new blocks isScanning (B) is true if this node is scanning the blockchain, false otherwise cumulativeDifficulty (S) is the current cumulative forging difficulty numberOfCurrencies (N) is the number of currencies in the blockchain numberOfAssets (N) is the number of AE assets in the blockchain numberOfPrunableMessages (N) is the number of prunable messages in the blockchain freeMemory (N) is the amount of free memory on this node (in Bytes) peerPort (N) is the port used for connecting to peers numberOfVotes (N) is the number of votes in the blockchain availableProcessors (N) is the number of processors on this node numberOfTaggedData (N) is the number of tagged data in the blockchain numberOfActiveAccountLeases (N) is the number of active account leases in the blockchain numberOfAccountLeases (N) is the total number of account leases including scheduled leases (first scheduled lease only) in the blockchain numberOfAccounts (N) is the number of accounts in the blockchain numberOfDataTags (N) is the number of data tags in the blockchain needsAdminPassword (B) is true if the nxt.disableAdminPassword property is false currentMinRollbackHeight (N) is the current minimum rollback height numberOfBlocks (N) is the number of blocks (height + 1) in the blockchain isTestnet (B) is true if the node is connected to testnet, false otherwise numberOfCurrencyTransfers (N) is the number of currency transfers in the blockchain requestProcessingTime (N) is the API request processing time (in millisec) numberOfPhasedTransactions (N) is the number of phased transactions in the blockchain version (S) is the software version on this node numberOfBidOrders (N) is the number of AE bid orders in the blockchain lastBlock (S) is the last block address totalMemory (N) is the amount of memory this node is using (in Bytes) application (S) is the name of the software running on this node (typically NRS ) numberOfAliases (N) is the number of aliases in the blockchain numberOfActivePeers (N) is the number of active peers on the network lastBlockchainFeederHeight (N) is the height of the last blockchain feeder maxPrunableLifetime (N) is the maximum prunable lifetime (in seconds) numberOfExchanges (N) is the number of currency exchanges in the blockchain numberOfTrades (N) is the number of AE trades in the blockchain numberOfPurchases (N) is the number of DGS purchases in the blockchain numberOfTags (N) is the number of DGS tags in the blockchain time (N) is the current node time (in seconds since the genesis block) numberOfAskOrders (N) is the number of AE ask orders in the blockchain lastBlockchainFeeder (S) is the announced name of the feeder of the last blockchain isOffline (B) is true if this node is connected to other peers, false otherwise Note: AE is Asset Exchange, DGS is Digital Goods Store Example: Refer to Get State example.","title":"Get State"},{"location":"api/#get-time","text":"Get the current time. Request: requestType is getTime Response: time (N) is the current time (in seconds since the genesis block). requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Time example.","title":"Get Time"},{"location":"api/#shuffling-operations","text":"Coin shuffling can be used to perform mixing of BLX, MS currencies (unless created as non-shuffleable), or AE assets. Any account can create a new shuffling, specifying the holding to be shuffled, the shuffle amount, number of participants required, and registration deadline.","title":"Shuffling Operations"},{"location":"api/#get-account-shufflings","text":"Retrieves info about shufflings for a specific account. Request: requestType is getAccountShufflings account is the account ID includeFinished is true to include completed shufflings (optional) includeHoldingInfo is true to include holding info (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) shufflings (A) is an array containing the shuffling object (refer to Get Shuffling ) Example: Refer to Get Account Shufflings example.","title":"Get Account Shufflings"},{"location":"api/#get-all-shufflings","text":"Retrieves info about all shufflings. Request: requestType is getAllShufflings includeFinished is true to include completed shufflings (optional) includeHoldingInfo is true to include holding info (optional) finishedOnly is true to omit not yet finished shufflings (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) shufflings (A) is an array containing the shuffling object (refer to Get Shuffling ) Example: Refer to Get All Shufflings example.","title":"Get All Shufflings"},{"location":"api/#get-assigned-shufflings","text":"Retrieves info about a shufflings that are currently assigned to a specific account. Request: requestType is getAssignedShufflings account is the account ID includeHoldingInfo is true to include holding info (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) shufflings (A) is an array containing the shuffling object (refer to Get Shuffling ) Example: Refer to Get Assigned Shufflings example.","title":"Get Assigned Shufflings"},{"location":"api/#get-holding-shufflings","text":"Retrieves info about shufflings for a specific holding and/or stage. Request: requestType is getHoldingShufflings holding is the holding ID (optional) stage is the stage of the shuffling (See Get Constants for type definitions) (optional) includeFinished is true to include completed shufflings (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) shufflings (A) is an array containing the shuffling object (refer to Get Shuffling ) Example: Refer to Get Holding Shufflings example.","title":"Get Holding Shufflings"},{"location":"api/#get-shufflers","text":"Retrieves info about active shufflers on the current node. Request: requestType is getShufflers account is account ID (optional) shufflingFullHash is shuffling full hash (optional) secretPhrase is secret phrase of the account doing the shuffling (required if adminPassword is not provided) adminPassword is the admin password (required if secretPhrase is not provided) includeParticipantState to include each shuffling participant's state (optional) Response: shufflers (A) is an array containing all currently running shuffling processes on the node. account (S) is account ID accountRS (S) is the account Reed Solomon address recipient (S) is the recipient account ID to where the funds will be sent once the shuffling is completed recipientRS (S) is the recipient account Reed Solomon address to where the funds will be sent once the shuffling is completed shuffling (S) is the shuffling ID shufflingFullHash (S) is the shuffling full hash participantState (N) is the state for the participant (For more info, see shufflingParticipantStates array in Get Constants ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Shufflers example.","title":"Get Shufflers"},{"location":"api/#get-shuffling","text":"Retrieves info about a shuffling. Request: requestType is getShuffling shuffling is the shuffling ID includeHoldingInfo is true to include holding info (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: blocksRemaining (N) number of blocks remaining until current stage is finished. amount (S) the amount of holdingType to be shuffled shufflingStateHash (S) state hash of the shuffling shufflingFullHash (S) the full hash of the shuffling issuer (S) is the issuer account ID issuerRS (S) is the Reed-Solomon address of the issuer account assignee (S) is the current assignee account ID assigneeRS (S) is the Reed-Solomon address of the current assignee account shuffling (S) is the shuffling ID holding (S) is the asset or currency ID holdingType (N) is the holding type (See Get Constants for type definitions) stage (N) is the current stage of the shuffling (See Get Constants for type definitions) participantCount (N) is the number of participants required to start the shuffling registrantCount (N) is the number of registrered participants recipientPublicKeys (A) is an array of recipient public keys holdingInfo (A) is an array containing the asset or currency info (if includeHoldingInfo is true and holdingType is not Blue0x) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Shuffling example.","title":"Get Shuffling"},{"location":"api/#get-shuffling-participants","text":"Retrieves info about participants in a shuffling. Request: requestType is getShufflingParticipants shuffling is the shuffling ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: participants (A) shuffling (S) is the shuffling ID account (S) is the account ID accountRS (S) is the account Reed Solomong address state (N) is the state for the participant (For more info, see shufflingParticipantStates array in Get Constants ) nextAccount (S) is the account ID of the next account in turn nextAccountRS (S) is the account Reed Solomon address of the next account in turn requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Shuffling Participants example.","title":"Get Shuffling Participants"},{"location":"api/#shuffling-cancel","text":"Cancels a shuffling Request: Refer to Create Transaction Request for common parameters. requestType is shufflingCancel shuffling is the shuffling ID shufflingStateHash is the state hash of the shuffling cancellingAccount is the account ID (optional) Response Refer to Create Transaction Response .","title":"Shuffling Cancel"},{"location":"api/#shuffling-create","text":"Creates a new shuffling. Request: Refer to Create Transaction Request for common parameters. requestType is shufflingCreate holding is the holding id (optional if holdingType is 0) holdingType is the holding type (See Get Constants for type definitions) (optional) amount is the amount of the holding to shuffle participantCount is the number of participants registrationPeriod is the number of blocks the participants have to register until the shuffle is cancelled Response Refer to Create Transaction Response . Example: Refer to Shuffling Create example.","title":"Shuffling Create"},{"location":"api/#shuffling-process","text":"Manually process the shuffling for a specific participant. Note that the shuffling must be in processing stage and the secretPhrase must match the current shuffling assignee. Request: Refer to Create Transaction Request for common parameters. requestType is shufflingProcess shuffling is the shuffling ID recipientSecretPhrase is the secret phrase of the recipient account (optional if recipientPublicKey is provided) recipientPublicKey is the public key of the recipient account (optional if recipientSecretPhrase is provided) Response Refer to Create Transaction Response . Example: Refer to Shuffling Process example.","title":"Shuffling Process"},{"location":"api/#shuffling-register","text":"Registers a new participant to an existing shuffling. The shuffling must be in stage registration. Request: Refer to Create Transaction Request for common parameters. requestType is shufflingRegister shufflingFullHash is the full hash of the shuffling to register Response Refer to Create Transaction Response . Example: Refer to Shuffling Register example.","title":"Shuffling Register"},{"location":"api/#shuffling-verify","text":"Sends a verification that an account's recipient public key is found within a shuffling. Request: Refer to Create Transaction Request for common parameters. requestType is shufflingVerify shuffling is the shuffling ID shufflingStateHash is the current state hash of the shuffle Response Refer to Create Transaction Response . Example: Refer to Shuffling Verify example.","title":"Shuffling Verify"},{"location":"api/#start-shuffler","text":"Starts a automated Shuffler. Once started, the Shuffler monitors the blockchain state for transactions relevant to the specified shuffle, and automatically submits the required transactions on behalf of the user, performing shuffle processing, verification, or cancellation as needed. Request: requestType is startShuffler secretPhrase is the secret phrase of the account entering the shuffling shufflingFullHash the full hash of the shuffling recipientSecretPhrase the secret phrase of the recipient account (optional if recipientPublicKey is present) recipientPublicKey the public key of the recipient account (optional if recipientSecretPhrase is present) Response shuffling (S) is the shuffling ID shufflingFullHash (S) is the full hash of the shuffling account (S) is the account ID accountRS (S) is the account Reed Solomong address recipient (S) is the account ID of the recipient account recipientRS (S) is the account Reed Solomon address of the recipient account requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Start Shuffler example.","title":"Start Shuffler"},{"location":"api/#stop-shuffler","text":"Stops a previously started automated Shuffler. Request: requestType is stopShuffler account is the account ID (optional if shufflingFullHash or secretPhrase or adminPassword is provided) shufflingFullHash the full hash of the shuffling (optional if account or adminPassword is provided) secretPhrase is the secret phrase of the account entering the shuffling (optional if adminPassword is provided) adminPassword is the admin password (optional if secretPhrase is provided) Response stoppedShuffler (B) means the specified shuffler was stopped stoppedAllShufflers (B) means all shufflers on the node was stopped (only if adminPassword is provided in request) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Stop Shuffler example.","title":"Stop Shuffler"},{"location":"api/#tagged-data-operations","text":"Tagged data are similar to prunable plain messages without a recipient, but with additional searchable metadata fields.","title":"Tagged Data Operations"},{"location":"api/#download-tagged-data","text":"Download tagged data as a file if it is still available. Request: requestType is downloadTaggedData transaction is the transaction ID of the tagged data retrieve is true to retrieve pruned data from other nodes if not available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: The downloaded data file named nxt , unless there is an error in the request. Example: Refer to Download Tagged Data example.","title":"Download Tagged Data"},{"location":"api/#extend-tagged-data","text":"Extend the expiration time of already uploaded tagged data. POST only. Request: requestType is extendTaggedData transaction is the transaction ID of the tagged data data is the tagged data (optional) file is the pathname of a data file to upload (optional if data provided) filename name description tags type channel isText Note: The data and metadata ( filename , name , description , tags , type , channel and isText ) parameters can be omitted if the tagged data has not yet expired; otherwise, the tagged data can be restored to the blockchain only if these fields have exactly the same values as when the data was uploaded (refer to Upload Tagged Data ). Note: Anyone can submit an extension, not only the original uploader. Each extend transaction increases the expiration deadline by two weeks (24 hours on Testnet). Extending an existing tagged data from another account does not change the original submitter account ID by which it is indexed and searchable. Response: Refer to Create Transaction Response . Example: Refer to Extend Tagged Data example.","title":"Extend Tagged Data"},{"location":"api/#get-account-tagged-data","text":"Get all available tagged data uploaded by a given account in reverse chronological order. Request: requestType is getAccountTaggedData account is the account ID includeData is true to include data (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (A) is an array of tagged data objects (refer to Get Tagged Data with hash omitted for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Tagged Data example.","title":"Get Account Tagged Data"},{"location":"api/#get-all-tagged-data","text":"Get all available tagged data in reverse chronological order. Request: requestType is getAllTaggedData includeData is true to include data (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (A) is an array of tagged data objects (refer to Get Tagged Data with hash omitted for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Tagged Data example.","title":"Get All Tagged Data"},{"location":"api/#get-channel-tagged-data","text":"Get available tagged data by channel, optionally filtered by account, in reverse chronological order. Request: requestType is getChannelTaggedData channel is the channel string account is an account ID (optional) includeData is true to include data (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (A) is an array of tagged data objects (refer to Get Tagged Data with hash omitted for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Channel Tagged Data example.","title":"Get Channel Tagged Data"},{"location":"api/#get-data-tag-count","text":"Get the total number of distinct available data tags. Request: requestType is getDataTagCount requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfDataTags (N) is the total number of distinct data tags lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Data Tag Count example.","title":"Get Data Tag Count"},{"location":"api/#get-data-tags","text":"Get the distinct tags of all available tagged data, with the number of uses of each tag, in order of number of uses, then alphabetical order. Request: requestType is getDataTags firstIndex is a zero-based index to the first tag to retrieve (optional) lastIndex is a zero-based index to the last tag to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: tags (A) is an array of tag objects including the fields: tag (S) is a tag word count (N) is the number of uses of tag among all tagged data lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Data Tags example.","title":"Get Data Tags"},{"location":"api/#get-data-tags-like","text":"Prefix search of available data tags, return in alphabetical order. Request: requestType is getDataTagsLike tagPrefix is the prefix to search for (2 character minimum) among all data tags firstIndex is a zero-based index to the first tag to retrieve (optional) lastIndex is a zero-based index to the last tag to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: tags (A) is an array of tag objects including the fields: tag (S) is a tag word count (N) is the number of uses of tag among all tagged data lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Data Tags Like example.","title":"Get Data Tags Like"},{"location":"api/#get-tagged-data","text":"Get available tagged data given a transaction ID. Request: requestType is getTaggedData transaction is the transaction ID includeData is true to include data (optional) retrieve is true to retrieve pruned data from other nodes if not available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (S) is the tagged data hash (S) is the hash of the tagged data filename (S) is the metadata filename field name (S) is the metadata name field description (S) is the metadata description field tags (S) is the metadata tags field parsedTags (A) is an array of tag words (S) parsed from tags type (S) is the metadata type field channel (S) is the metadata channel field isText (B) is the metadata isText field account (S) is the number of the account that originally uploaded the tagged data accountRS (S) is the Reed-Solomon address of the uploading account transaction (S) is the transaction ID transactionTimestamp (N) is the transaction timestamp (in seconds since the genesis block) blockTimestamp (N) is the block timestamp (in seconds since the genesis block) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: Refer to Upload Tagged Data for details about the data and metadata ( filename , name , description , tags , type , channel and isText ) fields. Example: Refer to Get Tagged Data example.","title":"Get Tagged Data"},{"location":"api/#get-tagged-data-extend-transactions","text":"Retrieves all tagged data extend transactions for a given tagged data upload transaction. Request: requestType is getTaggedDataExtendTransactions requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: extendTransactions (A) is an array of transactions requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Tagged Data Extend Transactions example.","title":"Get Tagged Data Extend Transactions"},{"location":"api/#search-tagged-data","text":"Full text search on available tagged data name, description and tags; optionally filtered by tag, channel or uploading account; return in reverse relevance order. Request: requestType is searchTaggedData query is a full text query on the metadata fields name (S), description (S) and tags (S) in the standard Lucene syntax tag is a word in the tags string (optional) channel is a channel string (optional) account is an account ID (optional) includeData is true to include data (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (A) is an array of tagged data objects (refer to Get Tagged Data with hash omitted for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Tagged Data example.","title":"Search Tagged Data"},{"location":"api/#upload-tagged-data","text":"Upload and broadcast new tagged data. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is uploadTaggedData data is the data (optional) file is the pathname of a data file to upload (optional if data provided) filename is a filename to associate with data (optional if file uploaded in which case the uploaded filename is always used) name is the name or title of data (optional if file uploaded in which case the uploaded filename is used, but name takes precedence if provided) description is a description of data (optional) tags is a list of up to 5 words from 3 to 20 characters long and separated by spaces and/or commas, describing the actual content of data ; for example: audio,mp3,classical (optional) type is the mime type of data such as torrent , pdf , doc , image , etc. (optional) channel is a data feed label such as pirate bay torrents , wikileaks , etc. (optional) isText is false if data is a hex string (optional) Note: The maximum length of data plus all associated metadata is 42 kilobytes. The maximum length of description is 1000 bytes. The maximum length of the other metadata ( name , tags , type , channel and filename ) is 100 bytes each. Response: Refer to Create Transaction Response . Example: Refer to Upload Tagged Data example.","title":"Upload Tagged Data"},{"location":"api/#verify-tagged-data","text":"Verify expired tagged data downloaded from another node, against the hash in the blockchain. Request: requestType is verifyTaggedData transaction is the transaction ID of the tagged data data is the tagged data (optional) file is the pathname of a data file to upload (optional if data provided) filename name description tags type channel isText requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: The data and metadata ( filename , name , description , tags , type , channel and isText ) must have exactly the same values as when the data was uploaded (refer to Upload Tagged Data ). Response: verify (B) is true if the hash of the provided data and metadata matches the hash in the blockchain hash (S) is the hash of the tagged data lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) version.TaggedDataUpload (N) is 1 , the version number Note: This call returns an error if there is a hash mismatch. Example: Refer to Verify Tagged Data example.","title":"Verify Tagged Data"},{"location":"api/#token-operations","text":"","title":"Token Operations"},{"location":"api/#decode-file-token","text":"Validate a file token without requiring the transmission of a secret passphrase. POST only. Request: requestType is decodeFileToken file is the path to the file that was signed token is the token of the file , as generated by Generate File Token Response: account (S) is the account number that generated the token accountRS (S) is the Reed-Solomon address of the account timestamp (N) is the time (in seconds since the genesis block) that the token was generated valid (B) is true if token is valid, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) Note: Since token contains the token generator's public key and digital signature, file can be validated as signed by the owner of the public key, and the public key determines the account ID. Example: Refer to Decode File Token example.","title":"Decode File Token"},{"location":"api/#decode-token","text":"Validate a token without requiring the transmission of a secret passphrase. Request: requestType is decodeToken website is the signed text, typically an authorized URL token is the token generated by Generate Token Response: account (S) is the account number that generated the token accountRS (S) is the Reed-Solomon address of the account timestamp (N) is the time (in seconds since the genesis block) that the token was created valid (B) is true if token is valid, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) Note: Since token contains the token generator's public key and digital signature, website can be validated as authorized by the owner of the public key, and the public key determines the account ID. Example: Refer to Decode Token example.","title":"Decode Token"},{"location":"api/#generate-file-token","text":"Generate a file token. POST only. Request: requestType is generateFileToken secretPhrase is the passphrase of the account generating the token file is the path to the file to be signed Response: token (S) is a 160 character string representing the 100-byte token which consists of a 32-byte public key, a 4-byte timestamp, and a 64-byte digital signature account (S) is the account number corresponding to secretPhrase accountRS (S) is the Reed-Solomon address of the account timestamp (N) is the time (in seconds since the genesis block) that the token was generated valid (B) is true if token is valid, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) Note: Since token contains the token generator's public key and digital signature, the file can be validated as digitally signed by the owner of the public key using Decode File Token . Example: Refer to Generate File Token example.","title":"Generate File Token"},{"location":"api/#generate-token","text":"Generate a token. POST only. Request: requestType is generateToken secretPhrase is the passphrase of the account generating the token website is a web site URL for which authorization should be granted, or general text to be digitally signed Note: website is typically a URL (with the leading https:// unnecessary) that an account owner signs with his secretPhrase (private key) to bind the account to the URL, but website can be any text that the owner wishes to sign. Response: token (S) is a 160 character string representing the 100-byte token which consists of a 32-byte public key, a 4-byte timestamp, and a 64-byte signature account (S) is the account number corresponding to secretPhrase accountRS (S) is the Reed-Solomon address of the account timestamp (N) is the time (in seconds since the genesis block) that the token was generated valid (B) is true if token is valid, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) Note: Since token contains the token generator's public key and signature, the website can be validated as authorized by the owner of the public key using Decode Token . Example: Refer to Generate Token example.","title":"Generate Token"},{"location":"api/#transaction-operations","text":"","title":"Transaction Operations"},{"location":"api/#broadcast-transaction","text":"Broadcast a transaction to the network. POST only. Request: requestType is broadcastTransaction transactionBytes is the bytecode of a signed transaction (optional) transactionJSON is the transaction object (optional if transactionBytes provided) prunableAttachmentJSON is the attachment object embedded in transactionJSON containing a prunable message (required if transactionJSON not provided because transactionBytes never includes prunable data) Response: requestProcessingTime (N) is the API request processing time (in millisec) fullHash (S) is the full hash of the signed transaction transaction (S) is the transaction ID Example: Refer to Broadcast Transaction example.","title":"Broadcast Transaction"},{"location":"api/#calculate-full-hash","text":"Calculate the full hash of a transaction. Request: requestType is calculateFullHash unsignedTransactionJSON is the unsigned transaction JSON object (optional) unsignedTransactionBytes are the unsigned bytes of a transaction (optional if unsignedTransactionJSON is provided) signatureHash is a SHA-256 hash of the transaction signature Response: requestProcessingTime (N) is the API request processing time (in millisec) fullHash (S) is the full hash of the signed transaction Example: Refer to Calculate Full Hash example.","title":"Calculate Full Hash"},{"location":"api/#get-expected-transactions","text":"Returns the non-phased unconfirmed transactions expected to be included in the next block (only), plus the phased transactions scheduled to finish in that block (whether approved or not). Request: requestType is getExpectedTransactions account is one account ID (optional) account is one account ID (optional) \u22ee requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: expectedTransactions (A) is an array of expected transactions (refer to Get Transaction for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Expected Transactions example.","title":"Get Expected Transactions"},{"location":"api/#get-referencing-transactions","text":"Gets the transactions referencing a given transaction id. Request: requestType is getReferencingTransactions transaction is one transaction ID firstIndex is a zero-based index to the first block ID to retrieve (optional) lastIndex is a zero-based index to the last block ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of transactions (refer to Get Transaction for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Referencing Transactions example.","title":"Get Referencing Transactions"},{"location":"api/#get-transaction","text":"Get a transaction object given a transaction ID. Request: requestType is getTransaction transaction is the transaction ID (optional) fullHash is the full hash of the transaction (optional if transaction ID is provided) includePhasingResult is true to retrieve execution status of each phased transaction (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: sender (S) is the account ID of the sender senderRS (S) is the Reed-Solomon address of the sender feeNQT (S) is the fee (in NQT) of the transaction amountNQT (S) is the amount (in NQT) of the transaction transactionIndex (N) is a zero-based index giving the order of the transaction in its block timestamp (N) is the time (in seconds since the genesis block) of the transaction referencedTransactionFullHash (S) is the full hash of a transaction referenced by this one, omitted if no previous transaction is referenced confirmations (N) is the number of transaction confirmations subtype (N) is the transaction subtype (refer to Get Constants for a current list of subtypes) block (S) is the ID of the block containing the transaction blockTimestamp (N) is the timestamp (in seconds since the genesis block) of the block height (N) is the height of the block in the blockchain senderPublicKey (S) is the public key of the sending account for the transaction type (N) is the transaction type (refer to Get Constants for a current list of types) deadline (N) is the deadline (in minutes) for the transaction to be confirmed signature (S) is the digital signature of the transaction recipient (S) is the account number of the recipient, if applicable recipientRS (S) is the Reed-Solomon address of the recipient, if applicable fullHash (S) is the full hash of the signed transaction signatureHash (S) is a SHA-256 hash of the transaction signature approved (B) is a boolean indicating if the transaction is approved (only included when includePhasingResult is true and the transaction is phased) result (S) is a string containing the result of the transaction (only included when includePhasingResult is true and the transaction is phased) executionHeight (N) is the height the transaction was executed (only included when includePhasingResult is true and the transaction is phased) transaction (S) is the transaction ID version (N) is the transaction version number phased (B) is true if the transaction is phased, false otherwise ecBlockId (N) is the economic clustering block ID ecBlockHeight (N) is the economic clustering block height attachment (O) is an object containing any additional data needed for the transaction, if applicable lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: The block , blockTimestamp and confirmations fields are omitted for unconfirmed transactions. Double-spending transactions are not retrieved. Example: Refer to Get Transaction example.","title":"Get Transaction"},{"location":"api/#get-transaction-bytes","text":"Get the bytecode of a transaction. Request: requestType is getTransactionBytes transaction is a transaction ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: confirmations (N) is the number of transaction confirmations transactionBytes (S) are the bytes contained in the transaction unsignedTransactionBytes (S) are the unsigned bytes contained in the transaction prunableAttachmentJSON (O) is the prunable attachment JSON object, if applicable, because transactionBytes never includes prunable data lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Transaction Bytes example.","title":"Get Transaction Bytes"},{"location":"api/#parse-transaction","text":"Get a transaction object given a (signed or unsigned) transaction bytecode, or re-parse a transaction object. Verify the signature. Request: requestType is parseTransaction transactionBytes is the signed or unsigned bytecode of the transaction (optional) transactionJSON is the transaction object (optional if transactionBytes is included) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for additional fields. verify (B) is true if the signature is verified, false otherwise Example: Refer to Parse Transaction example.","title":"Parse Transaction"},{"location":"api/#retrieve-pruned-transaction","text":"Force retrieval of the prunable data for a given transaction, even if past the configured nxt.maxPrunableLifetime. Request: requestType is retrievePrunedTransaction transaction is transaction ID Response: Refer to Get Transaction for fields. Example: Refer to Retrieve Pruned Transaction example.","title":"Retrieve Pruned Transaction"},{"location":"api/#send-transaction","text":"It broadcasts a transaction to the network without validating it, without re-broadcasting it and without adding it locally as unconfirmed transaction. Specially intended for roaming or light clients to send transactions to remote peers. POST only. Request: requestType is sendTransaction transactionBytes is the bytecode of a signed transaction (optional) transactionJSON is the transaction object (optional if transactionBytes provided) prunableAttachmentJSON is the attachment object embedded in transactionJSON containing a prunable message (required if transactionJSON not provided because transactionBytes never includes prunable data) adminPassword is a string with the admin password (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) fullHash (S) is the full hash of the signed transaction transaction (S) is the transaction ID Example: Refer to Send Transaction example.","title":"Send Transaction"},{"location":"api/#sign-transaction","text":"Calculates the full hash, signature hash, and transaction ID of an unsigned transaction. Request: requestType is signTransaction unsignedTransactionJSON is the transactionJSON field of the transaction, without a signature subfield unsignedTransactionBytes is the unsignedTransactionBytes field of the transaction (optional, if unsignedTransactionJSON provided) prunableAttachmentJSON is a prunable attachment JSON object, if applicable, because unsignedTransactionBytes never includes prunable data (optional if the transaction has already been broadcast and the prunable message can still be retrieved from the database) secretPhrase is the secret passphrase of the signing account validate is false to skip validation of the transaction bytes being signed (useful on nodes where the full blockchain is not downloaded) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: signatureHash (S) is a SHA-256 hash of the transaction signature, used in escrow transactions verify (B) is true the signature is verified, false if not transactionJSON (O) is the signed transaction JSON object transactionBytes (S) are the signed transaction bytes fullHash (S) is the full hash of the signed transaction prunableAttachmentJSON (O) is the prunable attachment JSON object, if applicable, because transactionBytes never includes prunable data transaction (S) is the transaction ID, derived from the fullHash lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Sign Transaction example.","title":"Sign Transaction"},{"location":"api/#voting-system-operations","text":"","title":"Voting System Operations"},{"location":"api/#cast-vote","text":"Cast a vote on a poll. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is castVote poll is the poll ID vote00 is an integer within the allowed range to vote for option (answer) 0 (optional if minNumberOfOptions met, default is -128 ) vote01 is an integer within the allowed range to vote for option (answer) 1 (optional if minNumberOfOptions met, default is -128 ) vote02 is an integer within the allowed range to vote for option (answer) 2 (optional if minNumberOfOptions met, default is -128 ) \u22ee Note: The allowed vote values are integers between minRangeValue and maxRangeValue , inclusive. This range, along with the minimum and maximum number of options that can and must be voted on are specified when the poll is created. Refer to Create Poll . Response: Refer to Create Transaction Response . Example: Refer to Cast Vote example.","title":"Cast Vote"},{"location":"api/#create-poll","text":"Create a new poll. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is createPoll name is the name of the poll description is the description of the poll, or the question to be answered finishHeight is the block height when the poll is completed votingModel is 0 for -one Vote Per Account_, 1 for Vote By BLX Balance , 2 for Vote By Asset Balance and 3 for Vote By Currency Balance minNumberOfOptions is the minimum number of options (answers) that must be voted for maxNumberOfOptions is the maximum number of options (answers) that can be voted for minRangeValue is the minimum integer value for an option (answer) (>= 0 ) maxRangeValue is the maximum integer value for an option (answer) (>= minRangeValue ) minBalance is the minimum balance (in NQT or QNT) required for voting (optional, default 0) minBalanceModel is (required if minBalance > 0 , must match votingModel when votingModel > 0 ) 1 for BLX balance 2 for an asset balance 3 for a currency balance holding is the asset or currency ID (required if minBalanceModel > 1 ) option00 is the name of option (answer) 0 option01 is the name of option (answer) 1 (optional) option02 is the name of option (answer) 2 (optional) \u22ee Notes: Up to 100 options (answers) can be specified, but there is an extra fee for each option beyond 20. Unlike the API, the NRS client treats a vote of 0 as a nonvote not contributing to the number answers (options) chosen. The NRS client uses checkboxes for selecting answers when minRangeValue = 0 and maxRangeValue = 1; otherwise sliding controls are used to select answers from the allowed range. Note: When a balance affects the poll result, the result depends only on the balance (including pending outgoing phased transfers) computed just prior to the finish height. Response: Refer to Create Transaction Response . The transaction ID is also the poll ID. Example: Refer to Create Poll example.","title":"Create Poll"},{"location":"api/#get-poll","text":"Get the details of a poll. Request: requestType is getPoll poll is the poll ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: poll (S) is the poll ID account (S) is the account number of the poll creator accountRS (S) is the Reed-Solomon address of the account name (S) is the name of the poll description (S) is the description of the poll, or the question to be answered finishHeight (N) is the block height when the poll is completed finished (B) is true if the poll is completed, false otherwise votingModel (N) is 0 for -one Vote Per Account_, 1 for Vote By BLX Balance , 2 for Vote By Asset Balance and 3 for Vote By Currency Balance minNumberOfOptions (N) is the minimum number of options (answers) that must be voted for maxNumberOfOptions (N) is the maximum number of options (answers) that can be voted for minBalance (S) is the minimum balance (in NQT or QNT) required for voting minBalanceModel (N) is 1 for BLX balance, 2 for an asset balance, 3 for a currency balance when minBalance > 0 holding is the asset or currency ID when minBalanceModel > 1 options (A) is the array of options (answers) minRangeValue (N) is the minimum integer value for an option (answer) maxRangeValue (N) is the maximum integer value for an option (answer) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Poll example.","title":"Get Poll"},{"location":"api/#get-poll-result","text":"Get the result of a poll. Request: requestType is getPollResult poll is the poll ID votingModel (optional, default null) holding (optional, default null) minBalance (optional, default 0 ) minBalanceModel (required if minBalance > 0 , must match votingModel when votingModel > 0 ) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: The votingModel , holding , minBalance and minBalanceModel parameters are optional and default to the original values specified when the poll was created (refer to Create Poll ). The original values can only be overridden while the votes are still stored in the database, until 1441 blocks after the poll is completed. If votingModel is specified, holding , minBalance and minBalanceModel or the defaults specified above apply, otherwise they are ignored. Response: poll (S) is the poll ID votingModel (N) is the votingModel used to calculate results (refer to Note above) minBalanceModel (N) is the minBalanceModel used to calculate results (refer to Note above) minBalance (S) is the minBalance used to calculate results (refer to Note above) holding (S) is the asset or currency ID if the voting model uses an asset or currency balance to determine weight , if applicable (refer to Note above) decimals (N) is the number decimal places used by the asset or currency, if applicable finished (B) is true if the poll is complete, false otherwise options (A) is the array of options (answers) of the poll results (A) is an array of result objects with the following fields for each result: weight (S) is the sum of the weight of each account that voted for the corresponding option (answer); an account's weight is 1 if the voting model is 0 , otherwise it is the NQT, asset QNT or currency QNT balance of the account if the voting model is 1 , 2 or 3 respectively; however, the weight is 0 if minBalance is not met result (S) is the sum over each account that voted for the corresponding option (answer) of: the product of the account's weight and the rangeValue selected when the vote was cast. lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Poll Result example.","title":"Get Poll Result"},{"location":"api/#get-poll-vote","text":"Get a poll vote given a poll ID and an account ID. Request: requestType is getPollVote poll is the poll ID account is the account ID includeWeights is true to calculate and return the weight assigned to each vote (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: votes (A) is an array of votes, the range values (S) corresponding to each option (answer) with empty strings for non-votes voter (S) is the account number of the voter voterRS (S) is the Reed-Solomon address of the voter transaction (S) is the transaction ID of the vote weight (S) is the weight assigned to each vote (applies if includeWeights is true ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: Votes are deleted from the database 1441 blocks after the poll is finished. Only aggregate results are kept (refer to Get Poll Result ). Example: Refer to Get Poll Vote example.","title":"Get Poll Vote"},{"location":"api/#get-poll-votes","text":"Get all votes on a poll in reverse chronological order. Request: requestType is getPollVotes poll is the poll ID includeWeights is true to calculate and return the weight assigned to each vote (optional) firstIndex is a zero-based index to the first vote to retrieve (optional) lastIndex is a zero-based index to the last vote to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: votes (A) is an array of vote objects (refer to Get Poll Vote for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: Votes are deleted from the database 1441 blocks after the poll is finished. Only aggregate results are kept (refer to Get Poll Result ). Example: Refer to Get Poll Votes example.","title":"Get Poll Votes"},{"location":"api/#get-polls","text":"Get poll details in reverse creation order. Request: requestType is getPolls account is a creation account ID filter (optional) timestamp is the earliest poll (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first poll to retrieve (optional) lastIndex is a zero-based index to the last poll to retrieve (optional) includeFinished is true to include completed polls (optional) finishedOnly is true to exclude not yet executed, phased transactions (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: polls (A) is an array of polls (refer to Get Poll for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Polls example.","title":"Get Polls"},{"location":"api/#search-polls","text":"Search for poll details given a name/description query string. Request: requestType is searchPolls query is a full text query on the poll fields name (S) and description (S) in the standard Lucene syntax (optional) firstIndex is a zero-based index to the first poll to retrieve (optional) lastIndex is a zero-based index to the last poll to retrieve (optional) includeFinished is true to include completed polls (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: polls (A) is an array of polls (refer to Get Poll for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Polls example.","title":"Search Polls"},{"location":"api/#utilities","text":"","title":"Utilities"},{"location":"api/#decode-qr-code","text":"Decodes a base64-encoded jpeg to a UTF-8 string. POST only. Request: requestType is decodeQRCode qrCodeBase64 is a base64-encoded jpeg string to be decoded Response qrCodeData (S) is a UTF-8 string containing the decoded data from the base64 string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Decode QR Code example.","title":"Decode QR Code"},{"location":"api/#detect-mime-type","text":"Gets the mime type of uploaded file or data. Request: requestType is detectMimeType data is the data (optional) file is the pathname of a data file to upload (optional if data provided) filename is a filename to associate with data (optional if file uploaded in which case the uploaded filename is always used) isText is false if data is a hex string (optional) Response type (S) is the mime type requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Detect Mime Type example.","title":"Detect Mime Type"},{"location":"api/#encode-qr-code","text":"Encodes a UTF-8 string to a base64-encoded jpeg. POST only. Request: requestType is encodeQRCode qrCodeData is a UTF-8 text string to be encoded width is the width of the output image (optional) height is the height of the output image (optional) Response qrCodeBase64 (S) is a base64 string encoding a jpeg image of the QR code requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Encode QR Code example.","title":"Encode QR Code"},{"location":"api/#full-hash-to-id","text":"Converts a full hash to an ID. Request: requestType is fullHashToId fullHash is the full hash 64-digit (32-byte) hex string Response: stringId (S) is the ID corresponding to the hash, in the form of an decimal string -longId_ (S) is the signed long integer (8-bytes) representation of the ID used internally, returned as a string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Full Hash To Id example.","title":"Full Hash To Id"},{"location":"api/#hash","text":"Calculates the hash of a secret for use in phased transactions with voting model 5 ( Vote By Secret ). Request: requestType is hash hashAlgorithm is the hash function used: 2 for SHA256, 3 for SHA3, 5 for SCRYPT, 6 for RIPEMD160, 25 for Keccack25 and 62 for SHA256 followed by RIPEMD160, according to Get Constants secret is a secret phrase in text form or hex string form secretIsText is true if secret is text, false if it is a hex string (optional) Note: secret is converted from a hex string to a byte array, which is what the hash algorithm expects, unless secretIsText is true , in which case secret is first converted from text to a UTF-8 hex string as by Hex Convert . Response: hash (S) is the hash of the secret, in the form of a hex string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Hash example.","title":"Hash"},{"location":"api/#hex-convert","text":"Converts a text string into a UTF-8 hex string and if the text input is already a hex string, also into text. Request: requestType is hexConvert string is a text string, possibly a hex string Response: binary (S) is the converted UTF-8 hex string text (S) is a text string converted from string if it is a valid UTF-8 hex string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Hex Convert example.","title":"Hex Convert"},{"location":"api/#long-convert","text":"Converts an ID to the signed long integer representation used internally. Request: requestType is -longConvert_ id is a numerical ID, in decimal form but equivalent to an 8-byte unsigned integer as produced by SHA-256 hashing Response: stringId (S) is the numerical ID -longId_ (S) is the signed long integer (8-bytes) representation of the ID used internally, returned as a string requestProcessingTime (N) is the API request processing time (in millisec) Note: Java does not support unsigned integers, so any unsigned ID (such as a block ID) visible in the NRS client is represented internally as a signed integer. Example: Refer to Long Convert example.","title":"Long Convert"},{"location":"api/#rs-convert","text":"Get both the Reed-Solomon account address and the account number given an account ID. Request: requestType is rsConvert account is an account ID (either RS address or number) Response: accountRS (S) is the Reed-Solomon address of the account requestProcessingTime (N) is the API request processing time (in millisec) account (S) is the account number Example: Refer to RS Convert example.","title":"RS Convert"},{"location":"api/#debug-operations","text":"All debug utilities require an adminPassword request parameter. See Admin Password for more info.","title":"Debug Operations"},{"location":"api/#clear-unconfirmed-transactions","text":"Empties the unconfirmed transaction pool. POST only. Request: requestType is clearUnconfirmedTransactions Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Clear Unconfirmed Transactions example.","title":"Clear Unconfirmed Transactions"},{"location":"api/#dump-peers","text":"Get all active peers, optionally of a certain version or a minimum weight. Request: requestType is dumpPeers version is a version filter such as 1.5.11 (optional) weight is a minimum weight filter such as 1000 (optional) connect is true to force a connection attempt to each known peer first (optional); password protected like the Debug Operations if true Response: peers (S) is a string of peer IP addresses or DNS names, separated by semicolons count (N) is the number of peers in the peers string. requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Dump Peers example.","title":"Dump Peers"},{"location":"api/#full-reset","text":"Deletes the entire blockchain. POST only. Request: requestType is fullReset Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Note: After successful completion of the reset, a new blockchain will automatically begin downloading. Example: Refer to Full Reset example.","title":"Full Reset"},{"location":"api/#get-all-broadcasted-transactions","text":"Get unconfirmed transactions broadcasted from this node but not yet received back from a peer, if transaction rebroadcasting is enabled. Request: requestType is -getAllBroadcastedTransactions_ requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of broadcasted unconfirmed transactions not yet received back from a peer (S) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Broadcasted Transactions example.","title":"Get All Broadcasted Transactions"},{"location":"api/#get-all-waiting-transactions","text":"Get unconfirmed transactions temporarily kept in memory during transaction processing. Request: requestType is getAllWaitingTransactions requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of unconfirmed transactions temporarily kept in memory (S) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Waiting Transactions example.","title":"Get All Waiting Transactions"},{"location":"api/#get-log","text":"Get up to 100 of the most recent log messages from a memory buffer. Request: requestType is getLog count is the number of messages to return (optional, default 100) Response: messages (A) is an array of log messages (S) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Log example.","title":"Get Log"},{"location":"api/#get-stack-traces","text":"Get the stack traces of the currently running threads in reverse id order. Request: requestType is getStackTraces depth is the maximum trace depth to retrieve (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) -locks_ (A) is an array of lock objects threads (A) is an array of thread objects with the following fields: trace (A) is an array of traces (S) name (S) is the thread name id (N) is the thread ID state (S) is the thread state, one of WAITING , -tIMED_WAITING_ and -rUNNABLE_ -locks_ (A) is an array of lock objects with the following fields, if not empty: trace (S) depth (N) name (S) hash (N) Example: Refer to Get Stack Traces example.","title":"Get Stack Traces"},{"location":"api/#lucene-reindex","text":"Forces a rebuild of the Lucene search index. POST only. Request: requestType is -luceneReindex_ Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Lucene Reindex example.","title":"Lucene Reindex"},{"location":"api/#pop-off","text":"Removes specified number of blocks (and associated transactions) from the top of the blockchain. POST only. Request: requestType is popOff numBlocks is the number of blocks to pop off the blockchain (optional) height is the new height of the blockchain after popping (optional if numBlocks provided) Note: If table trimming is enabled (default), at most 1440 blocks can be popped off without triggering a full rescan. Response: blocks (A) is an array of the blocks popped off (refer to Get Block for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Pop Off example.","title":"Pop Off"},{"location":"api/#rebroadcast-unconfirmed-transactions","text":"Rebroadcast transactions in the unconfirmed pool to peers, until received back or found in the blockchain. Rebroadcasting can be disabled by setting the nxt.enableTransactionRebroadcasting property to false . POST only. Request: requestType is -rebroadcastUnconfirmedTransactions_ Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Rebroadcast Unconfirmed Transactions example.","title":"Rebroadcast Unconfirmed Transactions"},{"location":"api/#requeue-unconfirmed-transactions","text":"Requeue unconfirmed transactions. POST only. Request: requestType is requeueUnconfirmedTransactions Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Requeue Unconfirmed Transactions example.","title":"Requeue Unconfirmed Transactions"},{"location":"api/#retrieve-pruned-data","text":"Initiates a task of requesting and restoring missing prunable data. POST only. Request: requestType is retrievePrunedData Response: done (B) is true if the operation completed successfully numberOfPrunedData (N) is the number of pruned data available pruned data transactions requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Retrieve Pruned Data example.","title":"Retrieve Pruned Data"},{"location":"api/#scan","text":"Scans the top of the blockchain. POST only. Request: requestType is scan numBlocks is the number of blocks to scan at the top of the blockchain (optional) height is the height above which blockchain is to be scanned (optional if numBlocks provided) validate is true if signatures are to be re-verified and blocks and transactions re-validated (optional) Note: The derived object tables are rolled back and rebuilt by rescanning the existing blockchain. A request to rescan more than 1440 blocks when table trimming is enabled will do a full rescan starting from height 0. Rescan status is saved in the database, so that if a rescan is interrupted or fails it will resume on restart. Response: scanTime (N) is the scan time done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Scan example.","title":"Scan"},{"location":"api/#set-logging","text":"Sets the log level and optionally specifies communication events to be logged, without restarting the server. POST only. Request: requestType is setLogging -logLevel_ is one of -eRROR_, WARN , -iNFO_ or -dEBUG_ with each level in the list including all of the previous levels (optional, default is -iNFO_) communicationEvent is one of multiple communication (HTTP) events to be logged, from the list: -eXCEPTION_, HTTP-eRROR , HTTP-OK (optional) communicationEvent is one of multiple communication events (optional) \u22ee Note: The initial log level is set by the nxt.level logging property, currently -fINE_ (equivalent to -dEBUG_). Response: -loggingUpdated_ (B) is true if the operation completed successfully Example: Refer to Set Logging example.","title":"Set Logging"},{"location":"api/#shutdown","text":"Shutdown the server. POST only. Request: requestType is shutdown scan is true to truncate the derived tables and schedule a full rescan with validation on the next start (optional) Response: shutdown (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Shutdown example.","title":"Shutdown"},{"location":"api/#trim-derived-tables","text":"Trigger a derived tables trim, and a prunable tables pruning. POST only. Request: requestType is trimDerivedTables Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Trim Derived Tables example.","title":"Trim Derived Tables"},{"location":"api/API_Examples/","text":"Blue0x API Examples Account Operations Delete Account Property Request: https://localhost:2022/nxt? requestType=deleteAccountProperty& recipient=BLX-7A48-47JL-T7LD-D5FS3& property=testkey1& secretPhrase=iWontTellYou& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"4ff58a03d056ee8a3fee89766bf8e4acd008c2147216...\", \"transactionJSON\": { \"senderPublicKey\": \"373522bcd8904f4707472e590cbb67976d40e7af...\", \"signature\": \"26ed697fc82f3b15e6d2c972eff5b195445314aa4bacc8...\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"33f7edaec1034153f8e28a996b13b2b2665d0d0a3e4a194...\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"10023643060833833497\", \"signatureHash\": \"4ff58a03d056ee8a3fee89766bf8e4acd008c21472...\", \"attachment\": { \"property\": \"940296349549404868\", \"version.AccountPropertyDelete\": 1 }, \"senderRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"subtype\": 11, \"amountNQT\": \"0\", \"sender\": \"12745647715474645062\", \"recipientRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"recipient\": \"12745647715474645062\", \"ecBlockHeight\": 754255, \"deadline\": 60, \"transaction\": \"5999080309032613683\", \"timestamp\": 80189128, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"011bc896c7043c00373522bcd8904f4707472e590cbb67976d40e7af39650ea11c...\", \"broadcasted\": false, \"requestProcessingTime\": 3, \"transactionBytes\": \"011bc896c7043c00373522bcd8904f4707472e590cbb67976d40e7af39650ea11cb2be5734...\", \"fullHash\": \"33f7edaec1034153f8e28a996b13b2b2665d0d0a3e4a1942718aa480c6097cf6\", \"transaction\": \"5999080309032613683\" } Get Account Request: https://localhost:2022/nxt? requestType=getAccount& account=BLX-4VNQ-RWZC-4WWQ-GVM8S Response: { \"unconfirmedBalanceNQT\": \"2501162882344\", \"effectiveBalanceNXT\": 13983, \"lessorsInfo\": [ { \"currentHeightTo\": \"341420\", \"nextHeightFrom\": \"341420\", \"effectiveBalanceNXT\": \"544525\", \"nextLesseeRS\": \"BLX-7WVC-W7TJ-REQ2-4VDJD\", \"currentLesseeRS\": \"BLX-7WVC-W7TJ-REQ2-4VDJD\", \"currentHeightFrom\": \"308653\", \"nextHeightTo\": \"374187\" } ], \"currentLessee\": \"7114946486381367146\", \"currentLeasingHeightTo\": 281179, \"forgedBalanceNQT\": \"0\", \"balanceNQT\": \"2501162882344\", \"publicKey\": \"73080c6a224062660184f10ebb7fb431d4593...\", \"requestProcessingTime\": 2, \"assetBalances\": [ { \"balanceQNT\": \"96651298\", \"asset\": \"4551058913252105307\" } ], \"guaranteedBalanceNQT\": \"1398383666344\", \"unconfirmedAssetBalances\": [ { \"unconfirmedBalanceQNT\": \"96651298\", \"asset\": \"4551058913252105307\" } ], \"currentLesseeRS\": \"BLX-TMVC-69YC-SJB4-8YCH7\", \"accountRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"name\": \"mystical\", \"account\": \"17013046603665206934\", \"currentLeasingHeightFrom\": 279739 } Get Account Block Count Request: https://localhost:2022/nxt? requestType=getAccountBlockCount& account=7114946486381367146 Response: { \"numberOfBlocks\": 460, \"requestProcessingTime\": 70 } Get Account Block Ids Request: https://localhost:2022/nxt? requestType=getAccountBlockIds& account=7114946486381367146& lastIndex=5 Response: { \"blockIds\": [ \"6021945980475236545\", \"11040962152457477526\", \"1157648883168692101\", \"9322994768555364845\", \"12862636636638339558\", \"11535040705139271493\" ], \"requestProcessingTime\": 3 } Get Account Blocks Request: https://localhost:2022/nxt? requestType=getAccountBlocks& account=7114946486381367146& lastIndex=0 Response: { \"blocks\": [ { \"previousBlockHash\": \"bd8948556e968f1d532cd286a5dd8fde0159d7950467f1ed8fbf26a31d663e99\", \"payloadLength\": 386, \"totalAmountNQT\": \"0\", \"generationSignature\": \"74138446cacdb30075492670f7e24fb839434818cb877bba174e37361fc899a1\", \"generator\": \"7114946486381367146\", \"generatorPublicKey\": \"dbc809e8237914f25add0d349ea16b2ac05cae6882d0a1782d23605af264d97a\", \"baseTarget\": \"325377698\", \"payloadHash\": \"32df67383f63b74f1331bbdb6f1be424c87a1e6423fc7091d81683481eb6c4ca\", \"generatorRS\": \"BLX-TMVC-69YC-SJB4-8YCH7\", \"nextBlock\": \"3553212706398858282\", \"numberOfTransactions\": 2, \"blockSignature\": \"d30e3f95d547fa922feb31303f877a345d0ad8c232778a4507adf9082b5df3...\", \"transactions\": [ \"1199750337785535382\", \"8975701802988160413\" ], \"version\": 3, \"totalFeeNQT\": \"200000000\", \"previousBlock\": \"2130086549390920125\", \"block\": \"6021945980475236545\", \"height\": 278953, \"timestamp\": 30130340 } ], \"requestProcessingTime\": 3 } Get Account Id Request: https://localhost:2022/nxt? requestType=getAccountId& secretPhrase=IWontTellYou Response: { \"accountRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"publicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"requestProcessingTime\": 2, \"account\": \"15323192282528158131\" } Get Account Ledger Request: https://localhost:2022/nxt? requestType=getAccountLedger& account=BLX-7A48-47JL-T7LD-D5FS3 Response: { \"entries\": [ { \"change\": \"100\", \"eventType\": \"CURRENCY\\_OFFER\\_EXPIRED\", \"ledgerId\": \"532246\", \"holding\": \"6112509426732269765\", \"isTransactionEvent\": true, \"balance\": \"90000\", \"holdingType\": \"UNCONFIRMED\\_CURRENCY\\_BALANCE\", \"accountRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"block\": \"2303344830040052747\", \"event\": \"13236557417702245931\", \"account\": \"12745647715474645062\", \"height\": 736757, \"timestamp\": 78995635 } ], \"requestProcessingTime\": 1 } Get Account Ledger Entry Request: https://localhost:2022/nxt? requestType=getAccountLedgerEntry& ledgerId=532246 Response: { \"change\": \"100\", \"eventType\": \"CURRENCY\\_OFFER\\_EXPIRED\", \"requestProcessingTime\": 1, \"ledgerId\": \"532246\", \"holding\": \"6112509426732269765\", \"isTransactionEvent\": true, \"balance\": \"90000\", \"holdingType\": \"UNCONFIRMED\\_CURRENCY\\_BALANCE\", \"accountRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"block\": \"2303344830040052747\", \"event\": \"13236557417702245931\", \"account\": \"12745647715474645062\", \"height\": 736757, \"timestamp\": 78995635 } Get Account Lessors Request: https://localhost:2022/nxt? requestType=getAccountLessors& account=7114946486381367146& height=282497 Response: { \"lessors\": [ { \"guaranteedBalanceNQT\": \"2643314085738687\", \"lessorRS\": \"BLX-MRBN-8DFH-PFMK-A4DBM\", \"lessor\": \"9918441724915080500\" } ], \"accountRS\": \"BLX-TMVC-69YC-SJB4-8YCH7\", \"requestProcessingTime\": 1, \"account\": \"7114946486381367146\", \"height\": 282497 } Get Account Properties Request: https://localhost:2022/nxt? requestType=getAccountProperties& recipient=BLX-7A48-47JL-T7LD-D5FS3 Response: { \"recipientRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"recipient\": \"12745647715474645062\", \"requestProcessingTime\": 0, \"properties\": [ { \"setterRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"property\": \"testkey1\", \"setter\": \"12745647715474645062\", \"value\": \"testvalue1\" } ] } Get Account Public Key Request: https://localhost:2022/nxt? requestType=getAccountPublicKey& account=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"publicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d...\", \"requestProcessingTime\": 36 } Get Account Transaction Ids Request: https://localhost:2022/nxt? requestType=getAccountTransactionIds& account=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"transactionIds\": [ \"15200507403046301754\", \"10900022216391397990\" ], \"requestProcessingTime\": 1 } Get Balance Request: https://localhost:2022/nxt? requestType=getBalance& account=7114946486381367146 Response: { \"unconfirmedBalanceNQT\": \"9246231058415\", \"guaranteedBalanceNQT\": \"9242231058415\", \"effectiveBalanceNXT\": 92422, \"forgedBalanceNQT\": \"260560000000\", \"balanceNQT\": \"9246231058415\", \"requestProcessingTime\": 1 } Get Blockchain Transactions Request: https://localhost:2022/nxt? requestType=getBlockchainTransactions& account=BLX-4VDY-LNVT-LMAY-FMCKA& lastIndex=0 Response: { \"requestProcessingTime\": 2, \"transactions\": [ { \"signature\": \"0bc2045c2e4291e9595702fc6a9e805f11b65a88a867d515e44b980ef72b440a2...\", \"transactionIndex\": 0, \"type\": 0, \"phased\": false, \"ecBlockId\": \"441034190304176853\", \"signatureHash\": \"31f92d5612115e174748c7a261cd0412e00028639301aae0f0c1ddfc7618b7e7\", \"attachment\": { \"version.OrdinaryPayment\": 0 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"1400000000\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"block\": \"6752144003309284467\", \"blockTimestamp\": 46567698, \"deadline\": 1440, \"timestamp\": 46567612, \"height\": 291611, \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"feeNQT\": \"100000000\", \"confirmations\": 2046, \"fullHash\": \"a26a2a36086e5d13f069dd9da06ce4e6b0418e9a299bec0cda39bfa04a2ca5e3\", \"version\": 1, \"sender\": \"15295723609781267838\", \"recipient\": \"11580081983047651163\", \"ecBlockHeight\": 291600, \"transaction\": \"1395392441102264994\" } ] } Get Guaranteed Balance Request: https://localhost:2022/nxt? requestType=getGuaranteedBalance& account=7114946486381367146& numberOfConfirmations=1440 Response: { \"guaranteedBalanceNQT\": \"9242231058415\", \"requestProcessingTime\": 0 } Get Unconfirmed Transaction Ids Request: https://localhost:2022/nxt? requestType=getUnconfirmedTransactionIds& account=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"requestProcessingTime\": 1, \"unconfirmedTransactionIds\": [] } Get Unconfirmed Transactions Request: https://localhost:2022/nxt? requestType=getUnconfirmedTransactions& account=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"unconfirmedTransactions\": [], \"requestProcessingTime\": 1 } Search Accounts Request: https://localhost:2022/nxt? requestType=searchAccounts& query=testnet AND tyler Response: { \"accounts\": [ { \"accountRS\": \"BLX-7C4U-3Z9K-GZM8-CU8EJ\", \"name\": \"Tyler Jordan\", \"description\": \"testnet account\", \"account\": \"12119426358687475802\" } ], \"requestProcessingTime\": 16 } Send Money Request: https://localhost:2022/nxt? requestType=sendMoney& secretPhrase=IWontTellYou& recipient=BLX-4VNQ-RWZC-4WWQ-GVM8S& amountNQT=100000000& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"b35eae7d2f01639810d37694138aa0a86fbbf8a9bf58c2be4f2a5b8f0f30b3f7\", \"unsignedTransactionBytes\": \"001046aac6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"5f0378b7390ff5a815eadd1354de533eef682f139362b153576e2207320a6...\", \"feeNQT\": \"100000000\", \"type\": 0, \"fullHash\": \"3a304584f20cf3d2cbbdd9698ff9a166427005ab98fbe9ca4ad6253651ee81f1\", \"version\": 1, \"ecBlockId\": \"17321329645912574173\", \"signatureHash\": \"b35eae7d2f01639810d37694138aa0a86fbbf8a9bf58c2be4f2a5b8f0f30b3f7\", \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 0, \"amountNQT\": \"100000000\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"recipient\": \"17013046603665206934\", \"ecBlockHeight\": 275727, \"deadline\": 60, \"transaction\": \"15200507403046301754\", \"timestamp\": 29796934, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 8475, \"transactionBytes\": \"001046aac6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143...\", \"fullHash\": \"3a304584f20cf3d2cbbdd9698ff9a166427005ab98fbe9ca4ad6253651ee81f1\", \"transaction\": \"15200507403046301754\" } Set Account Info Request: https://localhost:2022/nxt? requestType=setAccountInfo& secretPhrase=IWontTellYou& name=iwonttellyou description=example account feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"15917aafd59ad9cece7dfc127ab256711d1c58a8ed1a0dc7334949ca826d8a32\", \"unsignedTransactionBytes\": \"0115dfeecb013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"3f5167a3a23677c85aba7fbbc8bc31cddf540a632abebee4a80fe08ba92b9a0...\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"2d31c26aa2b0ae4cf233cc4035c555bca0c579bdcef24bc9819132dc2ce5b2e5\", \"version\": 1, \"ecBlockId\": \"17558522603047297060\", \"signatureHash\": \"15917aafd59ad9cece7dfc127ab256711d1c58a8ed1a0dc7334949ca826d8a32\", \"attachment\": { \"name\": \"iwonttellyou\", \"description\": \"example account\", \"version.AccountInfo\": 1 }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 5, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"ecBlockHeight\": 279080, \"deadline\": 60, \"transaction\": \"5525548004452479277\", \"timestamp\": 30142175, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 8553, \"transactionBytes\": \"0115dfeecb013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"2d31c26aa2b0ae4cf233cc4035c555bca0c579bdcef24bc9819132dc2ce5b2e5\", \"transaction\": \"5525548004452479277\" } Set Account Property Request: https://localhost:2022/nxt? requestType=setAccountProperty& secretPhrase=iwonttellyou& property=country& value=switzerland& recipient=BLX-EZQ9-35P5-XZ8C-4LW87& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"34a690abc9f7fe4749da49d996e875e961aa0d38d6b80cdca9a01a7614004089\", \"transactionJSON\": { \"senderPublicKey\": \"b0db10704a831f1a0fd028e947784811e88fbe0fde25dc1f68209a2d9f93be13\", \"signature\": \"f5fd4b881c5625c778ffe38bced33d44231eda406e95d9068dea69407ea3370dc873f52a123a0cbe590ecf4adf2a3c6238dc26c73ee63aeb7ac4331958b53a1e\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"d94baf764f0b7e47dbbe30c5aef1694fef6dfd2ecc7c86e29eefee7e6d1b2b39\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"1026208230615777523\", \"signatureHash\": \"34a690abc9f7fe4749da49d996e875e961aa0d38d6b80cdca9a01a7614004089\", \"attachment\": { \"property\": \"\\\\\"switzerland\\\\\"\", \"value\": \"\\\\\"country\\\\\"\", \"version.AccountProperty\": 1 }, \"senderRS\": \"BLX-EZQ9-35P5-XZ8C-4LW87\", \"subtype\": 10, \"amountNQT\": \"0\", \"sender\": \"2493747385666535111\", \"recipientRS\": \"BLX-EZQ9-35P5-XZ8C-4LW87\", \"recipient\": \"2493747385666535111\", \"ecBlockHeight\": 684730, \"deadline\": 360, \"transaction\": \"5151567459679947737\", \"timestamp\": 72072027, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"011a5bbb4b046801b0db10704a831f1a0fd028e947784811e88fbe0fde25dc1f68209a2d9f93be13c77e36ea08929b22000000000000000000e1f5050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ba720a00f3806fdbf2d23d0e010d22737769747a65726c616e64220922636f756e74727922\", \"broadcasted\": true, \"requestProcessingTime\": 83, \"transactionBytes\": \"011a5bbb4b046801b0db10704a831f1a0fd028e947784811e88fbe0fde25dc1f68209a2d9f93be13c77e36ea08929b22000000000000000000e1f505000000000000000000000000000000000000000000000000000000000000000000000000f5fd4b881c5625c778ffe38bced33d44231eda406e95d9068dea69407ea3370dc873f52a123a0cbe590ecf4adf2a3c6238dc26c73ee63aeb7ac4331958b53a1e00000000ba720a00f3806fdbf2d23d0e010d22737769747a65726c616e64220922636f756e74727922\", \"fullHash\": \"d94baf764f0b7e47dbbe30c5aef1694fef6dfd2ecc7c86e29eefee7e6d1b2b39\", \"transaction\": \"5151567459679947737\" Start Funding Monitor Request: https://localhost:2022/nxt? requestType=startFundingMonitor& property=funding& amount=1000000000& threshold=15000000000& interval=10& secretPhrase=IWontTellYou Response: { \"started\": true, \"requestProcessingTime\": 5 } Stop Funding Monitor Request: https://localhost:2022/nxt? requestType=stopFundingMonitor& property=funding& secretPhrase=IWontTellYou Response: { \"stopped\": 1, \"requestProcessingTime\": 5 } Account Control Operations Get All Phasing Only Controls Request: https://localhost:2022/nxt? requestType=getAllPhasingOnlyControls& firstIndex=0& lastIndex=1 Response: { \"phasingOnlyControls\": [ { \"minDuration\": 0, \"votingModel\": 0, \"minBalance\": \"0\", \"accountRS\": \"BLX-AVGK-SKJZ-583G-A689A\", \"quorum\": \"2\", \"maxFees\": \"0\", \"whitelist\": [ { \"whitelistedRS\": \"BLX-EVHD-5FLM-3NMQ-G46NR\", \"whitelisted\": \"16992224448242675179\" }, { \"whitelistedRS\": \"BLX-XK4R-7VJU-6EQG-7R335\", \"whitelisted\": \"5873880488492319831\" }, { \"whitelistedRS\": \"BLX-SZKV-J8TH-GSM9-9LKV6\", \"whitelisted\": \"8245583500397018683\" } ], \"minBalanceModel\": 0, \"account\": \"9519700060090428881\", \"maxDuration\": 0 }, { \"minDuration\": 10, \"votingModel\": 0, \"minBalance\": \"0\", \"accountRS\": \"BLX-VSTJ-MHZK-A6N3-CHRRH\", \"quorum\": \"1\", \"maxFees\": \"1000000000\", \"whitelist\": [ { \"whitelistedRS\": \"BLX-D5A2-7CCE-G35P-BB324\", \"whitelisted\": \"10448396398360890624\" }, { \"whitelistedRS\": \"BLX-KGPY-DF8U-HSF9-GQ69A\", \"whitelisted\": \"16437178058884561598\" } ], \"minBalanceModel\": 0, \"account\": \"12096369102442849072\", \"maxDuration\": 100 } ], \"requestProcessingTime\": 0 } Get Phasing Only Control Request: https://localhost:2022/nxt? requestType=getPhasingOnlyControl& account=BLX-AVGK-SKJZ-583G-A689A Response: { \"minDuration\": 0, \"votingModel\": 0, \"minBalance\": \"0\", \"accountRS\": \"BLX-AVGK-SKJZ-583G-A689A\", \"quorum\": \"2\", \"maxFees\": \"0\", \"whitelist\": [ { \"whitelistedRS\": \"BLX-EVHD-5FLM-3NMQ-G46NR\", \"whitelisted\": \"16992224448242675179\" }, { \"whitelistedRS\": \"BLX-XK4R-7VJU-6EQG-7R335\", \"whitelisted\": \"5873880488492319831\" }, { \"whitelistedRS\": \"BLX-SZKV-J8TH-GSM9-9LKV6\", \"whitelisted\": \"8245583500397018683\" } ], \"requestProcessingTime\": 1, \"minBalanceModel\": 0, \"account\": \"9519700060090428881\", \"maxDuration\": 0 } Set Phasing Only Control Request: https://localhost:2022/nxt? requestType=setPhasingOnlyControl& controlVotingModel=0& controlQuorum=1& controlWhitelisted=BLX-5MYN-AP7M-NKMH-CRQJZ& secretPhrase=IWontTellYou& feeNQT:100000000& deadline=60 Response: { \"signatureHash\": \"bbb24087ab3639f508da77413a63ed8c45431ec9b7f0413fd574faea0de7e70a\", \"transactionJSON\": { \"senderPublicKey\": \"373522bcd8904f4707472e590cbb67976d40e7af39650ea11cb2be5734cdf30c\", \"signature\": \"eacaf3dc98c0e2ddc1b7b546209cecf092f16bb9e2fe9fd09760fb5815573f063...\", \"feeNQT\": \"100000000\", \"type\": 4, \"fullHash\": \"b6b7ac7a29f9f638244f1025c39199e8b5f8f7c5415f77ef0ca95c0f206e1e2d\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"12092908062633562059\", \"signatureHash\": \"bbb24087ab3639f508da77413a63ed8c45431ec9b7f0413fd574faea0de7e70a\", \"attachment\": { \"version.SetPhasingOnly\": 1, \"controlMaxFees\": \"0\", \"controlMinDuration\": 0, \"controlMaxDuration\": 0, \"phasingControlParams\": { \"phasingHolding\": \"0\", \"phasingQuorum\": 1, \"phasingWhitelist\": [ \"12664921794733526996\" ], \"phasingMinBalance\": 0, \"phasingMinBalanceModel\": 0, \"phasingVotingModel\": 0 } }, \"senderRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"subtype\": 1, \"amountNQT\": \"0\", \"sender\": \"12745647715474645062\", \"ecBlockHeight\": 767270, \"deadline\": 60, \"transaction\": \"4104742066941900726\", \"timestamp\": 80779288, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"04111898d0043c00373522bcd8904f4707472e590cbb67976d40e7af39650ea...\", \"broadcasted\": true, \"requestProcessingTime\": 5, \"transactionBytes\": \"04111898d0043c00373522bcd8904f4707472e590cbb67976d40e7af39650ea1...\", \"fullHash\": \"b6b7ac7a29f9f638244f1025c39199e8b5f8f7c5415f77ef0ca95c0f206e1e2d\", \"transaction\": \"4104742066941900726\" } Alias Operations Buy / Sell Alias Request: https://localhost:2022/nxt? requestType=sellAlias& secretPhrase=IWontTellYou& aliasName=nextus& priceNQT=5& recipient=BLX-4VNQ-RWZC-4WWQ-GVM8S& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"d6f026cd8a883b5b6ff78a7d0121e4847eb6744b02757427de6d7ca0bf304226\", \"unsignedTransactionBytes\": \"01166e01d4013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"2041afc1687da2693ba092e33a84f665ad461e3b6762c18af61778261bc7e...\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"14a3eeb17cd4082db287259a768d32065d4cf5397ed6053fffa25e92a8a66ac7\", \"version\": 1, \"ecBlockId\": \"1612829598027150491\", \"signatureHash\": \"d6f026cd8a883b5b6ff78a7d0121e4847eb6744b02757427de6d7ca0bf304226\", \"attachment\": { \"alias\": \"nextus\", \"priceNQT\": \"5\", \"version.AliasSell\": 1 }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 6, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"recipient\": \"17013046603665206934\", \"ecBlockHeight\": 284050, \"deadline\": 60, \"transaction\": \"3245077163546682132\", \"timestamp\": 30671214, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 8515, \"transactionBytes\": \"01166e01d4013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143...\", \"fullHash\": \"14a3eeb17cd4082db287259a768d32065d4cf5397ed6053fffa25e92a8a66ac7\", \"transaction\": \"3245077163546682132\" } Set Alias Request: https://localhost:2022/nxt? requestType=setAlias& secretPhrase=IWontTellYou& aliasName=iwonttellyou& aliasURI=acct:nxt-l6fm-89wk-vk8p-fcrbb@nxt& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"0dc7e07acef27fe86686cfabe2d1bd57c0c038f9465c3fe3d10f67932a97af10\", \"unsignedTransactionBytes\": \"011135d0d3013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"d92aefbab189b6e61f890c34b06a47e14a1a2b2ce868f77a4591d2067c51d...\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"53917acbf44109391609a9bb57832c0d5903301e3d2bd6ffcf45cf893480f5a1\", \"version\": 1, \"ecBlockId\": \"4181883296304410027\", \"signatureHash\": \"0dc7e07acef27fe86686cfabe2d1bd57c0c038f9465c3fe3d10f67932a97af10\", \"attachment\": { \"alias\": \"iwonttellyou\", \"version.AliasAssignment\": 1, \"uri\": \"acct:nxt-l6fm-89wk-vk8p-fcrbb@nxt\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 1, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"ecBlockHeight\": 283939, \"deadline\": 60, \"transaction\": \"4109888654593921363\", \"timestamp\": 30658613, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 8104, \"transactionBytes\": \"011135d0d3013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473...\", \"fullHash\": \"53917acbf44109391609a9bb57832c0d5903301e3d2bd6ffcf45cf893480f5a1\", \"transaction\": \"4109888654593921363\" } Delete Alias Request: https://localhost:2022/nxt? requestType=deleteAlias& aliasName=mystical Response: { \"signatureHash\": \"a6e68daed99c1015dd12546c042466612b52a9f5193d8513f7f12684aba5bf1d\", \"unsignedTransactionBytes\": \"011809e60c023c0010f09c34f225d425306e5be55a49469081...\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"a5088bc6469e528d884e7fd3c49afeefc8656dd59c9fa5ffeab2a17b465f6d03e77...\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"63afc769e677b6210617ff7a9f5be2d7fe1aea7e46ccad968017d28df578fabf\", \"version\": 1, \"ecBlockId\": \"17895923487075501156\", \"signatureHash\": \"a6e68daed99c1015dd12546c042466612b52a9f5193d8513f7f12684aba5bf1d\", \"attachment\": { \"version.AliasDelete\": 1, \"alias\": \"mystical\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 8, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 161137, \"deadline\": 60, \"transaction\": \"2429260880513838947\", \"timestamp\": 34399753, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 52, \"transactionBytes\": \"011809e60c023c0010f09c34f225d425306e5be55a4946908156072...\", \"transaction\": \"2429260880513838947\" } Get Alias Request: https://localhost:2022/nxt? requestType=getAlias& alias=15515279700680480368 Response: { \"aliasURI\": \"http:\\\\/\\\\/google.com\", \"aliasName\": \"google\", \"accountRS\": \"BLX-FLVS-VRBV-LDPD-6DZ9W\", \"alias\": \"15515279700680480368\", \"requestProcessingTime\": 1, \"account\": \"5629477397208681336\", \"timestamp\": 2409343 } Get Alias Count Request: https://localhost:2022/nxt? requestType=getAliasCount& account=BLX-FLVS-VRBV-LDPD-6DZ9W Response: { \"numberOfAliases\": 200, \"requestProcessingTime\": 2 } Get Aliases Request: https://localhost:2022/nxt? requestType=getAliases& account=5629477397208681336& lastIndex=1 Response: { \"aliases\": [ { \"aliasURI\": \"\", \"aliasName\": \"101\", \"accountRS\": \"BLX-FLVS-VRBV-LDPD-6DZ9W\", \"alias\": \"8952438483248557843\", \"account\": \"5629477397208681336\", \"timestamp\": 2409893 } ], \"requestProcessingTime\": 1 } Get Aliases Like Request: https://localhost:2022/nxt? requestType=getAliasesLike& aliasPrefix=mysteri Response: { \"aliases\": [ { \"aliasURI\": \"\", \"aliasName\": \"mysteries\", \"accountRS\": \"BLX-9DZL-XFE2-EWE5-HVVAY\", \"alias\": \"13234331415538245332\", \"account\": \"18384674354580664306\", \"timestamp\": 4856820 }, { \"aliasURI\": \"anm\", \"aliasName\": \"mysterious\", \"accountRS\": \"BLX-AHBB-DSVC-WS2L-EW8BC\", \"alias\": \"8033154744709486670\", \"account\": \"14205721421835156777\", \"timestamp\": 2417903 } ], \"requestProcessingTime\": 1 } Arbitrary Message System Operations Decrypt From Request: https://localhost:2022/nxt? requestType=decryptFrom& secretPhrase=IWontTellYou& account=BLX-L6FM-89WK-VK8P-FCRBB& data=5c30bd27cc86a8ab0349aaf66deae3c0a9db5675b5c4ba973dd47f37e06157...& nonce=7f3c9082c73a7bd825aa48d23fc138fd05a466700ff9fc3a040bbb29d3a60ee1& Response: { \"decryptedMessage\": \"test message\", \"requestProcessingTime\": 2 } Download Prunable Message Request: https://localhost:2022/nxt? requestType=downloadPrunableMessage& transaction=264609232955144528& retrieve=true Response: The file in binary format. Encrypt To Request: https://localhost:2022/nxt? requestType=encryptTo& secretPhrase=IWontTellYou& recipient=BLX-L6FM-89WK-VK8P-FCRBB& messageToEncrypt=test message& Response: { \"data\": \"5c30bd27cc86a8ab0349aaf66deae3c0a9db5675b5c4ba973dd47f37e06157...\", \"requestProcessingTime\": 48, \"nonce\": \"7f3c9082c73a7bd825aa48d23fc138fd05a466700ff9fc3a040bbb29d3a60ee1\" } Get All Prunable Messages Request: https://localhost:2022/nxt? requestType=getAllPrunableMessages& lastIndex=0 Response: { \"prunableMessages\": [ { \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"sender\": \"15295723609781267838\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"recipient\": \"11580081983047651163\", \"blockTimestamp\": 46382992, \"message\": \"This is a test prunable plain message.\", \"transaction\": \"4628485271017409467\", \"isText\": true, \"transactionTimestamp\": 46382948 } ], \"requestProcessingTime\": 0 } Get Prunable Message Request: https://localhost:2022/nxt? requestType=getPrunableMessage& transaction=16832262845403902696& secretPhrase=secretPhrase Response: { \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"encryptedMessage\": { \"data\": \"ba6baa8361ac5bdb9cb591cee616dc5801a32ddf05b66a4ee527cd8d57b0...\", \"nonce\": \"41f93e32997c70937a005e5b0b42546a1efa9ea9eb012f98d7a92d0c5a8855a4\" }, \"sender\": \"15295723609781267838\", \"decryptedMessage\": \"test prunable encrypted message\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"recipient\": \"11580081983047651163\", \"blockTimestamp\": 46117919, \"requestProcessingTime\": 3, \"transaction\": \"16832262845403902696\", \"encryptedMessageIsText\": true, \"transactionTimestamp\": 46117594, \"isCompressed\": true } Get Prunable Messages Request: https://localhost:2022/nxt? requestType=getPrunableMessages& account=BLX-4VDY-LNVT-LMAY-FMCKA& lastIndex=0 Response: { \"prunableMessages\": [ { \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"encryptedMessage\": { \"data\": \"ba6baa8361ac5bdb9cb591cee616dc5801a32ddf05b66a4ee527cd8d57b0a...\", \"nonce\": \"41f93e32997c70937a005e5b0b42546a1efa9ea9eb012f98d7a92d0c5a8855a4\" }, \"sender\": \"15295723609781267838\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"recipient\": \"11580081983047651163\", \"blockTimestamp\": 46117919, \"transaction\": \"16832262845403902696\", \"isText\": true, \"transactionTimestamp\": 46117594, \"isCompressed\": true } ], \"requestProcessingTime\": 1 } Get Shared Key Request: https://localhost:2022/nxt? requestType=getSharedKey& account=BLX-5MYN-AP7M-NKMH-CRQJZ& secretPhrase=IWontTellYou& nonce=0102030405060708091011121314151617181920212223242526272829303132 Response: { \"sharedKey\": \"927118faa4850afa7fb3ced7b17eb4968ec4f1c0a405b0890552bb54a67d0eba\", \"requestProcessingTime\": 1 } Read Message Request: https://localhost:2022/nxt? requestType=readMessage& transaction=9908575668289607167& secretPhrase=IWontTellYou& Response: { \"requestProcessingTime\": 1, \"message\": \"Test message.\", \"decryptedMessage\": \"Test message (encrypted).\", \"decryptedMessageToSelf\": \"abc123\" } Send Message Request: https://localhost:2022/nxt? requestType=sendMessage& secretPhrase=IWontTellYou& recipient=BLX-4VNQ-RWZC-4WWQ-GVM8S& message=Test Message.& deadline=60 Response: { \"signatureHash\": \"795c58938a50d691f3f2b88bfaf03267236e972e1c068e0a5e11aeb606597f17\", \"unsignedTransactionBytes\": \"01100593ce013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c14...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"e916dbbfec51ca97ae76b1b190d1c74328f74c3c43ed3a06f1ca0ea250116...\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"ff157b8a125582898b5c50d32a62f725602d5197af236fabcd6ec978b6861528\", \"version\": 1, \"ecBlockId\": \"6060075251340574063\", \"signatureHash\": \"795c58938a50d691f3f2b88bfaf03267236e972e1c068e0a5e11aeb606597f17\", \"attachment\": { \"version.Message\": 1, \"messageIsText\": true, \"message\": \"Test message.\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"recipient\": \"17013046603665206934\", \"ecBlockHeight\": 280756, \"deadline\": 60, \"transaction\": \"9908575668289607167\", \"timestamp\": 30315269, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 11379, \"transactionBytes\": \"01100593ce013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"ff157b8a125582898b5c50d32a62f725602d5197af236fabcd6ec978b6861528\", \"transaction\": \"9908575668289607167\" } Verify Prunable Message Request: https://localhost:2022/nxt? requestType=verifyPrunableMessage& message=This is a test prunable plain message. Response: { \"version.PrunablePlainMessage\": 1, \"verify\": true, \"messageIsText\": true, \"messageHash\": \"da99da8026e30d971340ef54803543af3aa48ea215f80bd9375457bad8effb3f\", \"requestProcessingTime\": 1, \"message\": \"This is a test prunable plain message.\" } Asset Exchange Operations Cancel Order Request: https://localhost:2022/nxt? requestType=cancelBidOrder& secretPhrase=IWontTellYou& order=17185236428295897167& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"20264f33a06331f6a8d7c4362d0525aee25e4ef991653f14bbfb1b2beebba433\", \"unsignedTransactionBytes\": \"02153c6ed6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"30cf47942179f5969369699b548f5a3517ef7ff71b337db630ea5f8b6e740...\", \"feeNQT\": \"100000000\", \"type\": 2, \"fullHash\": \"725f441d9f50a9b2e02d780098a827b1015ec902199becd493bfa73a4843ae89\", \"version\": 1, \"ecBlockId\": \"196207598250363138\", \"signatureHash\": \"20264f33a06331f6a8d7c4362d0525aee25e4ef991653f14bbfb1b2beebba433\", \"attachment\": { \"version.BidOrderCancellation\": 1, \"order\": \"17185236428295897167\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 5, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"ecBlockHeight\": 285586, \"deadline\": 60, \"transaction\": \"12873909654136315762\", \"timestamp\": 30830140, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 7640, \"transactionBytes\": \"02153c6ed6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"725f441d9f50a9b2e02d780098a827b1015ec902199becd493bfa73a4843ae89\", \"transaction\": \"12873909654136315762\" } Delete Asset Shares Request: https://localhost:2022/nxt? requestType=deleteAssetShares& asset=5920455660623529270& quantityQNT=100& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60& broadcast=false Response: { \"signatureHash\": \"883599a340375c387e7b27a4f2c37f4ee960760b31e4b1a9c604663c6b84c708\", \"transactionJSON\": { \"senderPublicKey\": \"373522bcd8904f4707472e590cbb67976d40e7af39650ea11cb2be5734cdf30c\", \"signature\": \"b91a664d9ee99399ebba913fa56abea26fbf4b84fe10fa4f76a29a8eae16810e61...\", \"feeNQT\": \"100000000\", \"type\": 2, \"fullHash\": \"8929fa9d30fd38c8811e079835b3959c1a3f8503df8999d5a858831ea6ba7741\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"9535861265974556985\", \"signatureHash\": \"883599a340375c387e7b27a4f2c37f4ee960760b31e4b1a9c604663c6b84c708\", \"attachment\": { \"quantityQNT\": \"100\", \"version.AssetDelete\": 1, \"asset\": \"5920455660623529270\" }, \"senderRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"subtype\": 7, \"amountNQT\": \"0\", \"sender\": \"12745647715474645062\", \"ecBlockHeight\": 757498, \"deadline\": 60, \"transaction\": \"14427559791532059017\", \"timestamp\": 80204814, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"02170ed4c7043c00373522bcd8904f4707472e590cbb67976d40e7a...\", \"broadcasted\": false, \"requestProcessingTime\": 2, \"transactionBytes\": \"02170ed4c7043c00373522bcd8904f4707472e590cbb67976d40e7af39650ea...\", \"fullHash\": \"8929fa9d30fd38c8811e079835b3959c1a3f8503df8999d5a858831ea6ba7741\", \"transaction\": \"14427559791532059017\" } Dividend Payment Request: https://localhost:2022/nxt? requestType=dividendPayment& asset=3517042713515967694& height=161157& amountNQTPerQNT=100000000 Response: { \"signatureHash\": \"5d92fee3570b7b058ace2387f5b4eef4377ea738e6a6c2aabc06bd9f6871e4b4\", \"unsignedTransactionBytes\": \"02160feb0c023c0010f09c34f225d425306e5be55a49469081...\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"61e2398087b078bdba24021d909e937c2d5fe157a09fa3c82d910e7b5843e00cef2...\", \"feeNQT\": \"100000000\", \"type\": 2, \"fullHash\": \"27b52e61813b73fdf9ff3b1bacf3b344d3ed60e8c94db2c9d0518c8483150770\", \"version\": 1, \"ecBlockId\": \"17871828515938613022\", \"signatureHash\": \"5d92fee3570b7b058ace2387f5b4eef4377ea738e6a6c2aabc06bd9f6871e4b4\", \"attachment\": { \"version.DividendPayment\": 1, \"amountNQTPerQNT\": \"100000000\", \"asset\": \"3517042713515967694\", \"height\": 161157 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 6, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 161151, \"deadline\": 60, \"transaction\": \"18263006340784764199\", \"timestamp\": 34401039, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 111, \"transactionBytes\": \"02160feb0c023c0010f09c34f225d425306e5be55a49469081560...\", \"fullHash\": \"27b52e61813b73fdf9ff3b1bacf3b344d3ed60e8c94db2c9d0518c8483150770\", \"transaction\": \"18263006340784764199\" } Get Account Asset Count Request: https://localhost:2022/nxt? requestType=getAccountAssetCount& account=BLX-8N9W-TN4F-YA2S-H5B7R Response: { \"requestProcessingTime\": 1, \"numberOfAssets\": 3 } Get Account Assets Request: https://localhost:2022/nxt? requestType=getAccountAssets& account=BLX-4VNQ-RWZC-4WWQ-GVM8S Response: { \"accountAssets\": [ { \"quantityQNT\": \"68013764\", \"unconfirmedQuantityQNT\": \"68013764\", \"decimals\": 0, \"name\": \"Test\", \"asset\": \"17554243582654188572\" } ], \"requestProcessingTime\": 1 } Get Account Current Order Ids Request: https://localhost:2022/nxt? requestType=getAccountCurrentBidOrderIds& account=BLX-L6FM-89WK-VK8P-FCRBB& asset=17554243582654188572 Response: { \"bidOrderIds\": [ \"17185236428295897167\" ], \"requestProcessingTime\": 4 } Get Account Current Orders Request: https://localhost:2022/nxt? requestType=getAccountCurrentBidOrders& account=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"bidOrders\": [ { \"quantityQNT\": \"1000000\", \"priceNQT\": \"100\", \"accountRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"asset\": \"17554243582654188572\", \"type\": \"bid\", \"account\": \"15323192282528158131\", \"order\": \"17185236428295897167\", \"height\": 285549 } ], \"requestProcessingTime\": 1 } Get All Assets Request: https://localhost:2022/nxt? requestType=getAllAssets& firstIndex=13& lastIndex=13 Response: { \"assets\": [ { \"quantityQNT\": \"2100000000000000\", \"numberOfAccounts\": 31, \"accountRS\": \"BLX-3TKA-UH62-478B-DQU6K\", \"decimals\": 8, \"numberOfTransfers\": 63, \"name\": \"mgwBTC\", \"description\": \"Production Multigateway BTC (mgwBTC) is backed 100% by...\", \"numberOfTrades\": 9, \"asset\": \"17554243582654188572\", \"account\": \"13300069592148796968\" } ], \"requestProcessingTime\": 13 } Get All Open Orders Request: https://localhost:2022/nxt? requestType=getAllOpenBidOrders& firstIndex=123& lastIndex=123 Response: { \"requestProcessingTime\": 5631, \"openOrders\": [ { \"quantityQNT\": \"1000000\", \"priceNQT\": \"101\", \"accountRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"asset\": \"17554243582654188572\", \"type\": \"bid\", \"account\": \"15323192282528158131\", \"order\": \"12743274869785967304\", \"height\": 285577 } ] } Get All Trades Request: https://localhost:2022/nxt? requestType=getAllTrades& lastIndex=0 Response: { \"trades\": [ { \"seller\": \"14968762166783718535\", \"quantityQNT\": \"10000\", \"bidOrder\": \"1166717226538227076\", \"sellerRS\": \"BLX-8F69-W9Z9-8M6Y-ETXGZ\", \"buyer\": \"202478233571806601\", \"priceNQT\": \"19796\", \"askOrder\": \"16222071953599729591\", \"buyerRS\": \"BLX-RMEB-W7TE-28EM-2SUM7\", \"decimals\": 8, \"name\": \"mgwBTC\", \"block\": \"8807797247643599359\", \"asset\": \"4551058913252105307\", \"askOrderHeight\": 285768, \"bidOrderHeight\": 286453, \"tradeType\": \"buy\", \"timestamp\": 30920039, \"height\": 286453 } ], \"requestProcessingTime\": 25840 } Get Asset Request: https://localhost:2022/nxt? requestType=getAsset& asset=17554243582654188572 Response: { \"quantityQNT\": \"2100000000000000\", \"numberOfAccounts\": 31, \"accountRS\": \"BLX-3TKA-UH62-478B-DQU6K\", \"decimals\": 8, \"numberOfTransfers\": 63, \"name\": \"mgwBTC\", \"description\": \"Production Multigateway BTC (mgwBTC) is backed 100% by...\", \"numberOfTrades\": 9, \"requestProcessingTime\": 11, \"asset\": \"17554243582654188572\", \"account\": \"13300069592148796968\" } Get Asset Account Count Request: https://localhost:2022/nxt? requestType=getAssetAccountCount& asset=17554243582654188572 Response: { \"numberOfAccounts\": 38, \"requestProcessingTime\": 14 } Get Asset Accounts Request: https://localhost:2022/nxt? requestType=getAssetAccounts& asset=5539238107226883203 Response: { \"accountAssets\": [ { \"quantityQNT\": \"100000000\", \"accountRS\": \"BLX-JTE5-HB7Y-QPS5-B58MZ\", \"unconfirmedQuantityQNT\": \"100000000\", \"asset\": \"5539238107226883203\", \"account\": \"11514793277306463619\" } ], \"requestProcessingTime\": 19 } Get Asset Deletes Request: https://localhost:2022/nxt? requestType=getAssetDeletes& asset=5920455660623529270 Response: { \"deletes\": [ { \"quantityQNT\": \"1000\", \"assetDelete\": \"16186302132012496205\", \"accountRS\": \"BLX-G885-AKDX-5G2B-BLUCG\", \"asset\": \"5920455660623529270\", \"account\": \"10892890577210644675\", \"height\": 678815, \"timestamp\": 75619271 }, { \"quantityQNT\": \"1\", \"assetDelete\": \"5520627816808994883\", \"accountRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"asset\": \"5920455660623529270\", \"account\": \"12745647715474645062\", \"height\": 513529, \"timestamp\": 65930633 }, { \"quantityQNT\": \"1\", \"assetDelete\": \"14523372185703177675\", \"accountRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"asset\": \"5920455660623529270\", \"account\": \"12745647715474645062\", \"height\": 512164, \"timestamp\": 65851395 } ], \"requestProcessingTime\": 3 } Get Asset Dividends Request: https://localhost:2022/nxt? requestType=getAssetDividends& asset=4348103880042995903& timestamp=105414366 Response: { \"dividends\": [ { \"assetDividend\": \"9638088763182480941\", \"numberOfAccounts\": 391, \"amountNQTPerQNT\": \"15\", \"totalDividend\": \"31399603179510\", \"dividendHeight\": 1332177, \"asset\": \"4348103880042995903\", \"height\": 1332178, \"timestamp\": 111043612 }, { \"assetDividend\": \"15350389444990902579\", \"numberOfAccounts\": 374, \"amountNQTPerQNT\": \"28\", \"totalDividend\": \"51709584601752\", \"dividendHeight\": 1287433, \"asset\": \"4348103880042995903\", \"height\": 1287434, \"timestamp\": 108351797 }, { \"assetDividend\": \"8213383200925147837\", \"numberOfAccounts\": 309, \"amountNQTPerQNT\": \"22\", \"totalDividend\": \"29425292831902\", \"dividendHeight\": 1238568, \"asset\": \"4348103880042995903\", \"height\": 1238569, \"timestamp\": 105414366 } ], \"requestProcessingTime\": 5 } Get Asset Ids Request: https://localhost:2022/nxt? requestType=getAssetIds& firstIndex=15& lastIndex=15 Response: { \"assetIds\": [ \"17554243582654188572\" ], \"requestProcessingTime\": 1 } Get Asset Transfers Request: https://localhost:2022/nxt? requestType=getAssetTransfers& asset=17554243582654188572& lastIndex=0 Response: { \"transfers\": [ { \"quantityQNT\": \"500000\", \"senderRS\": \"BLX-9K6X-4ZQS-PCQN-465T4\", \"assetTransfer\": \"15255934090738722602\", \"sender\": \"2406158154854548637\", \"recipientRS\": \"BLX-YMEM-ERX3-BFUZ-4MQ4P\", \"decimals\": 8, \"recipient\": \"3065494931320556947\", \"name\": \"mgwBTC\", \"asset\": \"17554243582654188572\", \"height\": 287648, \"timestamp\": 31042663 } ], \"requestProcessingTime\": 4 } Get Assets Request: https://localhost:2022/nxt? requestType=getAssets& assets=17554243582654188572 Response: { \"assets\": [ { \"quantityQNT\": \"2100000000000000\", \"numberOfAccounts\": 31, \"accountRS\": \"BLX-3TKA-UH62-478B-DQU6K\", \"decimals\": 8, \"numberOfTransfers\": 63, \"name\": \"mgwBTC\", \"description\": \"Production Multigateway BTC (mgwBTC) is backed 100% by...\", \"numberOfTrades\": 9, \"asset\": \"17554243582654188572\", \"account\": \"13300069592148796968\" } ], \"requestProcessingTime\": 15 } Get Assets By Issuer Request: https://localhost:2022/nxt? requestType=getAssetsByIssuer& account=BLX-DE2F-W76R-GL25-HMFPR& lastIndex=0 Response: { \"assets\": [ [ { \"quantityQNT\": \"10000000000\", \"numberOfAccounts\": 222, \"accountRS\": \"BLX-DE2F-W76R-GL25-HMFPR\", \"decimals\": 4, \"numberOfTransfers\": 278, \"name\": \"NXTprivacy\", \"description\": \"NXTprivacy will contain various privacy related projects...\", \"numberOfTrades\": 456, \"asset\": \"17911762572811467637\", \"account\": \"18146608053740744717\" } ] ], \"requestProcessingTime\": 9 } Get Expected Asset Deletes Request: https://localhost:2022/nxt? requestType=getExpectedAssetDeletes Response: { \"deletes\": [ { \"quantityQNT\": \"1000\", \"assetDelete\": \"16186302132012496205\", \"accountRS\": \"BLX-G885-AKDX-5G2B-BLUCG\", \"asset\": \"5920455660623529270\", \"account\": \"10892890577210644675\" } ], \"requestProcessingTime\": 3 } Get Order Request: https://localhost:2022/nxt? requestType=getAskOrder& order=6044046093672850641 Response: { \"quantityQNT\": \"100\", \"priceNQT\": \"100000000\", \"transactionHeight\": 346634, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"transactionIndex\": 0, \"requestProcessingTime\": 0, \"asset\": \"17091401215301664836\", \"type\": \"ask\", \"account\": \"15295723609781267838\", \"order\": \"6044046093672850641\", \"height\": 346634 } Get Order Ids Request: https://localhost:2022/nxt? requestType=getBidOrderIds& asset=17554243582654188572 Response: { \"bidOrderIds\": [ \"17972270381487138621\", \"8331653287549483600\", \"16386956089071870421\", \"12743274869785967304\", \"3409888667133338290\" ], \"requestProcessingTime\": 1 } Get Orders Request: https://localhost:2022/nxt? requestType=getBidOrders& asset=17554243582654188572& firstIndex=3& lastIndex=3 Response: { \"bidOrders\": [ { \"quantityQNT\": \"1000000\", \"priceNQT\": \"101\", \"accountRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"asset\": \"17554243582654188572\", \"type\": \"bid\", \"account\": \"15323192282528158131\", \"order\": \"12743274869785967304\", \"height\": 285577 } ], \"requestProcessingTime\": 2 } Get Expected Order Cancellations Request: https://localhost:2022/nxt? requestType=getExpectedOrderCancellations Response: { \"orderCancellations\": [ { \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"account\": \"15295723609781267838\", \"order\": \"8404616015717333294\", \"height\": 348793, \"phased\": false } ], \"requestProcessingTime\": 1 } Get Last Trades Request: https://localhost:2022/nxt? requestType=getLastTrades& assets=17091401215301664836 Response: { \"trades\": [ { \"seller\": \"11580081983047651163\", \"quantityQNT\": \"100\", \"bidOrder\": \"12461616895431889058\", \"sellerRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"buyer\": \"15295723609781267838\", \"priceNQT\": \"100000000\", \"askOrder\": \"16690422801364092687\", \"buyerRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"block\": \"9740784167963638799\", \"asset\": \"17091401215301664836\", \"askOrderHeight\": 286247, \"bidOrderHeight\": 286243, \"tradeType\": \"sell\", \"timestamp\": 46115694, \"height\": 286247 } ], \"requestProcessingTime\": 1 } Get Order Trades Request: https://localhost:2022/nxt? requestType=getOrderTrades& askOrder=2769987326979385551& includeAssetInfo=true Response: { \"trades\": [ { \"seller\": \"8069635474378047786\", \"quantityQNT\": \"200\", \"bidOrder\": \"6083013926058683287\", \"sellerRS\": \"BLX-5JBC-QQ8M-UAFJ-8UAZZ\", \"buyer\": \"3617506283101058376\", \"priceNQT\": \"5000000\", \"askOrder\": \"2769987326979385551\", \"buyerRS\": \"BLX-QXCA-TKAH-KK85-5QZE6\", \"decimals\": 0, \"name\": \"TWT\", \"block\": \"17820716559461579006\", \"asset\": \"7496917644161273018\", \"askOrderHeight\": 263896, \"bidOrderHeight\": 265168, \"tradeType\": \"buy\", \"timestamp\": 44288754, \"height\": 265168 } ], \"requestProcessingTime\": 0 } Get Trades Request: https://localhost:2022/nxt? requestType=getTrades& asset=17554243582654188572& lastIndex=0 Response: { \"trades\": [ { \"seller\": \"4012743767778395236\", \"quantityQNT\": \"922082\", \"bidOrder\": \"18332182738291742411\", \"sellerRS\": \"BLX-J356-8B4K-L4DK-533EH\", \"buyer\": \"17013046603665206934\", \"priceNQT\": \"19607\", \"askOrder\": \"5860848661439768841\", \"buyerRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"decimals\": 8, \"name\": \"mgwBTC\", \"block\": \"15627545821108097361\", \"asset\": \"17554243582654188572\", \"askOrderHeight\": 285964, \"bidOrderHeight\": 285821, \"tradeType\": \"sell\", \"timestamp\": 30869573, \"height\": 285964 } ], \"requestProcessingTime\": 0 } Issue Asset Request: https://localhost:2022/nxt? requestType=issueAsset& publicKey=57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c& name=SecretCoin& description=This+is+SecretCoin& quantityQNT=100& deadline=60& feeNQT=100000000000& broad=false Response: { \"unsignedTransactionBytes\": \"021095e5da013c0073080c6a224062660184f10ebb7fb431d459364a12403...\", \"transactionJSON\": { \"senderPublicKey\": \"73080c6a224062660184f10ebb7fb431d459364a12403320c7f601f9d75cc547\", \"feeNQT\": \"100000000000\", \"type\": 2, \"version\": 1, \"ecBlockId\": \"1564408139943737911\", \"attachment\": { \"name\": \"SecretCoin\", \"description\": \"This+is+SecretCoin\", \"quantityQNT\": \"100\", \"version.AssetIssuance\": 1, \"decimals\": 0 }, \"senderRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"17013046603665206934\", \"ecBlockHeight\": 288402, \"deadline\": 60, \"timestamp\": 31122837, \"height\": 2147483647 }, \"broadcasted\": false, \"requestProcessingTime\": 2 } Place Order Request: https://localhost:2022/nxt? requestType=placeBidOrder& secretPhrase=IWontTellYou& asset=17554243582654188572& quantityQNT=1000000& priceNQT=100& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"44028b4ddb46e7d4383331425b79019bb0f004f88ede12a5aa66f05c23a75f03\", \"unsignedTransactionBytes\": \"02135a5ed6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"65713e80be99a927bfa7bb2e9a7b6fbd2f17c226fb956494c68a6d90a8127...\", \"feeNQT\": \"100000000\", \"type\": 2, \"fullHash\": \"4f00aef17a397eee25027e834ca765660e4e3f3f1b162468bdac67b315aeb812\", \"version\": 1, \"ecBlockId\": \"14593256906948324209\", \"signatureHash\": \"44028b4ddb46e7d4383331425b79019bb0f004f88ede12a5aa66f05c23a75f03\", \"attachment\": { \"quantityQNT\": \"1000000\", \"priceNQT\": \"100\", \"asset\": \"17554243582654188572\", \"version.BidOrderPlacement\": 1 }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 3, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"ecBlockHeight\": 285545, \"deadline\": 60, \"transaction\": \"17185236428295897167\", \"timestamp\": 30826074, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 8729, \"transactionBytes\": \"02135a5ed6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143...\", \"fullHash\": \"4f00aef17a397eee25027e834ca765660e4e3f3f1b162468bdac67b315aeb812\", \"transaction\": \"17185236428295897167\" } Search Assets Request: https://localhost:2022/nxt? requestType=searchAssets& query=assets AND production Response: { \"assets\": [ { \"quantityQNT\": \"2100000000000000\", \"numberOfAccounts\": 37, \"accountRS\": \"BLX-3TKA-UH62-478B-DQU6K\", \"decimals\": 8, \"numberOfTransfers\": 84, \"name\": \"mgwBTC\", \"description\": \"Production Multigateway BTC (mgwBTC) is backed 100% by...\", \"numberOfTrades\": 15, \"asset\": \"17554243582654188572\", \"account\": \"13300069592148796968\" } ], \"requestProcessingTime\": 96 } Transfer Asset Request: https://localhost:2022/nxt? requestType=transferAsset& secretPhrase=IWontTellYou& recipient=BLX-4VNQ-RWZC-4WWQ-GVM8S& asset=17554243582654188572& quantityQNT=1000& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"f622557588bc82942984286e431c978e687783b32db6a68a1c554b2e11349751\", \"unsignedTransactionBytes\": \"0211c9ebda013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"33d0fccf1f19d18b4ca97d2636cf62f7a801c07628d1bbb1d6084dc3ca658d...\", \"feeNQT\": \"100000000\", \"type\": 2, \"fullHash\": \"c8f25b15b48fb5efd3341fb369627d00f8fefb59dc18016ba0c482b6de7cad59\", \"version\": 1, \"ecBlockId\": \"3925493493266246517\", \"signatureHash\": \"f622557588bc82942984286e431c978e687783b32db6a68a1c554b2e11349751\", \"attachment\": { \"version.AssetTransfer\": 1, \"quantityQNT\": \"1000\", \"asset\": \"17554243582654188572\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 1, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"recipient\": \"17013046603665206934\", \"ecBlockHeight\": 288416, \"deadline\": 60, \"transaction\": \"17272869949464638152\", \"timestamp\": 31124425, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 4968, \"transactionBytes\": \"0211c9ebda013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473b...\", \"fullHash\": \"c8f25b15b48fb5efd3341fb369627d00f8fefb59dc18016ba0c482b6de7cad59\", \"transaction\": \"17272869949464638152\" } Block Operations Get Block Request: https://localhost:2022/nxt? requestType=getBlock& block=8455642159445842600 Response: { \"previousBlockHash\": \"c0574d7a7b8497373dbead497c2dc7f60fdcfc8c5a9fcb48f7d373acc9bbb099\", \"payloadLength\": 1189, \"totalAmountNQT\": \"100000000\", \"generationSignature\": \"c5098d37267bc71134fc8572a87b4af8727a2e5139d60fe8833fab98af22244a\", \"generator\": \"11693867635361772359\", \"generatorPublicKey\": \"fbb72a280228af5c8c74c7c754a290e1539f839553c00bc560cac7bfdb324a7c\", \"baseTarget\": \"1530224444\", \"payloadHash\": \"633992be640a593ba04e31ca4028deed70bbf47cff333e2a0372a4e2a4aba205\", \"generatorRS\": \"BLX-TWU9-P3E4-HCDM-CQ9L6\", \"nextBlock\": \"5937170741469897491\", \"requestProcessingTime\": 175, \"numberOfTransactions\": 6, \"blockSignature\": \"ff65a82e385c135cf9bd5be0861e9e5d3d3174fbd993e5b7f57935ec4...\", \"transactions\": [ \"15184285173972564233\", \"15200280108574630445\", \"15200507403046301754\", \"15900338016714606285\", \"17881859777840687131\", \"18361738217269620028\" ], \"version\": 3, \"totalFeeNQT\": \"600000000\", \"previousBlock\": \"4005816059437078464\", \"cumulativeDifficulty\": \"10229109959119715\", \"block\": \"8455642159445842600\", \"height\": 275730, \"timestamp\": 29797208 } Get Block Id Request: https://localhost:2022/nxt? requestType=getBlockId& height=12 Response: { \"block\": \"2680262203532249785\", \"requestProcessingTime\": 1 } Get Blocks Request: https://localhost:2022/nxt? requestType=getBlocks& lastIndex=1 Response: { \"blocks\": [ { \"previousBlockHash\": \"f88c75a36317e1795348330cb9a944f33153b517ebdf05d9f3f9a606e997618d\", \"payloadLength\": 981, \"totalAmountNQT\": \"0\", \"generationSignature\": \"02f7462b62270c0028c379d838d3a192cf0b782995f3bb1929a5378d26e7e8a9\", \"generator\": \"2218289317977832095\", \"generatorPublicKey\": \"98ccf5d5173b13e4c9eab2631372f61ce8ba506db559d73b285073a689872e75\", \"baseTarget\": \"151761236\", \"payloadHash\": \"82f8c8ca1f8f2252172ed1e9836d5228432fcb18aecfa7d55a119efcd242321c\", \"generatorRS\": \"BLX-TGNZ-E8VK-69EX-3L9LX\", \"numberOfTransactions\": 5, \"blockSignature\": \"76a3f7f966256c4985262fb4622190b2b9a19b900f6ce443ab7d581e3176c...\", \"transactions\": [ \"10545999940082849455\", \"16751328983055099280\", \"1257496316971695605\", \"2048859884870801838\", \"5105170273384355243\" ], \"version\": 3, \"totalFeeNQT\": \"500000000\", \"previousBlock\": \"8782326465060769016\", \"block\": \"7299310714263322546\", \"height\": 281683, \"timestamp\": 30416681 }, { \"previousBlockHash\": \"edc2d65d24883b9b32c46da4eec3792a69a5ff9a9b1e629c4e7e0224432c87c9\", \"payloadLength\": 0, \"totalAmountNQT\": \"0\", \"generationSignature\": \"8c4944c7a9ef5700d1b89660fdf83bcbd3dbbfbe191fef005d0f248a573816fe\", \"generator\": \"15766845356521829337\", \"generatorPublicKey\": \"11636697faf4ade736cedf6c528bec0142353c4d93fce05cdb818c49e0390422\", \"baseTarget\": \"303522472\", \"payloadHash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\", \"generatorRS\": \"BLX-2EYT-C522-VL6G-FQSMP\", \"nextBlock\": \"7299310714263322546\", \"numberOfTransactions\": 0, \"blockSignature\": \"90464d183ed01cb0930ef527e746eaa092d1558697c369cc9246add5f6eec...\", \"transactions\": [], \"version\": 3, \"totalFeeNQT\": \"0\", \"previousBlock\": \"11185683789279314669\", \"block\": \"8782326465060769016\", \"height\": 281682, \"timestamp\": 30416671 } ], \"requestProcessingTime\": 2 } Get EC Block Request: https://localhost:2022/nxt? requestType=getECBlock Response: { \"ecBlockHeight\": 281777, \"requestProcessingTime\": 2, \"ecBlockId\": \"6565813579609649593\", \"timestamp\": 30427868 } Digital Goods Store Operations DGS Delisting Request: https://localhost:2022/nxt? requestType=dgsDelisting& goods=11813734897437346473 secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"87dd2aa00690acaa5da4e8cd9db6ab94b5ed8bf0f8fe2c2ba6a39c57d3073105\", \"unsignedTransactionBytes\": \"03111852e2013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"39ee52204d0a32c0bbd0e4bc6a6fb52299cd7d16ab74e9a040f857d3b1c3e...\", \"feeNQT\": \"100000000\", \"type\": 3, \"fullHash\": \"40e64c357e240f9b7ca5780e757e34d48a58ae93eeb19e62d020d5719b43e2b6\", \"version\": 1, \"ecBlockId\": \"5345754442518111082\", \"signatureHash\": \"87dd2aa00690acaa5da4e8cd9db6ab94b5ed8bf0f8fe2c2ba6a39c57d3073105\", \"attachment\": { \"version.DigitalGoodsDelisting\": 1, \"goods\": \"11813734897437346473\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 1, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"ecBlockHeight\": 292903, \"deadline\": 60, \"transaction\": \"11173189325008201280\", \"timestamp\": 31609368, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 5188, \"transactionBytes\": \"03111852e2013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"40e64c357e240f9b7ca5780e757e34d48a58ae93eeb19e62d020d5719b43e2b6\", \"transaction\": \"11173189325008201280\" } DGS Delivery Request: https://localhost:2022/nxt? requestType=dgsDelivery& purchase=3723760852542296589& goodsToEncrypt=Download Code.& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"f3f1f1bf30c7a6f5a7776aa23502dfe5240efe0d5c016760f8e8a152c4eb1b1b\", \"unsignedTransactionBytes\": \"0315b20fe1013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"b96c42161ce38177168de5a8906ce747a5415017df5b16cdce1c015cb6e1f10b...\", \"feeNQT\": \"100000000\", \"type\": 3, \"fullHash\": \"349926ea025b627117c05fbe3ff298e97a8efdb07f7ae552b5a91e7112c5b82b\", \"version\": 1, \"ecBlockId\": \"15813950788992376142\", \"signatureHash\": \"f3f1f1bf30c7a6f5a7776aa23502dfe5240efe0d5c016760f8e8a152c4eb1b1b\", \"attachment\": { \"goodsIsText\": true, \"discountNQT\": \"0\", \"purchase\": \"3723760852542296589\", \"goodsData\": \"aef91bfe543844964b0dadc51c6fe4c624b6b0c72c23c5c61f7e626f51e15...\", \"version.DigitalGoodsDelivery\": 1, \"goodsNonce\": \"4cb474ec53a590c6fd20d050c429d009ddefd286b2782eb3a0782ae45c2bbbbd\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 5, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"recipient\": \"7580519603555678830\", \"ecBlockHeight\": 292069, \"deadline\": 60, \"transaction\": \"8170192742079961396\", \"timestamp\": 31526834, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 8832, \"transactionBytes\": \"0315b20fe1013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"349926ea025b627117c05fbe3ff298e97a8efdb07f7ae552b5a91e7112c5b82b\", \"transaction\": \"8170192742079961396\" } DGS Feedback Request: https://localhost:2022/nxt? requestType=dgsFeedback& purchase=10234639413366748292& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60& message=Thank You! Response: { \"signatureHash\": \"bf31e4e3b2037bfe223efd72519e3a2d25cd1e0dc1a62e3eeefe59179e16a7a4\", \"unsignedTransactionBytes\": \"0316a463e2013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"a3ee76ce4bec0328fe5cfc1a2adfc229a8c9959a81b7912664de51156987c...\", \"feeNQT\": \"100000000\", \"type\": 3, \"fullHash\": \"491d94b9031b7a7a32d9ab5d0491b81364941eb080ee9029de58cb6ffa0161f6\", \"version\": 1, \"ecBlockId\": \"5484311742753527844\", \"signatureHash\": \"bf31e4e3b2037bfe223efd72519e3a2d25cd1e0dc1a62e3eeefe59179e16a7a4\", \"attachment\": { \"purchase\": \"10234639413366748292\", \"version.Message\": 1, \"messageIsText\": true, \"version.DigitalGoodsFeedback\": 1, \"message\": \"Thank you!\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 6, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"recipient\": \"7580519603555678830\", \"ecBlockHeight\": 292938, \"deadline\": 60, \"transaction\": \"8825396122598251849\", \"timestamp\": 31613860, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 9343, \"transactionBytes\": \"0316a463e2013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"491d94b9031b7a7a32d9ab5d0491b81364941eb080ee9029de58cb6ffa0161f6\", \"transaction\": \"8825396122598251849\" } 11.4 DGS Listing Request: https://localhost:2022/nxt? requestType=dgsListing& secretPhrase=IWontTellYou& name=Test Product& description=Testing the DGS. tags=test, product, tag, extra& quantity=3& priceNQT=100000000& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"565bc0a6140ae1331cd5db009fbd9da164d8802330939ef40204a9bc343b3149\", \"unsignedTransactionBytes\": \"031092aedf013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"465ed3dfef9a02fc97fc18a6f83bb9f07c285aef41ff78c957d59cda2972ba...\", \"feeNQT\": \"100000000\", \"type\": 3, \"fullHash\": \"a98a63204cd1f2a3304cee79776854f290f0472883c576056fec16a23efa90df\", \"version\": 1, \"ecBlockId\": \"4480409615309425420\", \"signatureHash\": \"565bc0a6140ae1331cd5db009fbd9da164d8802330939ef40204a9bc343b3149\", \"attachment\": { \"priceNQT\": \"100000000\", \"quantity\": 3, \"name\": \"Test Product\", \"description\": \"Testing the DGS.\", \"version.DigitalGoodsListing\": 1, \"tags\": \"test, product, tag, extra\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"ecBlockHeight\": 291240, \"deadline\": 60, \"transaction\": \"11813734897437346473\", \"timestamp\": 31436434, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 8958, \"transactionBytes\": \"031092aedf013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473b...\", \"fullHash\": \"a98a63204cd1f2a3304cee79776854f290f0472883c576056fec16a23efa90df\", \"transaction\": \"11813734897437346473\" } DGS Price Change Request: https://localhost:2022/nxt? requestType=dgsPriceChange& goods=11813734897437346473& priceNQT=200000000& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"aad88476935eda8ca3a9190163b83106e6ca95733ddfa274d29a0378d773cc3c\", \"unsignedTransactionBytes\": \"0312cebbdf013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"533f9c330100cab8a7a0f9375b49a09f6432b0e029660ab715a728ac75e6c2...\", \"feeNQT\": \"100000000\", \"type\": 3, \"fullHash\": \"1964e4fe11f4a00a96c79e274f9da21f64d7fe10ed77a154975b92d3c65f1287\", \"version\": 1, \"ecBlockId\": \"14411471768450948944\", \"signatureHash\": \"aad88476935eda8ca3a9190163b83106e6ca95733ddfa274d29a0378d773cc3c\", \"attachment\": { \"goods\": \"11813734897437346473\", \"priceNQT\": \"200000000\", \"version.DigitalGoodsPriceChange\": 1 }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 2, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"ecBlockHeight\": 291259, \"deadline\": 60, \"transaction\": \"765880294780986393\", \"timestamp\": 31439822, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 6444, \"transactionBytes\": \"0312cebbdf013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"1964e4fe11f4a00a96c79e274f9da21f64d7fe10ed77a154975b92d3c65f1287\", \"transaction\": \"765880294780986393\" } DGS Purchase Request: https://localhost:2022/nxt? requestType=dgsPurchase& goods=1587116104511359906& quantity=1& deliveryDeadlineTimestamp=31800000& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"03e112d8707ae33ec37ff4405f31920c0e67c58439e33033c248b3eaca81d2c3\", \"unsignedTransactionBytes\": \"0314805be2013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"a2739ef63024d9d3c61bebbb2692e7a2092666e13fc380c2e8b29c3a3fc24...\", \"feeNQT\": \"100000000\", \"type\": 3, \"fullHash\": \"84f4ef2d52be088e011e5b7857fbab88665918e0df02102a8333aee53c3bb88b\", \"version\": 1, \"ecBlockId\": \"3186563001195424357\", \"signatureHash\": \"03e112d8707ae33ec37ff4405f31920c0e67c58439e33033c248b3eaca81d2c3\", \"attachment\": { \"goods\": \"1587116104511359906\", \"priceNQT\": \"100000000\", \"quantity\": 1, \"deliveryDeadlineTimestamp\": 31800000, \"version.DigitalGoodsPurchase\": 1 }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 4, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"recipient\": \"7580519603555678830\", \"ecBlockHeight\": 292925, \"deadline\": 60, \"transaction\": \"10234639413366748292\", \"timestamp\": 31611776, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 5536, \"transactionBytes\": \"0314805be2013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"84f4ef2d52be088e011e5b7857fbab88665918e0df02102a8333aee53c3bb88b\", \"transaction\": \"10234639413366748292\" } DGS Quantity Change Request: https://localhost:2022/nxt? requestType=dgsQuantityChange& goods=11813734897437346473& deltaQuantity=-1& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"5c60fc94452980f88423c3a16a74d49209d246d0f7454024c87cc76ea3221500\", \"unsignedTransactionBytes\": \"031334b7df013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"7eaf8e48a780f51aa7e01c01091c9388b72a1bf075dddbd3594d55ad169272...\", \"feeNQT\": \"100000000\", \"type\": 3, \"fullHash\": \"f3cd9046bba3706dd6f63cf387f23c7c29532ff15e3423f57900613c844a646f\", \"version\": 1, \"ecBlockId\": \"14589429051005044326\", \"signatureHash\": \"5c60fc94452980f88423c3a16a74d49209d246d0f7454024c87cc76ea3221500\", \"attachment\": { \"goods\": \"11813734897437346473\", \"version.DigitalGoodsQuantityChange\": 1, \"deltaQuantity\": -1 }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 3, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"ecBlockHeight\": 291249, \"deadline\": 60, \"transaction\": \"7885982972263845363\", \"timestamp\": 31438644, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 7474, \"transactionBytes\": \"031334b7df013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"f3cd9046bba3706dd6f63cf387f23c7c29532ff15e3423f57900613c844a646f\", \"transaction\": \"7885982972263845363\" } DGS Refund Request: https://localhost:2022/nxt? requestType=dgsRefund& purchase=3723760852542296589& refundNQT=100000000& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"dafa980759db6bd6e5f11aa7bdc1cff1bb201be750328c397870f1758cef975c\", \"unsignedTransactionBytes\": \"0317944ee2013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"43a90c1f0dde1bca84623e69b0abe0284883600d7bfb5286b3489a9ee417...\", \"feeNQT\": \"100000000\", \"type\": 3, \"fullHash\": \"64c2af2811da3306f4671002ed1f12655fca1937a0b68164da2a71f3ee63adce\", \"version\": 1, \"ecBlockId\": \"11418000967717599433\", \"signatureHash\": \"dafa980759db6bd6e5f11aa7bdc1cff1bb201be750328c397870f1758cef975c\", \"attachment\": { \"purchase\": \"3723760852542296589\", \"version.DigitalGoodsRefund\": 1, \"refundNQT\": \"100000000\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 7, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"recipient\": \"7580519603555678830\", \"ecBlockHeight\": 292899, \"deadline\": 60, \"transaction\": \"446940555271717476\", \"timestamp\": 31608468, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 10509, \"transactionBytes\": \"0317944ee2013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"64c2af2811da3306f4671002ed1f12655fca1937a0b68164da2a71f3ee63adce\", \"transaction\": \"446940555271717476\" } Get DGS Expired Purchases Request: https://localhost:2022/nxt? requestType=getDGSExpiredPurchases& seller=BLX-XK4R-7VJU-6EQG-7R335 Response: { \"purchases\": [ { \"seller\": \"5873880488492319831\", \"priceNQT\": \"1000000000\", \"quantity\": 1, \"deliveryDeadlineTimestamp\": 44955165, \"buyerRS\": \"BLX-XK4R-7VJU-6EQG-7R335\", \"pending\": false, \"purchase\": \"17272258199467687054\", \"name\": \"MyProduct\", \"goods\": \"4830545483228225683\", \"sellerRS\": \"BLX-XK4R-7VJU-6EQG-7R335\", \"buyer\": \"5873880488492319831\", \"timestamp\": 44397533 } ], \"requestProcessingTime\": 1 } Get DGS Good Request: https://localhost:2022/nxt? requestType=getDGSGood& goods=11813734897437346473 Response: { \"seller\": \"15323192282528158131\", \"quantity\": 3, \"goods\": \"11813734897437346473\", \"description\": \"Testing the DGS.\", \"sellerRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"requestProcessingTime\": 1, \"delisted\": false, \"parsedTags\": [ \"test\", \"product\", \"tag\" ], \"tags\": \"test, product, tag, extra\", \"priceNQT\": \"100000000\", \"numberOfPublicFeedbacks\": 0, \"name\": \"Test Product\", \"numberOfPurchases\": 0, \"timestamp\": 31436434 } Get DGS Goods Request: https://localhost:2022/nxt? requestType=getDGSGoods& seller=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"goods\": [ { \"seller\": \"15323192282528158131\", \"quantity\": 2, \"goods\": \"11813734897437346473\", \"description\": \"Testing the DGS.\", \"sellerRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"delisted\": false, \"parsedTags\": [ \"test\", \"product\", \"tag\" ], \"tags\": \"test, product, tag, extra\", \"priceNQT\": \"200000000\", \"numberOfPublicFeedbacks\": 0, \"name\": \"Test Product\", \"numberOfPurchases\": 0, \"timestamp\": 31436434 } ], \"requestProcessingTime\": 46 } Get DGS Goods Count Request: https://localhost:2022/nxt? requestType=getDGSGoodsCount& seller=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"numberOfGoods\": 1, \"requestProcessingTime\": 2 } Get DGS Goods Purchase Count Request: https://localhost:2022/nxt? requestType=getDGSGoodsPurchaseCount& goods=11813734897437346473 Response: { \"numberOfPurchases\": 1, \"requestProcessingTime\": 1 } Get DGS Goods Purchases Request: https://localhost:2022/nxt? requestType=getDGSGoodsPurchases& goods=11813734897437346473 Response: { \"purchases\": [ { \"seller\": \"15323192282528158131\", \"quantity\": 2, \"pending\": false, \"purchase\": \"3723760852542296589\", \"goods\": \"11813734897437346473\", \"sellerRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"buyer\": \"7580519603555678830\", \"priceNQT\": \"200000000\", \"deliveryDeadlineTimestamp\": 31600000, \"goodsIsText\": false, \"buyerRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"name\": \"Test Product\", \"goodsData\": { \"data\": \"aef91bfe543844964b0dadc51c6fe4c624b6b0c72c23c5c61f7e626f51e15...\", \"nonce\": \"4cb474ec53a590c6fd20d050c429d009ddefd286b2782eb3a0782ae45c2bbbbd\" }, \"timestamp\": 31520720 } ], \"requestProcessingTime\": 305 } Get DGS Pending Purchases Request: https://localhost:2022/nxt? requestType=getDGSPendingPurchases& seller=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"purchases\": [ { \"seller\": \"15323192282528158131\", \"priceNQT\": \"200000000\", \"quantity\": 2, \"deliveryDeadlineTimestamp\": 31600000, \"buyerRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"pending\": true, \"purchase\": \"3723760852542296589\", \"name\": \"Test Product\", \"goods\": \"11813734897437346473\", \"sellerRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"buyer\": \"7580519603555678830\", \"timestamp\": 31520720 } ], \"requestProcessingTime\": 1 } Get DGS Purchase Request: https://localhost:2022/nxt? requestType=getDGSPurchase& purchase=10234639413366748292 Response: { \"seller\": \"7580519603555678830\", \"quantity\": 1, \"feedbackNotes\": [ { \"data\": \"7086a82f4da0708d4eaa9b16d5fc5a25c556596ea29d957d0a1dddd0a482c...\", \"nonce\": \"c521481ce67f7778c41c6716806047d4ea641005392cd7e5ce8d20c49623dad8\" } ], \"publicFeedbacks\": [ \"Thank you again!\", \"Thank you!\" ], \"pending\": false, \"purchase\": \"10234639413366748292\", \"goods\": \"1587116104511359906\", \"sellerRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"requestProcessingTime\": 1, \"buyer\": \"15323192282528158131\", \"priceNQT\": \"100000000\", \"deliveryDeadlineTimestamp\": 31800000, \"goodsIsText\": false, \"buyerRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"discountNQT\": \"100000000\", \"name\": \"Test Product\", \"goodsData\": { \"data\": \"5f4868022381aa9532614a7aae1600e59e84c80571add107dabca891df97e7...\", \"nonce\": \"c017b846de4375741ebc9f3bff894270d218ff4090a66dfd505770ccdc2f54bd\" }, \"timestamp\": 31611776 } Get DGS Purchase Count Request: https://localhost:2022/nxt? requestType=getDGSPurchaseCount& seller=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"numberOfPurchases\": 2, \"requestProcessingTime\": 1 } Get DGS Purchases Request: https://localhost:2022/nxt? requestType=getDGSPurchases& seller=BLX-L6FM-89WK-VK8P-FCRBB& lastIndex=0 Response: { \"purchases\": [ { \"seller\": \"15323192282528158131\", \"priceNQT\": \"200000000\", \"quantity\": 2, \"deliveryDeadlineTimestamp\": 31600000, \"buyerRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"pending\": true, \"purchase\": \"3723760852542296589\", \"name\": \"Test Product\", \"goods\": \"11813734897437346473\", \"sellerRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"buyer\": \"7580519603555678830\", \"timestamp\": 31520720 } ], \"requestProcessingTime\": 1 } Get DGS Tag Count Request: https://localhost:2022/nxt? requestType=getDGSTagCount Response: { \"numberOfTags\": 383, \"requestProcessingTime\": 472 } Get DGS Tags Request: https://localhost:2022/nxt? requestType=getDGSTags& lastIndex=0 Response: { \"requestProcessingTime\": 2, \"tags\": [ { \"inStockCount\": 40, \"tag\": \"domains\", \"totalCount\": 42 } ] } Get DGS Tags Like Request: https://localhost:2022/nxt? requestType=getDGSTagsLike& tagPrefix=item Response: { \"requestProcessingTime\": 1, \"tags\": [ { \"inStockCount\": 1, \"tag\": \"items\", \"totalCount\": 1 } ] } Search DGS Goods Request: https://localhost:2022/nxt? requestType=searchDGSGoods& tag=te?t AND prod\\* Response: { \"goods\": [ { \"seller\": \"7580519603555678830\", \"quantity\": 1, \"goods\": \"1587116104511359906\", \"description\": \"This is a test. Please do not order.\", \"sellerRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"delisted\": false, \"parsedTags\": [ \"test\", \"product\", \"tag\" ], \"tags\": \"test,product,tag\", \"priceNQT\": \"100000000\", \"numberOfPublicFeedbacks\": 1, \"name\": \"Test Product\", \"numberOfPurchases\": 1, \"timestamp\": 31611435 } ], \"requestProcessingTime\": 4 } Forging Operations Start / Stop / Get Forging Request: https://localhost:2022/nxt? requestType=startForging& secretPhrase=IWontTellYou Response: { \"requestProcessingTime\": 1, \"deadline\": 0, \"hitTime\": 0 } Lease Balance Request: https://localhost:2022/nxt? requestType=leaseBalance& period=1440& recipient=BLX-4VNQ-RWZC-4WWQ-GVM8S& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"462590bb85b615ddd34d59a1ffdc452a9baee2088044c1b9eb44298e49158f35\", \"unsignedTransactionBytes\": \"04107977ce013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"4a89702535246fd55bfc4b4691dc4266daa3100e00cdf0caaed57a5ad750da075a...\", \"feeNQT\": \"100000000\", \"type\": 4, \"fullHash\": \"251bcd86057c09bb2d055bbeeb9b67ccae861f75d4aada21b3b79a13db9712e1\", \"version\": 1, \"ecBlockId\": \"6565389899781382679\", \"signatureHash\": \"462590bb85b615ddd34d59a1ffdc452a9baee2088044c1b9eb44298e49158f35\", \"attachment\": { \"version.EffectiveBalanceLeasing\": 1, \"period\": 1440 }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"recipient\": \"17013046603665206934\", \"ecBlockHeight\": 280672, \"deadline\": 60, \"transaction\": \"13477439723061189413\", \"timestamp\": 30308217, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 7340, \"transactionBytes\": \"04107977ce013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473b...\", \"fullHash\": \"251bcd86057c09bb2d055bbeeb9b67ccae861f75d4aada21b3b79a13db9712e1\", \"transaction\": \"13477439723061189413\" } Get Next Block Generators Request: https://localhost:2022/nxt? requestType=getNextBlockGenerators& limit=3 Response: { \"activeCount\": 216, \"lastBlock\": \"10153073870267066931\", \"generators\": [ { \"effectiveBalanceNXT\": 5400786, \"accountRS\": \"BLX-8HNT-4ZTF-ZXH3-7RU38\", \"deadline\": 4, \"account\": \"5982846390354787993\", \"hitTime\": 112224054 }, { \"effectiveBalanceNXT\": 4061204, \"accountRS\": \"BLX-HLNR-4HDK-HQUJ-37545\", \"deadline\": 35, \"account\": \"1263370831364868759\", \"hitTime\": 112224085 }, { \"effectiveBalanceNXT\": 8847921, \"accountRS\": \"BLX-ZEKG-CHYB-N8AR-4TQ3U\", \"deadline\": 52, \"account\": \"3244519536310858286\", \"hitTime\": 112224102 } ], \"requestProcessingTime\": 1, \"timestamp\": 112224050, \"height\": 1351776 } Hallmark Operations Decode Hallmark Request: https://localhost:2022/nxt? requestType=decodeHallmark& hallmark=827ed8cf83bbd36419002759d960a1bec952f2209db8ed3be958... Response: { \"date\": \"2013-12-10\", \"valid\": true, \"accountRS\": \"BLX-FEJ5-H4YB-QD3D-2L3W2\", \"host\": \"nxttyclub.info\", \"weight\": 100, \"requestProcessingTime\": 2, \"account\": \"31580691533050371\" } Mark Host Request: https://localhost:2022/nxt? requestType=markHost& secretPhrase=IWontTellYou& host=iwonttellyou.com& weight=1& date=2014-11-22 Response: { \"hallmark\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c...\", \"requestProcessingTime\": 5 } Monetary System Operations Can Delete Currency Request: https://localhost:2022/nxt? requestType=canDeleteCurrency& account=BLX-2HCZ-6GCJ-2XGV-EDRPH& currency=4923907272718555444 Response: { \"canDelete\": true, \"requestProcessingTime\": 1 } Currency Buy / Sell Request: https://localhost:2022/nxt? requestType=currencyBuy& currency=6520756875632314476& rateNQT=1500000000& units=200& secretPhrase=SECRETPHRASE& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"0471907734d4aae7fc708131726f8660a68e66fe873fa17cab4f0cb3f879243f\", \"unsignedTransactionBytes\": \"051607cb08023c0010f09c34f225d425306e5be55a49469081...\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"dda6c065344827bfdecfee179b22dfee1d5280fa5da5431b012d9ea045a0d80b9d4...\", \"feeNQT\": \"100000000\", \"type\": 5, \"fullHash\": \"d388798c9ecaf2cd28578cfcb8fb7e8f07d308e36e2a5674bb1c7766595b8435\", \"version\": 1, \"ecBlockId\": \"10096636210021430702\", \"signatureHash\": \"0471907734d4aae7fc708131726f8660a68e66fe873fa17cab4f0cb3f879243f\", \"attachment\": { \"currency\": \"6520756875632314476\", \"version.ExchangeSell\": 1, \"units\": \"200\", \"rateNQT\": \"1500000000\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 6, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 162266, \"deadline\": 60, \"transaction\": \"14840146504449624275\", \"timestamp\": 34130695, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 331, \"transactionBytes\": \"051607cb08023c0010f09c34f225d425306e5be55a49469081560...\", \"fullHash\": \"d388798c9ecaf2cd28578cfcb8fb7e8f07d308e36e2a5674bb1c7766595b8435\", \"transaction\": \"14840146504449624275\" } Currency Mint Request: https://localhost:2022/nxt? requestType=currencyMint& currency=9207767346829573996& nonce=-6757092571753666960& units=1& counter=26& secretPhrase=SECRETPHRASE& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"f0e9f3b040890043fbc2d1b235377eb566805419f459184bc9290051bacdf80f\", \"unsignedTransactionBytes\": \"0517655a0c023c0010f09c34f225d425306e5be55a49469081...\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"e961f58250dd256bb5f0628df342beb6ce042765d7cdad8d7598495759d7ec00ad8...\", \"feeNQT\": \"100000000\", \"type\": 5, \"fullHash\": \"05cbe451cdece14bab56c5684d30cd7eb62e45a86136071e90ae26981d4c1fc3\", \"version\": 1, \"ecBlockId\": \"12526333689713738846\", \"signatureHash\": \"f0e9f3b040890043fbc2d1b235377eb566805419f459184bc9290051bacdf80f\", \"attachment\": { \"currency\": \"9207767346829573996\", \"units\": \"1\", \"counter\": \"26\", \"version.CurrencyMinting\": 1, \"nonce\": \"-6757092571753666960\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 7, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 160721, \"deadline\": 60, \"transaction\": \"5467911789190892293\", \"timestamp\": 34364005, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 815, \"transactionBytes\": \"0517655a0c023c0010f09c34f225d425306e5be55a49469081560...\", \"fullHash\": \"05cbe451cdece14bab56c5684d30cd7eb62e45a86136071e90ae26981d4c1fc3\", \"transaction\": \"5467911789190892293\" } Currency Reserve Claim Request: https://localhost:2022/nxt? requestType=currencyReserveClaim& currency=15992040603642022742& units=36 Response: { \"signatureHash\": \"6daef8c9b8653a9b78b64e400c2ab64ea201e9888b8bc54ec6c9a28814b0a69e\", \"unsignedTransactionBytes\": \"0512a7830b023c00169cf83994b0e8c48a152ddc50606d58bd...\", \"transactionJSON\": { \"senderPublicKey\": \"169cf83994b0e8c48a152ddc50606d58bd4b2b85ec2f5bbbaae93d838443df7f\", \"signature\": \"5ab6605aca7a958b10e5f0198660eccd01bff1418f2bf172105ba39e9c911d09709...\", \"feeNQT\": \"100000000\", \"type\": 5, \"fullHash\": \"f32e02362dce767c6f4b069f793f2cd8c6b89bad04847c8abe98d8998cede94f\", \"version\": 1, \"ecBlockId\": \"14980969893438059909\", \"signatureHash\": \"6daef8c9b8653a9b78b64e400c2ab64ea201e9888b8bc54ec6c9a28814b0a69e\", \"attachment\": { \"version.ReserveClaim\": 1, \"currency\": \"15992040603642022742\", \"units\": \"36\" }, \"senderRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"subtype\": 2, \"amountNQT\": \"0\", \"sender\": \"11580081983047651163\", \"ecBlockHeight\": 160064, \"deadline\": 60, \"transaction\": \"8968582401529884403\", \"timestamp\": 34309031, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 7, \"transactionBytes\": \"0512a7830b023c00169cf83994b0e8c48a152ddc50606d58bd4b2...\", \"fullHash\": \"f32e02362dce767c6f4b069f793f2cd8c6b89bad04847c8abe98d8998cede94f\", \"transaction\": \"8968582401529884403\" } Currency Reserve Increase Request: https://localhost:2022/nxt? requestType=currencyReserveIncrease& currency=11847174313362984527 amountPerUnitNQT=40000000 Response: { \"signatureHash\": \"0ba69ec678e0d4c4f94ee576d9520bf13a1c88b87e46c79d937b8f998a4a1f54\", \"unsignedTransactionBytes\": \"05115c930b023c00169cf83994b0e8c48a152ddc50606d58bd...\", \"transactionJSON\": { \"senderPublicKey\": \"169cf83994b0e8c48a152ddc50606d58bd4b2b85ec2f5bbbaae93d838443df7f\", \"signature\": \"01ab2e01e8543321bb93baef1cdfd24335b2f98f4898c0203ebb372f6ea2140f609...\", \"feeNQT\": \"100000000\", \"type\": 5, \"fullHash\": \"0e583d097aa7832ef97f49bf1c43fe6fa26592cd7b60cd1c652b1139719c9404\", \"version\": 1, \"ecBlockId\": \"3894856940593871962\", \"signatureHash\": \"0ba69ec678e0d4c4f94ee576d9520bf13a1c88b87e46c79d937b8f998a4a1f54\", \"attachment\": { \"amountPerUnitNQT\": \"40000000\", \"currency\": \"11847174313362984527\", \"version.ReserveIncrease\": 1 }, \"senderRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"subtype\": 1, \"amountNQT\": \"0\", \"sender\": \"11580081983047651163\", \"ecBlockHeight\": 160118, \"deadline\": 60, \"transaction\": \"3351706690276644878\", \"timestamp\": 34313052, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 7, \"transactionBytes\": \"05115c930b023c00169cf83994b0e8c48a152ddc50606d58bd4b2...\", \"fullHash\": \"0e583d097aa7832ef97f49bf1c43fe6fa26592cd7b60cd1c652b1139719c9404\", \"transaction\": \"3351706690276644878\" } Delete Currency Request: https://localhost:2022/nxt? requestType=deleteCurrency& currency=7103310507724273660& secretPhrase=SECRETPHRASE& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"3f2b029337263728f4d4fed1f774252b06706159659e6ba9116b2d74b67a8435\", \"unsignedTransactionBytes\": \"05189d7208023c0010f09c34f225d425306e5be55a49469081...\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"09c7be5b0742191f3777cc850f9478af21bd42225aec5e0793b57cd188767a0be6f...\", \"feeNQT\": \"100000000\", \"type\": 5, \"fullHash\": \"a877379e3f3713e2f8baaa777c9a48af23d7da74e00301f12a4051dcf747243f\", \"version\": 1, \"ecBlockId\": \"2688066685599408512\", \"signatureHash\": \"3f2b029337263728f4d4fed1f774252b06706159659e6ba9116b2d74b67a8435\", \"attachment\": { \"version.CurrencyDeletion\": 1, \"currency\": \"7103310507724273660\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 8, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 162004, \"deadline\": 60, \"transaction\": \"16290425023506118568\", \"timestamp\": 34108061, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 112, \"transactionBytes\": \"05189d7208023c0010f09c34f225d425306e5be55a49469081...\", \"fullHash\": \"a877379e3f3713e2f8baaa777c9a48af23d7da74e00301f12a4051dcf747243f\", \"transaction\": \"16290425023506118568\" } Get Account Currencies Request: https://localhost:2022/nxt? requestType=getAccountCurrencies& account=BLX-4VDY-LNVT-LMAY-FMCKA Response: { \"accountCurrencies\": [ { \"issuerAccountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"code\": \"MYSTX\", \"unconfirmedUnits\": \"10000\", \"decimals\": 2, \"name\": \"MystcoinX\", \"currency\": \"6520756875632314476\", \"units\": \"10000\", \"issuanceHeight\": 0, \"type\": 1, \"issuerAccount\": \"15295723609781267838\" } ], \"requestProcessingTime\": 1 } Get Account Currency Count Request: https://localhost:2022/nxt? requestType=getAccountCurrencyCount& account=BLX-4VDY-LNVT-LMAY-FMCKA Response: { \"numberOfCurrencies\": 1, \"requestProcessingTime\": 1 } Get Account Exchange Requests Request: https://localhost:2022/nxt? requestType=getAccountExchangeRequests& account=BLX-4VDY-LNVT-LMAY-FMCKA& currency=6520756875632314476 Response: { \"exchangeRequests\": [ { \"issuerAccountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"code\": \"MYSTX\", \"subtype\": 6, \"decimals\": 2, \"name\": \"MystcoinX\", \"units\": \"200\", \"issuanceHeight\": 0, \"type\": 1, \"transaction\": \"14840146504449624275\", \"timestamp\": 34130695, \"rateNQT\": \"1500000000\", \"issuerAccount\": \"15295723609781267838\" } ], \"requestProcessingTime\": 1 } Get Funding Monitor Request: https://localhost:2022/nxt? requestType=getFundingMonitor& property=funding& secretPhrase=IWontTellYou& includeMonitoredAccounts:true Response: { \"requestProcessingTime\": 0, \"monitors\": [ { \"holding\": \"0\", \"amount\": \"1000000000\", \"monitoredAccounts\": [ { \"amount\": \"1000000000\", \"accountRS\": \"BLX-5MYN-AP7M-NKMH-CRQJZ\", \"threshold\": \"15000000000\", \"interval\": 10, \"account\": \"12664921794733526996\" }, { \"amount\": \"1000000000\", \"accountRS\": \"BLX-G885-AKDX-5G2B-BLUCG\", \"threshold\": \"15000000000\", \"interval\": 10, \"account\": \"10892890577210644675\" } ], \"holdingType\": 0, \"accountRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"property\": \"funding\", \"threshold\": \"15000000000\", \"interval\": 10, \"account\": \"12745647715474645062\" } ] } Get All Currencies Request: https://localhost:2022/nxt? requestType=getAllCurrencies& firstIndex=2& lastIndex=2 Response: { \"requestProcessingTime\": 3, \"currencies\": [ { \"initialSupply\": \"10000\", \"currentReservePerUnitNQT\": \"0\", \"types\": [ \"EXCHANGEABLE\" ], \"code\": \"MYSTX\", \"creationHeight\": 162067, \"minDifficulty\": 0, \"numberOfTransfers\": 0, \"description\": \"Exchangeable\", \"minReservePerUnitNQT\": \"0\", \"currentSupply\": \"10000\", \"issuanceHeight\": 0, \"type\": 1, \"reserveSupply\": \"0\", \"maxDifficulty\": 0, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"decimals\": 2, \"name\": \"MystcoinX\", \"numberOfExchanges\": 12, \"currency\": \"6520756875632314476\", \"maxSupply\": \"10000\", \"account\": \"15295723609781267838\", \"algorithm\": 0 } ] } Get All Exchanges Request: https://localhost:2022/nxt? requestType=getAllExchanges& firstIndex=7& lastIndex=7 Response: { \"exchanges\": [ { \"issuerAccountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"seller\": \"15295723609781267838\", \"code\": \"MYSTX\", \"sellerRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"units\": \"5000\", \"issuanceHeight\": 0, \"type\": 1, \"rateNQT\": \"10000000\", \"buyer\": \"11580081983047651163\", \"offer\": \"17204924627068821879\", \"buyerRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"decimals\": 2, \"name\": \"MystcoinX\", \"currency\": \"6520756875632314476\", \"block\": \"4816799421151726903\", \"transaction\": \"2086609620693258113\", \"timestamp\": 34206117, \"height\": 163202, \"issuerAccount\": \"15295723609781267838\" } ], \"requestProcessingTime\": 1 } Get Available To Buy Request: https://localhost:2022/nxt? requestType=getAvailableToBuy& currency=4855695375693311301& units=1 Response: { \"amountNQT\": \"1087\", \"units\": \"1\", \"requestProcessingTime\": 0, \"rateNQT\": \"1087\" } Get Buy / Sell Offers Request: https://localhost:2022/nxt? requestType=getSellOffers& currency=6520756875632314476 Response: { \"offers\": [ { \"offer\": \"4813417617929273983\", \"expirationHeight\": 163125, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"limit\": \"1000\", \"currency\": \"6520756875632314476\", \"supply\": \"500\", \"account\": \"15295723609781267838\", \"height\": 163110, \"rateNQT\": \"20000000\" } ], \"requestProcessingTime\": 1 } Get Currencies Request: https://localhost:2022/nxt? requestType=getCurrencies& currencies=6520756875632314476 Response: { \"requestProcessingTime\": 3, \"currencies\": [ { \"initialSupply\": \"10000\", \"currentReservePerUnitNQT\": \"0\", \"types\": [ \"EXCHANGEABLE\" ], \"code\": \"MYSTX\", \"creationHeight\": 162067, \"minDifficulty\": 0, \"numberOfTransfers\": 0, \"description\": \"Exchangeable\", \"minReservePerUnitNQT\": \"0\", \"currentSupply\": \"10000\", \"issuanceHeight\": 0, \"type\": 1, \"reserveSupply\": \"0\", \"maxDifficulty\": 0, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"decimals\": 2, \"name\": \"MystcoinX\", \"numberOfExchanges\": 12, \"currency\": \"6520756875632314476\", \"maxSupply\": \"10000\", \"account\": \"15295723609781267838\", \"algorithm\": 0 } ] } Get Currencies By Issuer Request: https://localhost:2022/nxt? requestType=getCurrenciesByIssuer& account=BLX-4VDY-LNVT-LMAY-FMCKA Response: { \"requestProcessingTime\": 334, \"currencies\": [ [ { \"initialSupply\": \"10000\", \"currentReservePerUnitNQT\": \"0\", \"types\": [ \"EXCHANGEABLE\" ], \"code\": \"MYSTX\", \"creationHeight\": 162067, \"minDifficulty\": 0, \"numberOfTransfers\": 0, \"description\": \"Exchangeable\", \"minReservePerUnitNQT\": \"0\", \"currentSupply\": \"10000\", \"issuanceHeight\": 0, \"type\": 1, \"reserveSupply\": \"0\", \"maxDifficulty\": 0, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"decimals\": 2, \"name\": \"MystcoinX\", \"numberOfExchanges\": 12, \"currency\": \"6520756875632314476\", \"maxSupply\": \"10000\", \"account\": \"15295723609781267838\", \"algorithm\": 0 } ] ] } Get Currency Request: https://localhost:2022/nxt? requestType=getCurrency& code=MYSTX Response: { \"initialSupply\": \"10000\", \"currentReservePerUnitNQT\": \"0\", \"types\": [ \"EXCHANGEABLE\" ], \"code\": \"MYSTX\", \"creationHeight\": 162067, \"minDifficulty\": 0, \"numberOfTransfers\": 0, \"description\": \"Exchangeable\", \"minReservePerUnitNQT\": \"0\", \"currentSupply\": \"10000\", \"issuanceHeight\": 0, \"requestProcessingTime\": 0, \"type\": 1, \"reserveSupply\": \"0\", \"maxDifficulty\": 0, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"decimals\": 2, \"name\": \"MystcoinX\", \"numberOfExchanges\": 0, \"currency\": \"6520756875632314476\", \"maxSupply\": \"10000\", \"account\": \"15295723609781267838\", \"algorithm\": 0 } Get Currency Account Count Request: https://localhost:2022/nxt? requestType=getCurrencyAccountCount& currency=6520756875632314476 Response: { \"numberOfAccounts\": 2, \"requestProcessingTime\": 1 } Get Currency Accounts Request: https://localhost:2022/nxt? requestType=getCurrencyAccounts& currency=6520756875632314476 Response: { \"accountCurrencies\": [ { \"unconfirmedUnits\": \"9000\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"currency\": \"6520756875632314476\", \"units\": \"9000\", \"account\": \"15295723609781267838\" }, { \"unconfirmedUnits\": \"1000\", \"accountRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"currency\": \"6520756875632314476\", \"units\": \"1000\", \"account\": \"11580081983047651163\" } ], \"requestProcessingTime\": 1 } Get Currency Founders Request: https://localhost:2022/nxt? requestType=getCurrencyFounders& currency=16165836410580103964 Response: { \"founders\": [ { \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"amountPerUnitNQT\": \"100000000\", \"currency\": \"16165836410580103964\", \"account\": \"15295723609781267838\" } ], \"requestProcessingTime\": 1 } Get Currency Ids Request: https://localhost:2022/nxt? requestType=getCurrencyIds& lastIndex=2 Response: { \"currencyIds\": [ \"3543596621551215845\", \"6520756875632314476\", \"10304209318415949524\" ], \"requestProcessingTime\": 2 } Get Currency Transfers Request: https://localhost:2022/nxt? requestType=getCurrencyTransfers& currency=9387514940677621191 Response: { \"transfers\": [ { \"issuerAccountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"code\": \"MYSTX\", \"units\": \"10\", \"issuanceHeight\": 0, \"type\": 1, \"transfer\": \"12208608533071682262\", \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"sender\": \"15295723609781267838\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"decimals\": 2, \"recipient\": \"11580081983047651163\", \"name\": \"MystcoinX\", \"currency\": \"9387514940677621191\", \"issuerAccount\": \"15295723609781267838\", \"height\": 159732, \"timestamp\": 34280949 } ], \"requestProcessingTime\": 0 } Get Exchanges Request: https://localhost:2022/nxt? requestType=getExchanges& currency=6520756875632314476 Response: { \"exchanges\": [ { \"issuerAccountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"seller\": \"15295723609781267838\", \"code\": \"MYSTX\", \"sellerRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"units\": \"1\", \"issuanceHeight\": 0, \"type\": 1, \"rateNQT\": \"1500000000\", \"buyer\": \"11580081983047651163\", \"offer\": \"7762792906174207279\", \"buyerRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"decimals\": 2, \"name\": \"MystcoinX\", \"currency\": \"6520756875632314476\", \"block\": \"2329341955641682831\", \"transaction\": \"12589829502215822061\", \"timestamp\": 34137058, \"height\": 162356, \"issuerAccount\": \"15295723609781267838\" } ], \"requestProcessingTime\": 0 } Get Exchanges By Exchange Request Request: https://localhost:2022/nxt? requestType=getExchangesByExchangeRequest& transaction=12589829502215822061 Response: { \"exchanges\": [ { \"issuerAccountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"seller\": \"15295723609781267838\", \"code\": \"MYSTX\", \"sellerRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"units\": \"1\", \"issuanceHeight\": 0, \"type\": 1, \"rateNQT\": \"1500000000\", \"buyer\": \"11580081983047651163\", \"offer\": \"7762792906174207279\", \"buyerRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"decimals\": 2, \"name\": \"MystcoinX\", \"currency\": \"6520756875632314476\", \"block\": \"2329341955641682831\", \"transaction\": \"12589829502215822061\", \"timestamp\": 34137058, \"height\": 162356, \"issuerAccount\": \"15295723609781267838\" } ], \"requestProcessingTime\": 1 } Get Exchanges By Offer Request: https://localhost:2022/nxt? requestType=getExchangesByOffer& offer=7762792906174207279 Response: { \"exchanges\": [ { \"issuerAccountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"seller\": \"15295723609781267838\", \"code\": \"MYSTX\", \"sellerRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"units\": \"1\", \"issuanceHeight\": 0, \"type\": 1, \"rateNQT\": \"1500000000\", \"buyer\": \"11580081983047651163\", \"offer\": \"7762792906174207279\", \"buyerRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"decimals\": 2, \"name\": \"MystcoinX\", \"currency\": \"6520756875632314476\", \"block\": \"2329341955641682831\", \"transaction\": \"12589829502215822061\", \"timestamp\": 34137058, \"height\": 162356, \"issuerAccount\": \"15295723609781267838\" } ], \"requestProcessingTime\": 1 } Get Last Exchanges Request: https://localhost:2022/nxt? requestType=getLastExchanges& currencies=12366259387060174981 Response: { \"exchanges\": [ { \"offer\": \"1659323201112235372\", \"seller\": \"15295723609781267838\", \"buyerRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"sellerRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"currency\": \"12366259387060174981\", \"block\": \"15911141024340031754\", \"units\": \"2\", \"transaction\": \"13926698078551037914\", \"timestamp\": 35547397, \"rateNQT\": \"100000000\", \"buyer\": \"15295723609781267838\", \"height\": 167709 } ], \"requestProcessingTime\": 0 } Get Minting Target Request: https://localhost:2022/nxt? requestType=getMintingTarget& currency=9207767346829573996& account=BLX-4VDY-LNVT-LMAY-FMCKA& units=1 Response: { \"difficulty\": \"1024\", \"targetBytes\": \"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3f00\", \"currency\": \"9207767346829573996\", \"counter\": 0, \"requestProcessingTime\": 1 } Get Offer Request: https://localhost:2022/nxt? requestType=getOffer& offer=4813417617929273983 Response: { \"sellOffer\": { \"offer\": \"4813417617929273983\", \"expirationHeight\": 163125, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"limit\": \"1000\", \"currency\": \"6520756875632314476\", \"supply\": \"500\", \"account\": \"15295723609781267838\", \"height\": 163110, \"rateNQT\": \"20000000\" }, \"buyOffer\": { \"offer\": \"4813417617929273983\", \"expirationHeight\": 163125, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"limit\": \"1000\", \"currency\": \"6520756875632314476\", \"supply\": \"500\", \"account\": \"15295723609781267838\", \"height\": 163110, \"rateNQT\": \"10000000\" }, \"requestProcessingTime\": 0 } Issue Currency Request: https://localhost:2022/nxt? requestType=issueCurrency& name=MystcoinX& code=MYSTX& description=Exchangeable type=1& initialSupply=10000& maxSupply=10000& decimals=2& secretPhrase=SECRETPHRASE& feeNQT=4000000000& deadline=60 Response: { \"signatureHash\": \"c5ec66dd60bcc13fc0fe2cb617b4d7a05e7ef6360aacc591c911969785361491\", \"unsignedTransactionBytes\": \"05100f8308023c0010f09c34f225d425306e5be55a49469081...\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"da27e4bead869d0e96fb9370f0afcd0c49eb17b7da503705384239d9abaec209733...\", \"feeNQT\": \"4000000000\", \"type\": 5, \"fullHash\": \"6c08c076d4617e5a4be6f027c9b3e47ddb0e92fab87032d631546051dbdbfe8c\", \"version\": 1, \"ecBlockId\": \"2004481009157728964\", \"signatureHash\": \"c5ec66dd60bcc13fc0fe2cb617b4d7a05e7ef6360aacc591c911969785361491\", \"attachment\": { \"initialSupply\": \"10000\", \"code\": \"MYSTX\", \"minDifficulty\": 0, \"ruleset\": 0, \"description\": \"Exchangeable\", \"minReservePerUnitNQT\": \"0\", \"issuanceHeight\": 0, \"type\": 1, \"reserveSupply\": \"0\", \"version.CurrencyIssuance\": 1, \"maxDifficulty\": 0, \"decimals\": 2, \"name\": \"MystcoinX\", \"maxSupply\": \"10000\", \"algorithm\": 0 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 162060, \"deadline\": 60, \"transaction\": \"6520756875632314476\", \"timestamp\": 34112271, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 53, \"transactionBytes\": \"05100f8308023c0010f09c34f225d425306e5be55a49469081560...\", \"fullHash\": \"6c08c076d4617e5a4be6f027c9b3e47ddb0e92fab87032d631546051dbdbfe8c\", \"transaction\": \"6520756875632314476\" } Publish Exchange Offer Request: https://localhost:2022/nxt? requestType=publishExchangeOffer& currency=6520756875632314476& buyRateNQT=10000000& sellRateNQT=20000000& totalBuyLimit=1000& totalSellLimit=1000& initialBuySupply=500& initialSellSupply=500& expirationHeight=163080& secretPhrase=SECRETPHRASE& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"6fd60fcbc6e7022f12adad82a76c0534d2f79a569b9857b02328bf7573cf93f8\", \"unsignedTransactionBytes\": \"0514d7c409023c0010f09c34f225d425306e5be55a49469081...\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"b204a7d9622ac6b99936447a4314fac1c2f0c67e45f4021f4b1949755c081802a34...\", \"feeNQT\": \"100000000\", \"type\": 5, \"fullHash\": \"fccb2c6200a04bbce82b9e623051b8d8ed9d519dbb0a12ec5a354c842da9a664\", \"version\": 1, \"ecBlockId\": \"6813726597245349906\", \"signatureHash\": \"6fd60fcbc6e7022f12adad82a76c0534d2f79a569b9857b02328bf7573cf93f8\", \"attachment\": { \"totalSellLimit\": \"1000\", \"buyRateNQT\": \"10000000\", \"initialSellSupply\": \"500\", \"totalBuyLimit\": \"1000\", \"expirationHeight\": 163080, \"sellRateNQT\": \"20000000\", \"version.PublishExchangeOffer\": 1, \"currency\": \"6520756875632314476\", \"initialBuySupply\": \"500\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 4, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 163049, \"deadline\": 60, \"transaction\": \"13568114225891298300\", \"timestamp\": 34194647, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 54, \"transactionBytes\": \"0514d7c409023c0010f09c34f225d425306e5be55a4946908156072...\", \"transaction\": \"13568114225891298300\" } Search Currencies Request: https://localhost:2022/nxt? requestType=searchCurrencies& query=MYST? Response: { \"requestProcessingTime\": 5, \"currencies\": [ { \"initialSupply\": \"10000\", \"currentReservePerUnitNQT\": \"0\", \"types\": [ \"EXCHANGEABLE\" ], \"code\": \"MYSTX\", \"creationHeight\": 159726, \"minDifficulty\": 0, \"numberOfTransfers\": 3, \"description\": \"Exchangeable\", \"minReservePerUnitNQT\": \"0\", \"currentSupply\": \"10000\", \"issuanceHeight\": 0, \"type\": 1, \"reserveSupply\": \"0\", \"maxDifficulty\": 0, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"decimals\": 2, \"name\": \"MystcoinX\", \"numberOfExchanges\": 0, \"currency\": \"9387514940677621191\", \"maxSupply\": \"10000\", \"account\": \"15295723609781267838\", \"algorithm\": 0 } ] } Transfer Currency Request: https://localhost:2022/nxt? requestType=transferCurrency& recipient=BLX-BMUV-8QQR-47VK-CR7F3& currency=9387514940677621191& units=10 Response: { \"signatureHash\": \"eda8f238d164074170ddb8163d7d71f08062f1f1a51712f05670a670e64e5eff\", \"unsignedTransactionBytes\": \"0513ad150b023c0010f09c34f225d425306e5be55a49469081...\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"7629cba6e776685c9e134f8d96c54a5bcad6915c433f833b1ca792c69e75ee0ac6f...\", \"feeNQT\": \"100000000\", \"type\": 5, \"fullHash\": \"d65a8adfc6b06da98ce50bb36d52305a8c9300b8defbeed9f2582628d9e258f0\", \"version\": 1, \"ecBlockId\": \"13770841487927223834\", \"signatureHash\": \"eda8f238d164074170ddb8163d7d71f08062f1f1a51712f05670a670e64e5eff\", \"attachment\": { \"currency\": \"9387514940677621191\", \"version.CurrencyTransfer\": 1, \"units\": \"10\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 3, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"recipient\": \"11580081983047651163\", \"ecBlockHeight\": 159721, \"deadline\": 60, \"transaction\": \"12208608533071682262\", \"timestamp\": 34280877, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 8, \"transactionBytes\": \"0513ad150b023c0010f09c34f225d425306e5be55a49469081560...\", \"fullHash\": \"d65a8adfc6b06da98ce50bb36d52305a8c9300b8defbeed9f2582628d9e258f0\", \"transaction\": \"12208608533071682262\" } Networking Operations Add Peer Request: https://localhost:2022/nxt? requestType=addPeer& peer=nxt9.webice.ru Response: { \"hallmark\": \"4a8fd0f2af5f511e041ad7bee1625ae3a711ddcc056c60cf7ab3523e2c99092f0e006e...\", \"downloadedVolume\": 155414, \"address\": \"23.95.51.154\", \"weight\": 19829, \"uploadedVolume\": 63532, \"requestProcessingTime\": 478, \"version\": \"1.4.8\", \"platform\": \"webice.ru\", \"lastUpdated\": 37014605, \"blacklisted\": false, \"announcedAddress\": \"nxt9.webice.ru\", \"application\": \"NRS\", \"state\": 1, \"shareAddress\": true } Blacklist API Proxy Peer Request: https://localhost:2022/nxt? requestType=blacklistAPIProxyPeer& peer=52.0.72.67 Response: { \"requestProcessingTime\": 24, \"done\": true } Blacklist Peer Request: https://localhost:2022/nxt? requestType=blacklistPeer& peer=nxt9.webice.ru Response: { \"requestProcessingTime\": 0, \"done\": true } Get Inbound Peers Request: https://localhost:2022/nxt? requestType=getInboundPeers Response: { \"peers\": [], \"requestProcessingTime\": 1 } Get My Info Request: https://localhost:2022/nxt? requestType=getMyInfo Response: { \"address\": \"127.0.0.1\", \"host\": \"127.0.0.1\", \"requestProcessingTime\": 1 } Get Peer Request: https://localhost:2022/nxt? requestType=getPeer& peer=nxtx.ru Response: { \"hallmark\": \"5f107c33097fc8241f55b9eb23615fe80ed3f87c87dc8c23ed6a08ab9273417a07006...\", \"downloadedVolume\": 352, \"address\": \"188.226.174.169\", \"inbound\": false, \"weight\": 53, \"uploadedVolume\": 2165, \"requestProcessingTime\": 30, \"version\": \"1.5.11\", \"platform\": \"VPS\", \"inboundWebSocket\": false, \"lastUpdated\": 48540348, \"blacklisted\": false, \"announcedAddress\": \"nxtx.ru\", \"application\": \"NRS\", \"port\": 7874, \"outboundWebSocket\": true, \"lastConnectAttempt\": 48540348, \"state\": 1, \"shareAddress\": true } Get Peers Request: https://localhost:2022/nxt? requestType=getPeers& state=DISCONNECTED Response: { \"peers\": [ \"198.50.146.93\", \"213.46.57.77\" ], \"requestProcessingTime\": 1 } Set API Proxy Peer Request: https://localhost:2022/nxt? requestType=setAPIProxyPeer& peer=163.172.154.74 Response: { \"downloadedVolume\":6176, \"address\":\"104.223.53.14\", \"inbound\":false, \"blockchainState\":\"UP\\_TO\\_DATE\", \"weight\":0, \"uploadedVolume\":323, \"services\":[ \"HALLMARK\",\"PRUNABLE\",\"API\",\"API\\_SSL\",\"CORS\" ], \"requestProcessingTime\":77, \"version\":\"1.11.5\", \"platform\":\"BLX-TGFQ-U33C-C37U-CMKWF\", \"inboundWebSocket\":false, \"apiSSLPort\":7878, \"lastUpdated\":112610887, \"blacklisted\":false, \"announcedAddress\":\"104.223.53.14\", \"apiPort\":2022, \"application\":\"NRS\", \"port\":7874, \"outboundWebSocket\":true, \"lastConnectAttempt\":112610887, \"state\":1, \"shareAddress\":true } Phasing Operations Approve Transaction Request: https://localhost:2022/nxt? requestType=approveTransaction& transactionFullHash=5016cc59b0665675f00513e8c647288e0a668a78c4964c84d0de8f768b89060a& revealedSecretText=secret& secretPhrase=secretPhrase& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"db429ccecd7d13b54b43cf9db7656cef6df6152c60e626b393000ed00a652c95\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"380e1a94e40d58e9382aa742ca998373e27c5d30890d91a74d83bfead849e507e93c51...\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"2bb80af156e70067f509df9ad5a88b687040cff4a8c778c69aef77863d3d15ef\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"704052112466096836\", \"signatureHash\": \"db429ccecd7d13b54b43cf9db7656cef6df6152c60e626b393000ed00a652c95\", \"attachment\": { \"transactionFullHashes\": [ \"5016cc59b0665675f00513e8c647288e0a668a78c4964c84d0de8f768b89060a\" ], \"version.PhasingVoteCasting\": 1, \"revealedSecret\": \"736563726574\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 9, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 262493, \"deadline\": 60, \"transaction\": \"7422186546503792683\", \"timestamp\": 43965004, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"01194cda9e023c0010f09c34f225d425306e5be55a494690...\", \"broadcasted\": true, \"requestProcessingTime\": 20, \"transactionBytes\": \"01194cda9e023c0010f09c34f225d425306e5be55a4946908156072a...\", \"fullHash\": \"2bb80af156e70067f509df9ad5a88b687040cff4a8c778c69aef77863d3d15ef\", \"transaction\": \"7422186546503792683\" } Create Phasing Poll Request: https://localhost:2022/nxt? requestType=sendMoney& recipient=BLX-BMUV-8QQR-47VK-CR7F3& secretPhrase=secretPhrase& feeNQT=200000000& deadline=60& phased=true& phasingFinishHeight=261550& phasingVotingModel=0& phasingQuorum=2 Response: { \"signatureHash\": \"df6c2dfcaf17f83256cfe388f408e091c08f208a060d54d1fbdb407ffdca121c\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"418a5453329d6c8d29b1b49dff30653a7f1e66992cece404d8ae997413deaa015b749a...\", \"feeNQT\": \"200000000\", \"type\": 0, \"fullHash\": \"6fd876512477ef4fab089ec2ffa084d6db75ba3cd0cef2541675515470dca374\", \"version\": 1, \"phased\": true, \"ecBlockId\": \"17522485785088843392\", \"signatureHash\": \"df6c2dfcaf17f83256cfe388f408e091c08f208a060d54d1fbdb407ffdca121c\", \"attachment\": { \"phasingFinishHeight\": 261550, \"phasingHolding\": \"0\", \"phasingQuorum\": \"2\", \"version.Phasing\": 1, \"phasingMinBalance\": \"0\", \"phasingMinBalanceModel\": 0, \"version.OrdinaryPayment\": 0, \"phasingVotingModel\": 0 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"2000000000\", \"sender\": \"15295723609781267838\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"recipient\": \"11580081983047651163\", \"ecBlockHeight\": 261454, \"deadline\": 60, \"transaction\": \"5759953446299424879\", \"timestamp\": 43874749, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"0010bd799d023c0010f09c34f225d425306e5be55a494690...\", \"broadcasted\": true, \"requestProcessingTime\": 760, \"transactionBytes\": \"0010bd799d023c0010f09c34f225d425306e5be55a4946908156072a...\", \"fullHash\": \"6fd876512477ef4fab089ec2ffa084d6db75ba3cd0cef2541675515470dca374\", \"transaction\": \"5759953446299424879\" } Get Account Phased Transaction Count Request: https://localhost:2022/nxt? requestType=getAccountPhasedTransactionCount& account=15295723609781267838 Response: { \"requestProcessingTime\": 1, \"numberOfPhasedTransactions\": 3 } Get Account Phased Transactions Request: https://localhost:2022/nxt? requestType=getAccountPhasedTransactions& account=15295723609781267838& lastIndex=0 Response: { \"requestProcessingTime\": 2, \"transactions\": [ { \"signature\": \"803d3fad7076bfe3f48a8ced40bb7075539858bf2b9d23b7653671a7204e6108234d...\", \"transactionIndex\": 0, \"type\": 0, \"phased\": true, \"ecBlockId\": \"14167949999961480077\", \"signatureHash\": \"693b18675d813dcc2de1a889fd919d0c4a0eaa679df0b0f8b0ec703bc2e278d4\", \"attachment\": { \"phasingFinishHeight\": 262450, \"phasingHolding\": \"17091401215301664836\", \"phasingQuorum\": \"500\", \"version.Phasing\": 1, \"phasingMinBalance\": \"100\", \"phasingMinBalanceModel\": 2, \"version.OrdinaryPayment\": 0, \"phasingVotingModel\": 2 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"500000000\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"block\": \"11015494088798322289\", \"blockTimestamp\": 43952022, \"deadline\": 60, \"timestamp\": 43957682, \"height\": 262418, \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"feeNQT\": \"2100000000\", \"confirmations\": 27, \"fullHash\": \"e57462c46447f8bd7a0bafd9ab65bde8743ca6c13213185271d7ea6c48118861\", \"version\": 1, \"sender\": \"15295723609781267838\", \"recipient\": \"11580081983047651163\", \"ecBlockHeight\": 262409, \"transaction\": \"13688769565509711077\" } ] } Get Asset Phased Transactions Request: https://localhost:2022/nxt? requestType=getAssetPhasedTransactions& asset=17091401215301664836 Response: { \"requestProcessingTime\": 2, \"transactions\": [ { \"signature\": \"803d3fad7076bfe3f48a8ced40bb7075539858bf2b9d23b7653671a7204e6108234d...\", \"transactionIndex\": 0, \"type\": 0, \"phased\": true, \"ecBlockId\": \"14167949999961480077\", \"signatureHash\": \"693b18675d813dcc2de1a889fd919d0c4a0eaa679df0b0f8b0ec703bc2e278d4\", \"attachment\": { \"phasingFinishHeight\": 262450, \"phasingHolding\": \"\", \"phasingQuorum\": \"500\", \"version.Phasing\": 1, \"phasingMinBalance\": \"100\", \"phasingMinBalanceModel\": 2, \"version.OrdinaryPayment\": 0, \"phasingVotingModel\": 2 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"500000000\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"block\": \"11015494088798322289\", \"blockTimestamp\": 43952022, \"deadline\": 60, \"timestamp\": 43957682, \"height\": 262418, \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"feeNQT\": \"2100000000\", \"confirmations\": 27, \"fullHash\": \"e57462c46447f8bd7a0bafd9ab65bde8743ca6c13213185271d7ea6c48118861\", \"version\": 1, \"sender\": \"15295723609781267838\", \"recipient\": \"11580081983047651163\", \"ecBlockHeight\": 262409, \"transaction\": \"13688769565509711077\" } ] } Get Currency Phased Transactions Request: https://localhost:2022/nxt? requestType=getCurrencyPhasedTransactions& currency=12366259387060174981 Response: { \"requestProcessingTime\": 2, \"transactions\": [ { \"signature\": \"ec467483307c73c08e7e9195eeddf23ce129ce30d703881cca505cbb0569c2009...\", \"transactionIndex\": 0, \"type\": 0, \"phased\": true, \"ecBlockId\": \"7353294686633135686\", \"signatureHash\": \"12cc1d54a453c3d1231b991a54f3323db6a51c00387ca5480db268164d5b7cfa\", \"attachment\": { \"phasingFinishHeight\": 263500, \"phasingHolding\": \"12366259387060174981\", \"phasingQuorum\": \"100\", \"version.Phasing\": 1, \"phasingMinBalance\": \"10\", \"phasingMinBalanceModel\": 3, \"version.OrdinaryPayment\": 0, \"phasingVotingModel\": 3 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"800000000\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"block\": \"699750272975612223\", \"blockTimestamp\": 44042909, \"deadline\": 60, \"timestamp\": 44042827, \"height\": 263430, \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"feeNQT\": \"4100000000\", \"confirmations\": 2, \"fullHash\": \"5799d135aacf48a317c813fea405c317e7ab90888afb701b92c17914744f244f\", \"version\": 1, \"sender\": \"15295723609781267838\", \"recipient\": \"11580081983047651163\", \"ecBlockHeight\": 263424, \"transaction\": \"11765882356459739479\" } ] } Get Linked Phased Transactions Request: https://localhost:2022/nxt? requestType=getLinkedPhasedTransactions& linkedFullHash=083eba49bb481c38752a14493f0d40b3c60635935f13dd1fb33f6831fb997079 Response: { \"requestProcessingTime\": 1, \"transactions\": [ { \"signature\": \"d20a8bb84dcb335182ddc81ceaa1c5464881137d32eb195805ad460c9fcdba0...\", \"transactionIndex\": 0, \"type\": 0, \"phased\": true, \"ecBlockId\": \"4351283327032663440\", \"signatureHash\": \"77dfa3ff467a3b253530ad1b7a227633fa21fa064efe1df8206690bafb06f42c\", \"attachment\": { \"phasingFinishHeight\": 770000, \"version.Message\": 1, \"phasingHolding\": \"0\", \"phasingQuorum\": \"1\", \"version.Phasing\": 1, \"messageIsText\": true, \"phasingLinkedFullHashes\": [ \"083eba49bb481c38752a14493f0d40b3c60635935f13dd1fb33f6831fb997079\" ], \"phasingMinBalance\": \"0\", \"message\": \"I givef Nxt\", \"phasingMinBalanceModel\": 0, \"version.OrdinaryPayment\": 0, \"phasingVotingModel\": 4 }, \"senderRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"subtype\": 0, \"amountNQT\": \"500000000\", \"recipientRS\": \"BLX-5MYN-AP7M-NKMH-CRQJZ\", \"block\": \"13425992991123879393\", \"blockTimestamp\": 80870662, \"deadline\": 1440, \"timestamp\": 80870626, \"height\": 768864, \"senderPublicKey\": \"373522bcd8904f4707472e590cbb67976d40e7af39650ea11cb2be...\", \"feeNQT\": \"300000000\", \"confirmations\": 11, \"fullHash\": \"a1d845b3daf08493a2b299639b71422a41fcf923e1b68a4533d2bd0e22ad694d\", \"version\": 1, \"sender\": \"12745647715474645062\", \"recipient\": \"12664921794733526996\", \"ecBlockHeight\": 768850, \"transaction\": \"10629885842602449057\" } ] } Get Phasing Poll Request: https://localhost:2022/nxt? requestType=getPhasingPoll& transaction=15402897900571339064 Response: { \"votingModel\": 0, \"quorum\": \"2\", \"transactionFullHash\": \"38292a530816c2d5693bf5d0afb20847a3c4d2f37c3665fd294a7d2fdc278d56\", \"finished\": true, \"whitelist\": [ { \"whitelistedRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"whitelisted\": \"11580081983047651163\" }, { \"whitelistedRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"whitelisted\": \"15295723609781267838\" } ], \"requestProcessingTime\": 1, \"result\": \"2\", \"approved\": true, \"minBalance\": \"0\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"finishHeight\": 259600, \"minBalanceModel\": 0, \"transaction\": \"15402897900571339064\", \"account\": \"15295723609781267838\", \"hashedSecret\": \"\" } Get Phasing Poll Vote Request: https://localhost:2022/nxt? requestType=getPhasingPollVote& transaction=12580288379938056583& account=15295723609781267838 Response: { \"voterRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"voter\": \"15295723609781267838\", \"requestProcessingTime\": 1, \"transaction\": \"9761138556025135837\" } Get Phasing Poll Votes Request: https://localhost:2022/nxt? requestType=getPhasingPollVotes& account=12580288379938056583 Response: { \"votes\": [ { \"voterRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"voter\": \"15295723609781267838\", \"transaction\": \"9761138556025135837\" } ], \"requestProcessingTime\": 2 } Get Phasing Polls Request: https://localhost:2022/nxt? requestType=getPhasingPolls& transaction=12580288379938056583& transaction=13688769565509711077& countVotes=true Response: { \"polls\": [ { \"votingModel\": 1, \"quorum\": \"100000000000\", \"transactionFullHash\": \"87a92edaa02996aeaf59a619ca513563775870c2b8ca490b61b02535745cdd34\", \"finished\": true, \"whitelist\": [], \"result\": \"186700000000\", \"approved\": true, \"minBalance\": \"10000000000\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"finishHeight\": 262450, \"minBalanceModel\": 1, \"transaction\": \"12580288379938056583\", \"account\": \"15295723609781267838\", \"hashedSecret\": \"\" }, { \"votingModel\": 2, \"quorum\": \"500\", \"transactionFullHash\": \"e57462c46447f8bd7a0bafd9ab65bde8743ca6c13213185271d7ea6c48118861\", \"finished\": true, \"whitelist\": [], \"result\": \"500\", \"holding\": \"17091401215301664836\", \"approved\": true, \"minBalance\": \"100\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"finishHeight\": 262450, \"minBalanceModel\": 2, \"transaction\": \"13688769565509711077\", \"account\": \"15295723609781267838\", \"hashedSecret\": \"\" } ], \"requestProcessingTime\": 1 } Get Voter Phased Transactions Request: https://localhost:2022/nxt? requestType=getVoterPhasedTransactions& account=15295723609781267838 Response: { \"requestProcessingTime\": 1, \"transactions\": [ { \"signature\": \"e527fce6591049b61d232ebbf4171319ae4e208f34d8a055ffb09f07dec7d9033527...\", \"transactionIndex\": 0, \"type\": 0, \"phased\": true, \"ecBlockId\": \"13625660527605830055\", \"signatureHash\": \"2a3cc644b1cb48130a172de92a418d48522b45a25a36d4d48c2347f032e430ab\", \"attachment\": { \"phasingFinishHeight\": 263850, \"phasingHolding\": \"0\", \"phasingQuorum\": \"2\", \"version.Phasing\": 1, \"phasingWhitelist\": [ \"11580081983047651163\", \"15295723609781267838\" ], \"phasingMinBalance\": \"0\", \"phasingMinBalanceModel\": 0, \"version.OrdinaryPayment\": 0, \"phasingVotingModel\": 0 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"1100000000\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"block\": \"16550954176569210781\", \"blockTimestamp\": 44074579, \"deadline\": 1440, \"timestamp\": 44074556, \"height\": 263813, \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"feeNQT\": \"200000000\", \"confirmations\": 0, \"fullHash\": \"b54a7e14c910e0750af0b29c0328347e27411dbe5d158d5d358ee2165b781968\", \"version\": 1, \"sender\": \"15295723609781267838\", \"recipient\": \"11580081983047651163\", \"ecBlockHeight\": 263804, \"transaction\": \"8493807353039047349\" } ] } Server Information Operations Event Register Request: https://localhost:2022/nxt? requestType=eventRegister Response: { \"registered\": true, \"requestProcessingTime\": 5780 } Event Wait Request: https://localhost:2022/nxt? requestType=eventWait Response: { \"requestProcessingTime\": 0, \"events\": [ { \"name\": \"Block.BLOCK\\_PUSHED\", \"ids\": [ \"11748297033830700369\" ] }, { \"name\": \"Transaction.REMOVED\\_UNCONFIRMED\\_TRANSACTIONS\", \"ids\": [] }, { \"name\": \"Peer.ADDED\\_ACTIVE\\_PEER\", \"ids\": [ \"178.150.207.53\" ] } ] } Get Blockchain Status Request: https://localhost:2022/nxt? requestType=getBlockchainStatus Response: { \"currentMinRollbackHeight\": 445745, \"numberOfBlocks\": 446546, \"isTestnet\": false, \"includeExpiredPrunable\": false, \"requestProcessingTime\": 1, \"version\": \"1.5.11\", \"maxRollback\": 800, \"lastBlock\": \"2164693711802180410\", \"application\": \"NRS\", \"isScanning\": false, \"isDownloading\": false, \"cumulativeDifficulty\": \"17966254519242206\", \"lastBlockchainFeederHeight\": 446597, \"maxPrunableLifetime\": 1209600, \"time\": 48539846, \"lastBlockchainFeeder\": \"84.253.125.186\" } Get Plugins Request: https://localhost:2022/nxt? requestType=getPlugins Response: { \"plugins\": [ \"hello\\_world\" ], \"requestProcessingTime\": 9 } Get State Request: https://localhost:2022/nxt? requestType=getState Response: { \"numberOfPolls\": 19, \"numberOfTransfers\": 124216, \"maxMemory\": 900726784, \"numberOfOffers\": 90, \"isDownloading\": false, \"cumulativeDifficulty\": \"17966254519242206\", \"numberOfCurrencies\": 1833, \"freeMemory\": 36399744, \"peerPort\": 7874, \"availableProcessors\": 4, \"numberOfTaggedData\": 1, \"numberOfActiveAccountLeases\": 216, \"currentMinRollbackHeight\": 445745, \"requestProcessingTime\": 125533, \"version\": \"1.5.11\", \"numberOfAliases\": 142415, \"numberOfActivePeers\": 10, \"maxPrunableLifetime\": 1209600, \"numberOfExchanges\": 1750, \"numberOfPurchases\": 770, \"numberOfAskOrders\": 3536, \"lastBlockchainFeeder\": \"84.253.125.186\", \"numberOfPeers\": 289, \"numberOfGoods\": 990, \"numberOfUnlockedAccounts\": 0, \"includeExpiredPrunable\": false, \"numberOfOrders\": 4781, \"numberOfTransactions\": 1325666, \"maxRollback\": 800, \"isScanning\": false, \"numberOfAssets\": 539, \"numberOfPrunableMessages\": 45, \"numberOfVotes\": 106, \"numberOfAccounts\": 111301, \"numberOfDataTags\": 3, \"needsAdminPassword\": false, \"numberOfBlocks\": 446546, \"isTestnet\": false, \"numberOfCurrencyTransfers\": 719, \"numberOfPhasedTransactions\": 5, \"numberOfAccountLeases\": 231, \"numberOfBidOrders\": 1245, \"lastBlock\": \"2164693711802180410\", \"totalMemory\": 235929600, \"application\": \"NRS\", \"lastBlockchainFeederHeight\": 446597, \"numberOfTrades\": 102458, \"numberOfTags\": 723, \"isOffline\": false, \"time\": 48539770 } Get Time Request: https://localhost:2022/nxt? requestType=getTime Response: { \"time\": 31184078, \"requestProcessingTime\": 1 } Shuffling Operations Get Account Shufflings Request: https://localhost:2022/nxt? getAccountShufflings& account=BLX-UZNP-6LBA-YQ38-3TEY8 Response: { \"requestProcessingTime\": 91, \"shufflings\": [ { \"blocksRemaining\": 4372, \"amount\": \"25000000000000\", \"shufflingStateHash\": \"be12c737ad86e551621f57ebddaaaa61e66cf0a206fabfe40538304ff674c7a7\", \"issuer\": \"11802441287912491934\", \"holding\": \"0\", \"stage\": 0, \"holdingType\": 0, \"participantCount\": 7, \"assigneeRS\": \"BLX-UZNP-6LBA-YQ38-3TEY8\", \"shuffling\": \"5901270965262160574\", \"registrantCount\": 2, \"assignee\": \"1403321141259239061\", \"issuerRS\": \"BLX-V4WY-U928-GRN8-CKPL9\", \"shufflingFullHash\": \"be12c737ad86e551621f57ebddaaaa61e66cf0a206fabfe40538304ff674c7a7\" } ] } Get All Shufflings Request: https://localhost:2022/nxt? requestType=getAllShufflings Response: { \"requestProcessingTime\": 81, \"shufflings\": [ { \"blocksRemaining\": 226, \"amount\": \"5000000000000\", \"shufflingStateHash\": \"9be2ed518e46d921df9f9f6425cc16a399f72a7833c58dbeb2a261e04620c392\", \"issuer\": \"16667202175165271068\", \"holding\": \"0\", \"stage\": 0, \"holdingType\": 0, \"participantCount\": 5, \"assigneeRS\": \"BLX-V4WY-U928-GRN8-CKPL9\", \"shuffling\": \"2439058250271679131\", \"registrantCount\": 3, \"assignee\": \"11802441287912491934\", \"issuerRS\": \"BLX-J52W-4BF7-L4J9-GEGMG\", \"shufflingFullHash\": \"9be2ed518e46d921df9f9f6425cc16a399f72a7833c58dbeb2a261e04620c392\" } ] } Get Assigned Shufflings Request: https://localhost:2022/nxt? requestType=getAssignedShufflings& account=BLX-V4WY-U928-GRN8-CKPL9 Response: { \"blocksRemaining\": 20, \"amount\": \"5000000000000\", \"shufflingStateHash\": \"9be2ed518e46d921df9f9f6425cc1...\", \"requestProcessingTime\": 3, \"issuer\": \"16667202175165271068\", \"holding\": \"0\", \"stage\": 1, \"holdingType\": 0, \"participantCount\": 5, \"assigneeRS\": \"BLX-V4WY-U928-GRN8-CKPL9\", \"shuffling\": \"2439058250271679131\", \"registrantCount\": 5, \"assignee\": \"11802441287912491934\", \"issuerRS\": \"BLX-J52W-4BF7-L4J9-GEGMG\", \"shufflingFullHash\": \"9be2ed518e46d921df9f9f6425cc16a399...\" } Get Holding Shufflings Request: https://localhost:2022/nxt? requestType=getHoldingShufflings& holding=15344649963748848799& includeFinished=true Response: { \"requestProcessingTime\": 4, \"shufflings\": [ { \"holding\": \"15344649963748848799\", \"blocksRemaining\": 0, \"amount\": \"1000\", \"stage\": 4, \"shufflingStateHash\": \"57ed7cc02fa5b1f289d2a345314be5ec557ad093a5fd3070a16aba952d30656f\", \"holdingType\": 1, \"participantCount\": 5, \"shuffling\": \"144176732027925694\", \"registrantCount\": 1, \"issuer\": \"17417706268123203912\", \"issuerRS\": \"BLX-A4CA-L7JT-ZYGU-HZ2G5\", \"shufflingFullHash\": \"beb46651f937000259819298872f1721170a4c2e1af7f7900cb2ca01188fd942\" } ] } Get Shufflers Request: https://localhost:2022/nxt? requestType=getShufflers& adminPassword=IWontTellYou Response: { \"shufflers\": [ { \"accountRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"recipientRS\": \"BLX-H42E-48UL-FM7A-AVEC2\", \"recipient\": \"9235083011255928844\", \"shuffling\": \"9534657251385467319\", \"account\": \"12745647715474645062\", \"shufflingFullHash\": \"b7e1eedb40e851849cb77a53075ce74aa...\" } ], \"requestProcessingTime\": 0 } Get Shuffling Request: https://localhost:2022/nxt? requestType=getShuffling& shuffling=3347171811359602131 Response: { \"blocksRemaining\": 956, \"amount\": \"100000000000\", \"shufflingStateHash\": \"d3354a42078b732e16561b67a37d699d0410c564a4d18568319170665bf5dd9b\", \"requestProcessingTime\": 2, \"issuer\": \"10740484011813680725\", \"holding\": \"0\", \"stage\": 0, \"holdingType\": 0, \"participantCount\": 5, \"assigneeRS\": \"BLX-V4WY-U928-GRN8-CKPL9\", \"shuffling\": \"3347171811359602131\", \"registrantCount\": 2, \"assignee\": \"11802441287912491934\", \"issuerRS\": \"BLX-PFLP-BQHY-NG4J-BXG5C\", \"shufflingFullHash\": \"d3354a42078b732e16561b67a37d699d0410c564a4d18568319170665bf5dd9b\" } Get Shuffling Participants Request: https://localhost:2022/nxt? requestType=getShufflingParticipants& shuffling=16292433427943984172 Response: { \"requestProcessingTime\": 5, \"participants\": [ { \"nextAccountRS\": \"BLX-KTTY-WRE6-2B5Y-4CYWR\", \"accountRS\": \"BLX-3ZXY-KWR5-LR8V-2PYAT\", \"shuffling\": \"16292433427943984172\", \"state\": 2, \"nextAccount\": \"3167098051496568638\", \"account\": \"910806360590974910\" }, { \"nextAccountRS\": \"BLX-L8VW-NRUG-LZ6Q-62WWW\", \"accountRS\": \"BLX-KTTY-WRE6-2B5Y-4CYWR\", \"shuffling\": \"16292433427943984172\", \"state\": 2, \"nextAccount\": \"5653003407546981244\", \"account\": \"3167098051496568638\" }, { \"nextAccountRS\": \"BLX-XC7L-35JW-FZCL-24NUT\", \"accountRS\": \"BLX-L8VW-NRUG-LZ6Q-62WWW\", \"shuffling\": \"16292433427943984172\", \"state\": 2, \"nextAccount\": \"930699247665195186\", \"account\": \"5653003407546981244\" }, { \"nextAccountRS\": \"BLX-2222-2222-2222-22222\", \"accountRS\": \"BLX-XC7L-35JW-FZCL-24NUT\", \"shuffling\": \"16292433427943984172\", \"state\": 2, \"nextAccount\": \"0\", \"account\": \"930699247665195186\" } ] } Shuffling Create Request: https://localhost:2022/nxt? requestType=shufflingCreate& amount=10000000000000& participantCount=7& registrationPeriod=9757& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=1440 Response: { \"senderPublicKey\": \"ffcafb6de1ec93db5fe0475a6e2efd82faa3cb89a47a7d96f5579b0deadd5c10\", \"signature\": \"36b410b83abb4e373bf77c715c8ef3b06ba6c872e621e3f5f412dc1424eb6a0710ed8...\", \"feeNQT\": \"100000000\", \"transactionIndex\": 0, \"requestProcessingTime\": 5, \"type\": 7, \"confirmations\": 9906, \"fullHash\": \"2d10f4e18f808aa8d0de06d5cddcd77828eb6e7548f62e48de83f58fdf0629d5\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"13021232786632787054\", \"signatureHash\": \"18956d76e3ed20937027373615e5fb49f11d1ac86eed279176856b59644899f5\", \"attachment\": { \"holding\": \"0\", \"amount\": \"10000000000000\", \"registrationPeriod\": 9757, \"holdingType\": 0, \"participantCount\": 7, \"version.ShufflingCreation\": 1 }, \"senderRS\": \"BLX-V4WY-U928-GRN8-CKPL9\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"11802441287912491934\", \"ecBlockHeight\": 817230, \"block\": \"435349863926964285\", \"blockTimestamp\": 80029572, \"deadline\": 1440, \"transaction\": \"12144660700617510957\", \"timestamp\": 80029541, \"height\": 817245 } Shuffling Process Request: https://localhost:2022/nxt? requestType=shufflingProcess& shuffling=12144660700617510957& recipientSecretPhrase=IWontTellYou& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=1440 Response: { \"senderPublicKey\": \"ffcafb6de1ec93db5fe0475a6e2efd82faa3cb89a47a7d96f5579b0deadd5c10\", \"signature\": \"fb6112d759cedfefe14a7bdbe19b2fac73d334566f05fc20d7d79933879b140...\", \"feeNQT\": \"1000000000\", \"transactionIndex\": 1, \"type\": 7, \"confirmations\": 251, \"fullHash\": \"0d0855396fa1a60c8b50507069abdb5a7c6af3fdb49f12766c8630ec66309642\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"17529486445813261105\", \"signatureHash\": \"a7c1d67e2ff01dd8e3cf72869428a708a6ad087bb6247e628fb1964456eea66b\", \"attachment\": { \"shuffling\": \"12144660700617510957\", \"shufflingStateHash\": \"e98b2810531c6e807e5e89bb2537025bc7b4fb72e79ab675deb6fec2b8ec6d78\", \"data\": [ \"438e2560cd958a173dc3b7adc3eb3c02a69ea5...\" ], \"version.ShufflingProcessing\": 1, \"hash\": \"2e3cecabbf59a47d55399649be89d1bcd1b56264dca32cb269f88b30cbe2c262\" }, \"senderRS\": \"BLX-V4WY-U928-GRN8-CKPL9\", \"subtype\": 2, \"amountNQT\": \"0\", \"sender\": \"11802441287912491934\", \"ecBlockHeight\": 826902, \"block\": \"15948287569415806210\", \"blockTimestamp\": 80611249, \"deadline\": 1440, \"transaction\": \"911593473664419853\", \"timestamp\": 80611213, \"height\": 826917 } Shuffling Verify Request: https://localhost:2022/nxt? requestType=shufflingVerify& shuffling=12144660700617510957& shufflingStateHash=90832470918374087102938470198234& recipientSecretPhrase=IWontTellYou& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=1440 Response: { \"senderPublicKey\": \"f050f86b050c1de933d8094c9a05a346b2319912313a04b822bba15d6d256505\", \"signature\": \"a23968d9cf5313e745fa4b50102f7f6d664c1b574d8ff2fbcc721cb967a42a0225f1e...\", \"feeNQT\": \"100000000\", \"transactionIndex\": 3, \"requestProcessingTime\": 3, \"type\": 7, \"confirmations\": 287, \"fullHash\": \"296a76a1601da4a06c6524df5791553b5d305cb266f71afb6e9d7aa0149c04ff\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"3207126357685519085\", \"signatureHash\": \"7b69ba9ffb10d725b693abb53157f274cbf42f2435e919821cda67f889f44e96\", \"attachment\": { \"version.ShufflingVerification\": 1, \"shuffling\": \"12144660700617510957\", \"shufflingStateHash\": \"fbc8b99c99c4e09203f1237771e38c7ee484c18a72572c3d1adae04da858fe92\" }, \"senderRS\": \"BLX-KHDF-9KSG-2UCY-BUQZ4\", \"subtype\": 4, \"amountNQT\": \"0\", \"sender\": \"10484056935692287341\", \"ecBlockHeight\": 826914, \"block\": \"1046003298185760668\", \"blockTimestamp\": 80612146, \"deadline\": 1440, \"transaction\": \"11575409243111975465\", \"timestamp\": 80611663, \"height\": 826925 } Shuffling Register Request: https://localhost:2022/nxt? requestType=shufflingRegister& shufflingFullHash=2d10f4e18f808aa8d0de06d5cddcd77828eb6e7548f62e48de83f58fdf0629d5& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=1440 Response: { \"senderPublicKey\": \"6351706ab8ea5c94243e6b0bff3be05f2e1b9accc83004af3e655a8fbc104735\", \"signature\": \"23bb57aee566ba2c27fe8c83ea4e88821f9f23c820371a39b5d49dbd327...\", \"feeNQT\": \"100000000\", \"transactionIndex\": 1, \"requestProcessingTime\": 3, \"type\": 7, \"confirmations\": 9924, \"fullHash\": \"467e60696e598fe5c075446897ff636886bf7c0e9...\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"4928509411801335816\", \"signatureHash\": \"b0e945000b9010814f5399d9006a21939089db5616...\", \"attachment\": { \"version.ShufflingRegistration\": 1, \"shufflingFullHash\": \"2d10f4e18f808aa8d0de06d5cddcd77828eb6e7...\" }, \"senderRS\": \"BLX-D78H-8QHV-DEP2-5TAGA\", \"subtype\": 1, \"amountNQT\": \"0\", \"sender\": \"3763066681748198607\", \"ecBlockHeight\": 817256, \"block\": \"12642960475175742738\", \"blockTimestamp\": 80031214, \"deadline\": 1440, \"transaction\": \"16541538287104327238\", \"timestamp\": 80031109, \"height\": 817265 } Start Shuffler Request: https://localhost:2022/nxt? requestType=startShuffler& shufflingFullHash=2d10f4e18f808aa8d0de06d5cddcd77828eb6e7548f62e48de83f58fdf0629d5& secretPhrase=IWontTellYou& recipientSecretPhrase=IWontTellYou Response: { \"shuffling\": \"12144660700617510957\", \"shufflingFullHash\": \"2d10f4e18f808aa8d0de06d5cddcd77828eb6e7548f62e48de83f58fdf0629d5\", \"account\": \"11802441287912491934\", \"accountRS\": \"BLX-V4WY-U928-GRN8-CKPL9\", \"recipient\": \"3763066681748198607\", \"recipientRS\": \"BLX-D78H-8QHV-DEP2-5TAGA\", \"requestProcessingTime\": 7 } Stop Shuffler Request: https://localhost:2022/nxt? requestType=stopShuffler& shufflingFullHash=2d10f4e18f808aa8d0de06d5cddcd77828eb6e7548f62e48de83f58fdf0629d5& secretPhrase=IWontTellYou Response: { \"stoppedShuffler\": true, \"requestProcessingTime\": 7 } Tagged Data Operations Download Tagged Data Request: https://localhost:2022/nxt? requestType=downloadTaggedData& transaction=9169681701986886056 Response: Downloaded file named nxt with contents: d4f167249340d6d746f49441b8ccdb1bd3521feb Extend Tagged Data Request: https://localhost:2022/nxt? requestType=extendTaggedData& transaction=9086193976300572942& secretPhrase=secretPhrase& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"96cee31072bcdc82c85710c78e86d42aa8eac34e90960d97dcb87e9212534cc4\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"1be49ba648dcb242620d34762243399053837a32e5c2f0a392b27e70fcf823073f0...\", \"feeNQT\": \"100000000\", \"type\": 6, \"fullHash\": \"77c6dcbf770f2ce04ca8ed14ba52cdff8f7e35515bc0a8440079acd156700fb6\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"9233989544625577248\", \"signatureHash\": \"96cee31072bcdc82c85710c78e86d42aa8eac34e90960d97dcb87e9212534cc4\", \"attachment\": { \"version.TaggedDataExtend\": 1, \"filename\": \"\", \"data\": \"d4f167249340d6d746f49441b8ccdb1bd3521feb\", \"name\": \"Stargate SG1 full series\", \"channel\": \"torrent\", \"description\": \"Hash of the torrent.\", \"type\": \"\", \"taggedData\": \"9086193976300572942\", \"isText\": true, \"tags\": \"video, scifi, torrent\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 1, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 304612, \"deadline\": 60, \"transaction\": \"16153302970465568375\", \"timestamp\": 47672016, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"0611d06ad7023c0010f09c34f225d425306e5be55a494...\", \"broadcasted\": true, \"requestProcessingTime\": 28, \"transactionBytes\": \"0611d06ad7023c0010f09c34f225d425306e5be55a49469081560...\", \"fullHash\": \"77c6dcbf770f2ce04ca8ed14ba52cdff8f7e35515bc0a8440079acd156700fb6\", \"transaction\": \"16153302970465568375\" } Get Account Tagged Data Request: https://localhost:2022/nxt? requestType=getAccountTaggedData& account=BLX-4VDY-LNVT-LMAY-FMCKA& lastIndex=0 Response: { \"data\": [ { \"data\": \"d4f167249340d6d746f49441b8ccdb1bd3521feb\", \"channel\": \"torrent\", \"description\": \"Hash of the torrent.\", \"type\": \"\", \"parsedTags\": [ \"video\", \"scifi\", \"torrent\" ], \"transactionTimestamp\": 47843875, \"tags\": \"video, scifi, torrent\", \"filename\": \"\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"name\": \"Stargate SG1 full series\", \"blockTimestamp\": 47672045, \"transaction\": \"9086193976300572942\", \"account\": \"15295723609781267838\", \"isText\": true } ], \"requestProcessingTime\": 2 } Get All Tagged Data Request: https://localhost:2022/nxt? requestType=getAllTaggedData& lastIndex=0 Response: { \"requestProcessingTime\": 1, \"data\": [ { \"data\": \"d4f167249340d6d746f49441b8ccdb1bd3521feb\", \"channel\": \"torrent\", \"description\": \"Hash of the torrent.\", \"type\": \"\", \"parsedTags\": [ \"video\", \"scifi\", \"torrent\" ], \"transactionTimestamp\": 47843875, \"tags\": \"video, scifi, torrent\", \"filename\": \"\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"name\": \"Stargate SG1 full series\", \"blockTimestamp\": 47672045, \"transaction\": \"9086193976300572942\", \"account\": \"15295723609781267838\", \"isText\": true } ] } Get Channel Tagged Data Request: https://localhost:2022/nxt? requestType=getChannelTaggedData& channel=torrent& lastIndex=0 Response: { \"data\": [ { \"data\": \"d4f167249340d6d746f49441b8ccdb1bd3521feb\", \"channel\": \"torrent\", \"description\": \"Hash of the torrent.\", \"type\": \"\", \"parsedTags\": [ \"video\", \"scifi\", \"torrent\" ], \"transactionTimestamp\": 47843875, \"tags\": \"video, scifi, torrent\", \"filename\": \"\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"name\": \"Stargate SG1 full series\", \"blockTimestamp\": 47672045, \"transaction\": \"9086193976300572942\", \"account\": \"15295723609781267838\", \"isText\": true } ], \"requestProcessingTime\": 1 } Get Data Tag Count Request: https://localhost:2022/nxt? requestType=getDataTagCount Response: { \"numberOfDataTags\": 3, \"requestProcessingTime\": 2 } Get Data Tags Request: https://localhost:2022/nxt? requestType=getDataTags Response: { \"requestProcessingTime\": 5, \"tags\": [ { \"count\": 2, \"tag\": \"video\" }, { \"count\": 1, \"tag\": \"scifi\" }, { \"count\": 1, \"tag\": \"torrent\" } ] } Get Data Tags Like Request: https://localhost:2022/nxt? requestType=getDataTagsLike& tagPrefix=sci Response: { \"requestProcessingTime\": 9, \"tags\": [ { \"count\": 1, \"tag\": \"scifi\" } ] } Get Tagged Data Request: https://localhost:2022/nxt? requestType=getTaggedData& transaction=9086193976300572942 Response: { \"data\": \"d4f167249340d6d746f49441b8ccdb1bd3521feb\", \"channel\": \"torrent\", \"description\": \"Hash of the torrent.\", \"requestProcessingTime\": 3, \"type\": \"\", \"parsedTags\": [ \"video\", \"scifi\", \"torrent\" ], \"transactionTimestamp\": 47843875, \"tags\": \"video, scifi, torrent\", \"filename\": \"\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"name\": \"Stargate SG1 full series\", \"blockTimestamp\": 47672045, \"transaction\": \"9086193976300572942\", \"account\": \"15295723609781267838\", \"isText\": true } Get Tagged Data Extend Transactions Request: https://localhost:2022/nxt? requestType=getTaggedDataExtendTransactions& transaction=4344513120863790923 Response: { \"extendTransactions\": [ { \"senderPublicKey\": \"631110059365218234cc28fb6c91019f4563cf910471a9e43221795f40ab6e3a\", \"signature\": \"e4fe406198843207f5255e2c98119b3130b9810812934e0406a4de97a3443b0b205c907284c2e2cfd2534e8dcc17f08afb707db338e557d02673a2e6b0010186\", \"feeNQT\": \"150000000\", \"transactionIndex\": 0, \"type\": 6, \"confirmations\": 31778, \"fullHash\": \"86e8bc8c891e1556dfb9114a0ba9c4e119e6df6ba241016a1e9a85223dea42f8\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"14132969248050944989\", \"signatureHash\": \"2ed7b6a5d579a66596409b2619375fa0edd54ace2e7d10f0bdbc0a7126f1776c\", \"senderRS\": \"BLX-G885-AKDX-5G2B-BLUCG\", \"subtype\": 1, \"amountNQT\": \"0\", \"sender\": \"10892890577210644675\", \"ecBlockHeight\": 725746, \"block\": \"18314376737060578519\", \"blockTimestamp\": 78357439, \"deadline\": 1440, \"transaction\": \"6202897637893269638\", \"timestamp\": 78357424, \"height\": 725756 } ], \"requestProcessingTime\": 1 } Search Tagged Data Request: https://localhost:2022/nxt? requestType=searchTaggedData& query=SG?& lastIndex=0 Response: { \"data\": [ { \"data\": \"d4f167249340d6d746f49441b8ccdb1bd3521feb\", \"channel\": \"torrent\", \"description\": \"Hash of the torrent.\", \"type\": \"\", \"parsedTags\": [ \"video\", \"scifi\", \"torrent\" ], \"transactionTimestamp\": 47843875, \"tags\": \"video, scifi, torrent\", \"filename\": \"\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"name\": \"Stargate SG1 full series\", \"blockTimestamp\": 47672045, \"transaction\": \"9086193976300572942\", \"account\": \"15295723609781267838\", \"isText\": true } ], \"requestProcessingTime\": 22 } Upload Tagged Data Request: https://localhost:2022/nxt? requestType=uploadTaggedData& data=d4f167249340d6d746f49441b8ccdb1bd3521feb& name=Stargate SG1 full series& description=Hash of the torrent.& tags=video, scifi, torrent& channel=torrent& secretPhrase=secretPhrase& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"953a1023c84939a6e31da0db913ed2829b318d59663daddce63bdf2193af912e\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"17da947a7dc30a6d722a53f064d817c559f8f9c1387290048793d81b49dbf5082a0...\", \"feeNQT\": \"100000000\", \"type\": 6, \"fullHash\": \"0e91b0dd47a5187e26ea5b54f1917e3b879ee3cf096eb597ce22c6833863cdb2\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"7868019187120003959\", \"signatureHash\": \"953a1023c84939a6e31da0db913ed2829b318d59663daddce63bdf2193af912e\", \"attachment\": { \"filename\": \"\", \"data\": \"d4f167249340d6d746f49441b8ccdb1bd3521feb\", \"name\": \"Stargate SG1 full series\", \"channel\": \"torrent\", \"description\": \"Hash of the torrent.\", \"type\": \"\", \"version.TaggedDataUpload\": 1, \"isText\": true, \"hash\": \"06fbac5b5358c00f5a2f19789b06220dca4e242a851b70072633a06ae8e6fb46\", \"tags\": \"video, scifi, torrent\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 304598, \"deadline\": 60, \"transaction\": \"9086193976300572942\", \"timestamp\": 47671075, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"06102367d7023c0010f09c34f225d425306e5be55a494...\", \"broadcasted\": true, \"requestProcessingTime\": 284, \"transactionBytes\": \"06102367d7023c0010f09c34f225d425306e5be55a49469081560...\", \"fullHash\": \"0e91b0dd47a5187e26ea5b54f1917e3b879ee3cf096eb597ce22c6833863cdb2\", \"transaction\": \"9086193976300572942\" } Verify Tagged Data Request: https://localhost:2022/nxt? requestType=verifyTaggedData& transaction=9086193976300572942& data=d4f167249340d6d746f49441b8ccdb1bd3521feb& name=Stargate SG1 full series& description=Hash of the torrent.& tags=video, scifi, torrent& channel=torrent Response: { \"verify\": true, \"requestProcessingTime\": 7, \"version.TaggedDataUpload\": 1, \"hash\": \"06fbac5b5358c00f5a2f19789b06220dca4e242a851b70072633a06ae8e6fb46\" } Token Operations Decode File Token Request: https://localhost:2022/nxt? requestType=decodeFileToken& file=test.txt& token=u8q9ps0gdoo2bl158p4llpar583ld0cgejat9qnrgrgde4l5uscgan7fu25hi... Response: { \"valid\": true, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"requestProcessingTime\": 3, \"account\": \"15295723609781267838\", \"timestamp\": 49748229 } Decode Token Request: https://localhost:2022/nxt? requestType=decodeToken& website=test& token=u8q9ps0gdoo2bl158p4llpar583ld0cgejat9qnrgrgde4l5ut8bgn... Response: { \"valid\": true, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"requestProcessingTime\": 2, \"account\": \"15295723609781267838\", \"timestamp\": 49762488 } Generate File Token Request: https://localhost:2022/nxt? requestType=generateFileToken& secretPhrase=secretPhrase& file=test.txt Response: { \"valid\": true, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"requestProcessingTime\": 4, \"account\": \"15295723609781267838\", \"timestamp\": 49748229, \"token\": \"u8q9ps0gdoo2bl158p4llpar583ld0cgejat9qnrgrgde4l5uscgan7fu25hi...\" } Generate Token Request: https://localhost:2022/nxt? requestType=generateToken& secretPhrase=secretPhrase& website=test Response: { \"valid\": true, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"requestProcessingTime\": 4, \"account\": \"15295723609781267838\", \"timestamp\": 49762488, \"token\": \"u8q9ps0gdoo2bl158p4llpar583ld0cgejat9qnrgrgde4l5ut8bgn...\" } Transaction Operations Broadcast Transaction Request: https://localhost:2022/nxt? requestType=broadcastTransaction& transactionBytes=001046aac6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143... Response: { \"requestProcessingTime\": 4, \"fullHash\": \"3a304584f20cf3d2cbbdd9698ff9a166427005ab98fbe9ca4ad6253651ee81f1\", \"transaction\": \"15200507403046301754\" } **Note**: If the transaction has already been broadcast, the following INFO notice appears in the console output and log file: _Transaction 15200507403046301754 already in blockchain (or unconfirmed pool), will not broadcast again_. Calculate Full Hash Request: https://localhost:2022/nxt? requestType=calculateFullHash& unsignedTransactionBytes=001046aac6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f2...& signatureHash=b35eae7d2f01639810d37694138aa0a86fbbf8a9bf58c2be4f2a5b8f0f30b3f7 Response: { \"requestProcessingTime\": 1, \"fullHash\": \"3a304584f20cf3d2cbbdd9698ff9a166427005ab98fbe9ca4ad6253651ee81f1\" } Get Expected Transactions Request: https://localhost:2022/nxt? requestType=getExpectedTransactions& account=BLX-X5A4-FTMJ-J97M-F3ANH Response: { \"expectedTransactions\": [ { \"senderPublicKey\": \"aaf2ffc347dae1442f218c17ff9ae1e917ab32af0af779360737f6faf7a4023e\", \"signature\": \"58720e3cb6cd4a9ad1dcb0bede55952e624b02a125aa0ac5934d7312cf87660147b495...\", \"feeNQT\": \"100000000\", \"type\": 2, \"fullHash\": \"79df9c85bc30f4a72c5d1899ce57b6533f321e1412f433fc3975cd4142a3c781\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"17663518922057624367\", \"signatureHash\": \"687701be20bfb0935b3165ae31c08b685a173be660a9720ed0319ec17cc646eb\", \"attachment\": { \"quantityQNT\": \"5\", \"priceNQT\": \"908000000\", \"asset\": \"8122396658538927693\", \"version.BidOrderPlacement\": 1 }, \"senderRS\": \"BLX-X5A4-FTMJ-J97M-F3ANH\", \"subtype\": 3, \"amountNQT\": \"0\", \"sender\": \"15551212561974070530\", \"ecBlockHeight\": 820879, \"deadline\": 1440, \"transaction\": \"12102351684905000825\", \"timestamp\": 80248727, \"height\": 2147483647 } ], \"requestProcessingTime\": 1 } Get Referencing Transactions Request: https://localhost:2022/nxt? requestType=getReferencingTransactions& transaction=9132239833429154693 Response: { \"requestProcessingTime\": 1, \"transactions\": [ { \"senderPublicKey\": \"36bb17bc15678804a95ed895d524bb361aa5dfc4e78a800901aefff783f48010\", \"signature\": \"f39849eee16cd534f86915e22bd41d91fd6e965278242c957422196454deb705aa4...\", \"feeNQT\": \"100000000\", \"transactionIndex\": 0, \"type\": 1, \"confirmations\": 216565, \"fullHash\": \"c96b60bafc581891be88eae695f773677fe3cf7322cc149831d70de046041ea7\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"1861841686166492176\", \"referencedTransactionFullHash\": \"859b376bbe3bbc7ebd5520d0d3fd20256f921e4c6bc3e...\", \"signatureHash\": \"0ed3aaabc682d4b5242b69930c0f659b62776b92bc2eecc40e37c895c5260eb4\", \"attachment\": { \"version.Message\": 1, \"messageIsText\": true, \"message\": \"],\\\\\"type\\\\\":\\\\\"payment\\\\\",\\\\\"oracles\\\\\":[{\\\\\"name\\\\\":\\\\\"nayru\\\\\"}]}\", \"version.ArbitraryMessage\": 0 }, \"senderRS\": \"BLX-DRGK-5CLR-35AZ-84R5R\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"7750380612824194513\", \"ecBlockHeight\": 614622, \"block\": \"13844289828761736561\", \"blockTimestamp\": 67496993, \"deadline\": 1440, \"transaction\": \"10455204377422490569\", \"timestamp\": 67496806, \"height\": 614629 } ] } Get Transaction Request: https://localhost:2022/nxt? requestType=getTransaction& transaction=15200507403046301754 Response: { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"5f0378b7390ff5a815eadd1354de533eef682f139362b153576e2207320a6...\", \"feeNQT\": \"100000000\", \"transactionIndex\": 2, \"requestProcessingTime\": 2842, \"type\": 0, \"confirmations\": 849, \"fullHash\": \"3a304584f20cf3d2cbbdd9698ff9a166427005ab98fbe9ca4ad6253651ee81f1\", \"version\": 1, \"ecBlockId\": \"17321329645912574173\", \"signatureHash\": \"b35eae7d2f01639810d37694138aa0a86fbbf8a9bf58c2be4f2a5b8f0f30b3f7\", \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 0, \"amountNQT\": \"100000000\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"recipient\": \"17013046603665206934\", \"ecBlockHeight\": 275727, \"block\": \"8455642159445842600\", \"blockTimestamp\": 29797208, \"deadline\": 60, \"transaction\": \"15200507403046301754\", \"timestamp\": 29796934, \"height\": 275730 } Get Transaction Bytes Request: https://localhost:2022/nxt? requestType=getTransactionBytes& transaction=15200507403046301754 Response: { \"unsignedTransactionBytes\": \"001046aac6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473...\", \"requestProcessingTime\": 66, \"confirmations\": 1019, \"transactionBytes\": \"001046aac6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473...\" } Parse Transaction Request: https://localhost:2022/nxt? requestType=parseTransaction& transactionBytes=001046aac6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143... Response: { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"5f0378b7390ff5a815eadd1354de533eef682f139362b153576e2207320a6...\", \"feeNQT\": \"100000000\", \"requestProcessingTime\": 2, \"type\": 0, \"fullHash\": \"3a304584f20cf3d2cbbdd9698ff9a166427005ab98fbe9ca4ad6253651ee81f1\", \"version\": 1, \"ecBlockId\": \"17321329645912574173\", \"signatureHash\": \"b35eae7d2f01639810d37694138aa0a86fbbf8a9bf58c2be4f2a5b8f0f30b3f7\", \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 0, \"amountNQT\": \"100000000\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"recipient\": \"17013046603665206934\", \"ecBlockHeight\": 275727, \"verify\": true, \"deadline\": 60, \"transaction\": \"15200507403046301754\", \"timestamp\": 29796934, \"height\": 2147483647 } Retrieve Pruned Transaction Request: https://localhost:2022/nxt? requestType=retrievePrunedTransaction& transaction=9343032000583494722 Response: { \"senderPublicKey\": \"7c94b068c95edcaf6ad588cda8784c7c27421ac334be092a6b487885f40f4f0c\", \"signature\": \"a4b4b7829b90ae0aa6c6654d364d23b335c64383bacc0e518b5aa1f2746de706121d308ae11244bf0933eddaed170c958bb9520700d63a7ed9ab30eb766717ca\", \"feeNQT\": \"320000000\", \"transactionIndex\": 0, \"requestProcessingTime\": 0, \"type\": 6, \"confirmations\": 41543, \"fullHash\": \"42ece25f1a1ea9815a7e6856635c323810efd2a38686bd57b7241fce28841da0\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"11517076094591827523\", \"signatureHash\": \"5202c62fafb4b990313f03cf8882c2bad73c7888790794bb8c46a186abfc34ca\", \"attachment\": { \"filename\": \"7dba799bc6d4439191f89a88a9e50dad.jpg\", \"data\": \"ffd8ffe000104a46494600010100000100010000ffdb00430003050805050404050a07070...\", \"name\": \"Darkwing Duck\", \"channel\": \"Darkwing Duck\", \"description\": \"Darkwing Duck\", \"type\": \"image/jpeg\", \"version.TaggedDataUpload\": 1, \"isText\": false, \"hash\": \"5fb2f476f2556d15e4d419c6ff10bdbd05a7c5284242eba67c4de1adaee185a2\", \"tags\": \"Darkwing Duck\" }, \"senderRS\": \"BLX-K8HZ-VMMS-ZX8E-EY5JR\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"14681874272470211071\", \"ecBlockHeight\": 788531, \"block\": \"17859315470736709713\", \"blockTimestamp\": 78307385, \"deadline\": 1440, \"transaction\": \"9343032000583494722\", \"timestamp\": 78307322, \"height\": 788546 } Send Transaction Request: https://localhost:2022/nxt? requestType=sendTransaction& transactionBytes=00109e61b606a0052bdd59320496b133052f58c82e8... Response: { \"requestProcessingTime\": 2, \"fullHash\": \"799ad836f9c65e2985978123f145130b867bab9a86f6fdabae8e8c8f25c087dc\", \"transaction\": \"2981038777035168377\" } Sign Transaction Request: https://localhost:2022/nxt? requestType=signTransaction& unsignedTransactionBytes=00100cfb3c03a00510f09c34f225d425306e5be55a494690...& secretPhrase=SecretPhrase Response: { \"signatureHash\": \"3f4830bf28f105d5075f5e084c36e4582a156e713abfe0bc6ee51cbf8b20f2d2\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"24513e93029688100c5a04183ffddc49812fd7a137a15fb3a2545aa9a2bcb5004a3...\", \"feeNQT\": \"100000000\", \"type\": 0, \"fullHash\": \"c34af8f1509e3be79c4562e24125ff2a8f026871fdd1a0366ad315bf8fab76b9\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"15869644242181198665\", \"signatureHash\": \"3f4830bf28f105d5075f5e084c36e4582a156e713abfe0bc6ee51cbf8b20f2d2\", \"attachment\": { \"version.OrdinaryPayment\": 0 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"1000000000\", \"sender\": \"15295723609781267838\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"recipient\": \"11580081983047651163\", \"ecBlockHeight\": 382777, \"deadline\": 1440, \"transaction\": \"16662085316881435331\", \"timestamp\": 54328076, \"height\": 2147483647 }, \"verify\": true, \"requestProcessingTime\": 5, \"transactionBytes\": \"00100cfb3c03a00510f09c34f225d425306e5be55a4946908156072afbead4...\", \"fullHash\": \"c34af8f1509e3be79c4562e24125ff2a8f026871fdd1a0366ad315bf8fab76b9\", \"transaction\": \"16662085316881435331\" } Voting System Operations Cast Vote Request: https://localhost:2022/nxt? requestType=castVote& poll=5916389507928675673& vote02=1& secretPhrase=secretPhrase& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"54fb93860d0668477d34f7828d6a2c19be1c9229e7cb5adcebdc4962319ab22b\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"d48873e936e74069a56ba0eecdbfe3abe706bb7443e51d6651f59ef2500694087bd...\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"ae7b714aadfe5efee0d690dfffac533dbf190827ed2f972d3dd552f4399ed648\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"1999174047197129566\", \"signatureHash\": \"54fb93860d0668477d34f7828d6a2c19be1c9229e7cb5adcebdc4962319ab22b\", \"attachment\": { \"version.VoteCasting\": 1, \"poll\": \"5916389507928675673\", \"vote\": [ -128, -128, 1 ] }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 3, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 256208, \"deadline\": 60, \"transaction\": \"18329367553676245934\", \"timestamp\": 43095711, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"01139f9691023c0010f09c34f225d425306e5be55a4946908156072a...\", \"broadcasted\": true, \"requestProcessingTime\": 99, \"transactionBytes\": \"01139f9691023c0010f09c34f225d425306e5be55a4946908156072afbead4d5...\", \"fullHash\": \"ae7b714aadfe5efee0d690dfffac533dbf190827ed2f972d3dd552f4399ed648\", \"transaction\": \"18329367553676245934\" } Create Poll Request: https://localhost:2022/nxt? requestType=createPoll& name=Gender Poll& description=What is your gender?& minNumberOfOptions=1& maxNumberOfOptions=1& minRangeValue=0& maxRangeValue=1& minBalance=100000000000& minBalanceModel=1& option00=Male& option01=Female& secretPhrase=secretPhrase& feeNQT=1000000000& deadline=60 Response: { \"signatureHash\": \"c55ceb631d9d9e92b99a326e0323f24d80b7859a28ca43c82e1a03a6b05f02fe\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"ffcd924f00e14c9e2cc14a04984f0d0c21bdf4551c3e332e1559c378b2975b0b9f8...\", \"feeNQT\": \"1000000000\", \"type\": 1, \"fullHash\": \"fc9e0c8014853b7e48b16e2c51ca28c4cc74939ba193e8c040c97e36a42b89c5\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"11503767830531050607\", \"signatureHash\": \"c55ceb631d9d9e92b99a326e0323f24d80b7859a28ca43c82e1a03a6b05f02fe\", \"attachment\": { \"minRangeValue\": 0, \"votingModel\": 0, \"description\": \"What is your gender?\", \"minNumberOfOptions\": 1, \"holding\": \"0\", \"minBalance\": \"100000000000\", \"name\": \"Gender Poll\", \"finishHeight\": 256453, \"options\": [ \"Male\", \"Female\" ], \"maxNumberOfOptions\": 1, \"minBalanceModel\": 1, \"version.PollCreation\": 1, \"maxRangeValue\": 1 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 2, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 256410, \"deadline\": 60, \"transaction\": \"9096010195498999548\", \"timestamp\": 43114026, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"01122ade91023c0010f09c34f225d425306e5be55a4946908156072afb...\", \"broadcasted\": true, \"requestProcessingTime\": 6, \"transactionBytes\": \"01122ade91023c0010f09c34f225d425306e5be55a4946908156072afbead4d574...\", \"fullHash\": \"fc9e0c8014853b7e48b16e2c51ca28c4cc74939ba193e8c040c97e36a42b89c5\", \"transaction\": \"9096010195498999548\" } Get Poll Request: https://localhost:2022/nxt? requestType=getPoll& poll=9096010195498999548 Response: { \"minRangeValue\": 0, \"votingModel\": 0, \"description\": \"What is your gender?\", \"finished\": true, \"poll\": \"9096010195498999548\", \"requestProcessingTime\": 1, \"minNumberOfOptions\": 1, \"minBalance\": \"100000000000\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"name\": \"Gender Poll\", \"options\": [ \"Male\", \"Female\" ], \"finishHeight\": 256453, \"maxNumberOfOptions\": 1, \"minBalanceModel\": 1, \"account\": \"15295723609781267838\", \"maxRangeValue\": 1 } Get Poll Result Request: https://localhost:2022/nxt? requestType=getPollResult& poll=16742897359122764363 Response: { \"votingModel\": 0, \"minBalance\": \"0\", \"options\": [ \"Option 00\", \"Option 01\", \"Option 02\" ], \"finished\": true, \"poll\": \"16742897359122764363\", \"requestProcessingTime\": 2, \"minBalanceModel\": 0, \"results\": [ { \"result\": \"3\", \"weight\": \"1\" }, { \"result\": \"9\", \"weight\": \"2\" }, { \"result\": \"9\", \"weight\": \"2\" } ] } Get Poll Vote Request: https://localhost:2022/nxt? requestType=getPollVote& account=9096010195498999548 Response: { \"voterRS\": \"BLX-THLJ-CYAL-JQST-6FNS5\", \"votes\": [ \"1\", \"\" ], \"voter\": \"4747512364439223888\", \"requestProcessingTime\": 1, \"transaction\": \"6214591232702166122\" } Get Poll Votes Request: https://localhost:2022/nxt? requestType=getPollVotes& poll=9096010195498999548& lastIndex=0 Response: { \"votes\": [ { \"voterRS\": \"BLX-THLJ-CYAL-JQST-6FNS5\", \"votes\": [ \"1\", \"\" ], \"voter\": \"4747512364439223888\", \"transaction\": \"6214591232702166122\" } ], \"requestProcessingTime\": 1 } Get Polls Request: https://localhost:2022/nxt? requestType=getPolls& lastIndex=0 Response: { \"polls\": [ { \"minRangeValue\": 0, \"votingModel\": 3, \"description\": \"Should we start fully backing Credits with something tangible?\", \"finished\": false, \"poll\": \"10307833923604182368\", \"minNumberOfOptions\": 1, \"holding\": \"415923435949896799\", \"minBalance\": \"1000000000\", \"accountRS\": \"BLX-3BCV-8Q5G-9NP6-576DP\", \"name\": \"CRDTS owners poll\", \"options\": [ \"Yes\", \"No\", \"go for fractional reserve backing\" ], \"finishHeight\": 260218, \"maxNumberOfOptions\": 1, \"minBalanceModel\": 3, \"account\": \"4227900615136683355\", \"maxRangeValue\": 1 } ], \"requestProcessingTime\": 0 } Search Polls Request: https://localhost:2022/nxt? requestType=searchPolls& query=hello& includeFinished=true Response: { \"polls\": [ { \"minRangeValue\": 0, \"votingModel\": 1, \"description\": \"Hello World Poll\", \"finished\": true, \"poll\": \"3043888702585899321\", \"minNumberOfOptions\": 1, \"minBalance\": \"0\", \"accountRS\": \"BLX-XK4R-7VJU-6EQG-7R335\", \"name\": \"Poll1\", \"options\": [ \"Hello\", \"World\" ], \"finishHeight\": 255816, \"maxNumberOfOptions\": 1, \"minBalanceModel\": 1, \"account\": \"5873880488492319831\", \"maxRangeValue\": 1 } ], \"requestProcessingTime\": 3 } Utilities Decode QR Code Request: https://localhost:2022/nxt? requestType=decodeQRCode& qrCodeBase64=/9j/4AAQSkZJRgABAgAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRo... Response: { \"qrCodeData\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"requestProcessingTime\": 15 } Detect Mime Type Request: https://localhost:2022/nxt? requestType=detectMimeType& data=/9j/4AAQSkZJRgABAgAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRo...& isText=false Response: { \"requestProcessingTime\": 348, \"type\": \"image/png\" } Encode QR Code Request: https://localhost:2022/nxt? requestType=encodeQRCode& qrCodeData=BLX-7A48-47JL-T7LD-D5FS3& width=100& height=100 Response: { \"qrCodeBase64\": \"/9j/4AAQSkZJRgABAgAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UH...\", \"requestProcessingTime\": 15 } Full Hash To Id Request: https://localhost:2022/nxt? requestType=fullHashToId& fullHash=c34af8f1509e3be79c4562e24125ff2a8f026871fdd1a0366ad315bf8fab76b9 Response: { \"stringId\": \"16662085316881435331\", \"requestProcessingTime\": 0, \"longId\": \"-1784658756828116285\" } Hash Request: https://localhost:2022/nxt? requestType=hash& hashAlgorithm=2& secret=74657374 **Note:** _74657374_ is the UTF-8 hex string for the secret phrase \"test\". Response: { \"requestProcessingTime\": 1, \"hash\": \"9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08\" } Hex Convert Request: https://localhost:2022/nxt? requestType=hexConvert& string=616263 Response: { \"binary\": \"363136323633\", \"text\": \"abc\", \"requestProcessingTime\": 1 } Long Convert Request: https://localhost:2022/nxt? requestType=longConvert& id=15323192282528158131 Response: { \"stringId\": \"15323192282528158131\", \"requestProcessingTime\": 0, \"longId\": \"-3123551791181393485\" } RS Convert Request: https://localhost:2022/nxt? requestType=rsConvert& account=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"accountRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"requestProcessingTime\": 1, \"account\": \"15323192282528158131\" } Debug Operations Clear Unconfirmed Transactions Request: https://localhost:2022/nxt? requestType=clearUnconfirmedTransactions Response: { \"requestProcessingTime\": 814, \"done\": true } Dump Peers Request: https://localhost:2022/nxt? requestType=dumpPeers& version=1.5.11& connect=true Response: { \"peers\": \"198.105.122.160; 174.140.167.239; ...\", \"count\": 37, \"requestProcessingTime\": 176897 } Full Reset Request: https://localhost:2022/nxt? requestType=fullReset Response: { \"requestProcessingTime\": 4378, \"done\": true } Get All Broadcasted Transactions Request: https://localhost:2022/nxt? requestType=GetAllBroadcastedTransactions Response: { \"requestProcessingTime\": 1, \"transactions\": [] } Get All Waiting Transactions Request: https://localhost:2022/nxt? requestType=getAllWaitingTransactions Response: { \"requestProcessingTime\": 1, \"transactions\": [] } Get Log Request: https://localhost:2022/nxt? requestType=getLog& count=3 Response: { \"messages\": [ \"2015-04-28 18:26:52 FINE: Known peers: 29\\\\n\", \"2015-04-28 18:27:12 FINE: Got 0 confirmations\\\\n\", \"2015-04-28 18:27:12 FINE: Downloaded 230 blocks\\\\n\" ], \"requestProcessingTime\": 0 } Get Stack Traces Request: https://localhost:2022/nxt? requestType=getStackTrace Response: { \"threads\": [ \u22ee { \"trace\": [ \"java.lang.Object.wait(Native Method)\", \"java.lang.Object.wait(Object.java:502)\", \"java.lang.ref.Reference$ReferenceHandler.run(Reference.java:157)\" ], \"name\": \"Reference Handler\", \"id\": 2, \"state\": \"WAITING\" } ], \"requestProcessingTime\": 5, \"locks\": [] } Lucene Reindex Request: https://localhost:2022/nxt? requestType=luceneReindex Response: { \"requestProcessingTime\": 4480, \"done\": true } Pop Off Request: https://localhost:2022/nxt? requestType=popOff& numBlocks=1 Response: { \"blocks\": [ { \"previousBlockHash\": \"5dd57ec106d9ba4cb1442017586b9df23c2c31ec5f1cb46fd3206015a96fd057\", \"payloadLength\": 0, \"totalAmountNQT\": \"0\", \"generationSignature\": \"e23740a05b65aa01a890a9ba1c9766183a328455b6e347add727a823e151db99\", \"generator\": \"16120433118765388429\", \"generatorPublicKey\": \"f35600023d42e79cbf0518a174141bce1decb13332e397553c3f62df7261414a\", \"baseTarget\": \"268653798\", \"payloadHash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\", \"generatorRS\": \"BLX-A6NF-JE4R-XB6L-FAUFZ\", \"nextBlock\": \"12812496435932308379\", \"numberOfTransactions\": 0, \"blockSignature\": \"d9aba136c708e4f84b7ae1cf0415b25a75f9eefc8a47b1963b237ada9982a...\", \"transactions\": [], \"version\": 3, \"totalFeeNQT\": \"0\", \"previousBlock\": \"5528970115590051165\", \"block\": \"8125766982300698657\", \"height\": 212194, \"timestamp\": 23052841 } ], \"requestProcessingTime\": 109 } Rebroadcast Unconfirmed Transactions Request: https://localhost:2022/nxt? requestType=RebroadcastUnconfirmedTransactions Response: { \"requestProcessingTime\": 2, \"done\": true } Requeue Unconfirmed Transactions Request: https://localhost:2022/nxt? requestType=requeueUnconfirmedTransactions Response: { \"requestProcessingTime\": 1, \"done\": true } Retrieve Pruned Data Request: https://localhost:2022/nxt? requestType=retrievePrunedData Response: { \"numberOfPrunedData\": 0, \"requestProcessingTime\": 4604, \"done\": true } Scan Request: https://localhost:2022/nxt? requestType=scan Response: { \"scanTime\": 8, \"requestProcessingTime\": 8445, \"done\": true } Set Logging Request: https://localhost:2022/nxt? requestType=setLogging Response: { \"loggingUpdated\": true } Shutdown Request: https://localhost:2022/nxt? requestType=shutdown Response: { \"requestProcessingTime\": 2, \"shutdown\": true } Trim Derived Tables Request: https://localhost:2022/nxt? requestType=trimDerivedTables Response: { \"requestProcessingTime\": 394, \"done\": true }","title":"API Examples"},{"location":"api/API_Examples/#blue0x-api-examples","text":"","title":"Blue0x API Examples"},{"location":"api/API_Examples/#account-operations","text":"","title":"Account Operations"},{"location":"api/API_Examples/#delete-account-property","text":"Request: https://localhost:2022/nxt? requestType=deleteAccountProperty& recipient=BLX-7A48-47JL-T7LD-D5FS3& property=testkey1& secretPhrase=iWontTellYou& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"4ff58a03d056ee8a3fee89766bf8e4acd008c2147216...\", \"transactionJSON\": { \"senderPublicKey\": \"373522bcd8904f4707472e590cbb67976d40e7af...\", \"signature\": \"26ed697fc82f3b15e6d2c972eff5b195445314aa4bacc8...\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"33f7edaec1034153f8e28a996b13b2b2665d0d0a3e4a194...\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"10023643060833833497\", \"signatureHash\": \"4ff58a03d056ee8a3fee89766bf8e4acd008c21472...\", \"attachment\": { \"property\": \"940296349549404868\", \"version.AccountPropertyDelete\": 1 }, \"senderRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"subtype\": 11, \"amountNQT\": \"0\", \"sender\": \"12745647715474645062\", \"recipientRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"recipient\": \"12745647715474645062\", \"ecBlockHeight\": 754255, \"deadline\": 60, \"transaction\": \"5999080309032613683\", \"timestamp\": 80189128, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"011bc896c7043c00373522bcd8904f4707472e590cbb67976d40e7af39650ea11c...\", \"broadcasted\": false, \"requestProcessingTime\": 3, \"transactionBytes\": \"011bc896c7043c00373522bcd8904f4707472e590cbb67976d40e7af39650ea11cb2be5734...\", \"fullHash\": \"33f7edaec1034153f8e28a996b13b2b2665d0d0a3e4a1942718aa480c6097cf6\", \"transaction\": \"5999080309032613683\" }","title":"Delete Account Property"},{"location":"api/API_Examples/#get-account","text":"Request: https://localhost:2022/nxt? requestType=getAccount& account=BLX-4VNQ-RWZC-4WWQ-GVM8S Response: { \"unconfirmedBalanceNQT\": \"2501162882344\", \"effectiveBalanceNXT\": 13983, \"lessorsInfo\": [ { \"currentHeightTo\": \"341420\", \"nextHeightFrom\": \"341420\", \"effectiveBalanceNXT\": \"544525\", \"nextLesseeRS\": \"BLX-7WVC-W7TJ-REQ2-4VDJD\", \"currentLesseeRS\": \"BLX-7WVC-W7TJ-REQ2-4VDJD\", \"currentHeightFrom\": \"308653\", \"nextHeightTo\": \"374187\" } ], \"currentLessee\": \"7114946486381367146\", \"currentLeasingHeightTo\": 281179, \"forgedBalanceNQT\": \"0\", \"balanceNQT\": \"2501162882344\", \"publicKey\": \"73080c6a224062660184f10ebb7fb431d4593...\", \"requestProcessingTime\": 2, \"assetBalances\": [ { \"balanceQNT\": \"96651298\", \"asset\": \"4551058913252105307\" } ], \"guaranteedBalanceNQT\": \"1398383666344\", \"unconfirmedAssetBalances\": [ { \"unconfirmedBalanceQNT\": \"96651298\", \"asset\": \"4551058913252105307\" } ], \"currentLesseeRS\": \"BLX-TMVC-69YC-SJB4-8YCH7\", \"accountRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"name\": \"mystical\", \"account\": \"17013046603665206934\", \"currentLeasingHeightFrom\": 279739 }","title":"Get Account"},{"location":"api/API_Examples/#get-account-block-count","text":"Request: https://localhost:2022/nxt? requestType=getAccountBlockCount& account=7114946486381367146 Response: { \"numberOfBlocks\": 460, \"requestProcessingTime\": 70 }","title":"Get Account Block Count"},{"location":"api/API_Examples/#get-account-block-ids","text":"Request: https://localhost:2022/nxt? requestType=getAccountBlockIds& account=7114946486381367146& lastIndex=5 Response: { \"blockIds\": [ \"6021945980475236545\", \"11040962152457477526\", \"1157648883168692101\", \"9322994768555364845\", \"12862636636638339558\", \"11535040705139271493\" ], \"requestProcessingTime\": 3 }","title":"Get Account Block Ids"},{"location":"api/API_Examples/#get-account-blocks","text":"Request: https://localhost:2022/nxt? requestType=getAccountBlocks& account=7114946486381367146& lastIndex=0 Response: { \"blocks\": [ { \"previousBlockHash\": \"bd8948556e968f1d532cd286a5dd8fde0159d7950467f1ed8fbf26a31d663e99\", \"payloadLength\": 386, \"totalAmountNQT\": \"0\", \"generationSignature\": \"74138446cacdb30075492670f7e24fb839434818cb877bba174e37361fc899a1\", \"generator\": \"7114946486381367146\", \"generatorPublicKey\": \"dbc809e8237914f25add0d349ea16b2ac05cae6882d0a1782d23605af264d97a\", \"baseTarget\": \"325377698\", \"payloadHash\": \"32df67383f63b74f1331bbdb6f1be424c87a1e6423fc7091d81683481eb6c4ca\", \"generatorRS\": \"BLX-TMVC-69YC-SJB4-8YCH7\", \"nextBlock\": \"3553212706398858282\", \"numberOfTransactions\": 2, \"blockSignature\": \"d30e3f95d547fa922feb31303f877a345d0ad8c232778a4507adf9082b5df3...\", \"transactions\": [ \"1199750337785535382\", \"8975701802988160413\" ], \"version\": 3, \"totalFeeNQT\": \"200000000\", \"previousBlock\": \"2130086549390920125\", \"block\": \"6021945980475236545\", \"height\": 278953, \"timestamp\": 30130340 } ], \"requestProcessingTime\": 3 }","title":"Get Account Blocks"},{"location":"api/API_Examples/#get-account-id","text":"Request: https://localhost:2022/nxt? requestType=getAccountId& secretPhrase=IWontTellYou Response: { \"accountRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"publicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"requestProcessingTime\": 2, \"account\": \"15323192282528158131\" }","title":"Get Account Id"},{"location":"api/API_Examples/#get-account-ledger","text":"Request: https://localhost:2022/nxt? requestType=getAccountLedger& account=BLX-7A48-47JL-T7LD-D5FS3 Response: { \"entries\": [ { \"change\": \"100\", \"eventType\": \"CURRENCY\\_OFFER\\_EXPIRED\", \"ledgerId\": \"532246\", \"holding\": \"6112509426732269765\", \"isTransactionEvent\": true, \"balance\": \"90000\", \"holdingType\": \"UNCONFIRMED\\_CURRENCY\\_BALANCE\", \"accountRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"block\": \"2303344830040052747\", \"event\": \"13236557417702245931\", \"account\": \"12745647715474645062\", \"height\": 736757, \"timestamp\": 78995635 } ], \"requestProcessingTime\": 1 }","title":"Get Account Ledger"},{"location":"api/API_Examples/#get-account-ledger-entry","text":"Request: https://localhost:2022/nxt? requestType=getAccountLedgerEntry& ledgerId=532246 Response: { \"change\": \"100\", \"eventType\": \"CURRENCY\\_OFFER\\_EXPIRED\", \"requestProcessingTime\": 1, \"ledgerId\": \"532246\", \"holding\": \"6112509426732269765\", \"isTransactionEvent\": true, \"balance\": \"90000\", \"holdingType\": \"UNCONFIRMED\\_CURRENCY\\_BALANCE\", \"accountRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"block\": \"2303344830040052747\", \"event\": \"13236557417702245931\", \"account\": \"12745647715474645062\", \"height\": 736757, \"timestamp\": 78995635 }","title":"Get Account Ledger Entry"},{"location":"api/API_Examples/#get-account-lessors","text":"Request: https://localhost:2022/nxt? requestType=getAccountLessors& account=7114946486381367146& height=282497 Response: { \"lessors\": [ { \"guaranteedBalanceNQT\": \"2643314085738687\", \"lessorRS\": \"BLX-MRBN-8DFH-PFMK-A4DBM\", \"lessor\": \"9918441724915080500\" } ], \"accountRS\": \"BLX-TMVC-69YC-SJB4-8YCH7\", \"requestProcessingTime\": 1, \"account\": \"7114946486381367146\", \"height\": 282497 }","title":"Get Account Lessors"},{"location":"api/API_Examples/#get-account-properties","text":"Request: https://localhost:2022/nxt? requestType=getAccountProperties& recipient=BLX-7A48-47JL-T7LD-D5FS3 Response: { \"recipientRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"recipient\": \"12745647715474645062\", \"requestProcessingTime\": 0, \"properties\": [ { \"setterRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"property\": \"testkey1\", \"setter\": \"12745647715474645062\", \"value\": \"testvalue1\" } ] }","title":"Get Account Properties"},{"location":"api/API_Examples/#get-account-public-key","text":"Request: https://localhost:2022/nxt? requestType=getAccountPublicKey& account=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"publicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d...\", \"requestProcessingTime\": 36 }","title":"Get Account Public Key"},{"location":"api/API_Examples/#get-account-transaction-ids","text":"Request: https://localhost:2022/nxt? requestType=getAccountTransactionIds& account=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"transactionIds\": [ \"15200507403046301754\", \"10900022216391397990\" ], \"requestProcessingTime\": 1 }","title":"Get Account Transaction Ids"},{"location":"api/API_Examples/#get-balance","text":"Request: https://localhost:2022/nxt? requestType=getBalance& account=7114946486381367146 Response: { \"unconfirmedBalanceNQT\": \"9246231058415\", \"guaranteedBalanceNQT\": \"9242231058415\", \"effectiveBalanceNXT\": 92422, \"forgedBalanceNQT\": \"260560000000\", \"balanceNQT\": \"9246231058415\", \"requestProcessingTime\": 1 }","title":"Get Balance"},{"location":"api/API_Examples/#get-blockchain-transactions","text":"Request: https://localhost:2022/nxt? requestType=getBlockchainTransactions& account=BLX-4VDY-LNVT-LMAY-FMCKA& lastIndex=0 Response: { \"requestProcessingTime\": 2, \"transactions\": [ { \"signature\": \"0bc2045c2e4291e9595702fc6a9e805f11b65a88a867d515e44b980ef72b440a2...\", \"transactionIndex\": 0, \"type\": 0, \"phased\": false, \"ecBlockId\": \"441034190304176853\", \"signatureHash\": \"31f92d5612115e174748c7a261cd0412e00028639301aae0f0c1ddfc7618b7e7\", \"attachment\": { \"version.OrdinaryPayment\": 0 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"1400000000\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"block\": \"6752144003309284467\", \"blockTimestamp\": 46567698, \"deadline\": 1440, \"timestamp\": 46567612, \"height\": 291611, \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"feeNQT\": \"100000000\", \"confirmations\": 2046, \"fullHash\": \"a26a2a36086e5d13f069dd9da06ce4e6b0418e9a299bec0cda39bfa04a2ca5e3\", \"version\": 1, \"sender\": \"15295723609781267838\", \"recipient\": \"11580081983047651163\", \"ecBlockHeight\": 291600, \"transaction\": \"1395392441102264994\" } ] }","title":"Get Blockchain Transactions"},{"location":"api/API_Examples/#get-guaranteed-balance","text":"Request: https://localhost:2022/nxt? requestType=getGuaranteedBalance& account=7114946486381367146& numberOfConfirmations=1440 Response: { \"guaranteedBalanceNQT\": \"9242231058415\", \"requestProcessingTime\": 0 }","title":"Get Guaranteed Balance"},{"location":"api/API_Examples/#get-unconfirmed-transaction-ids","text":"Request: https://localhost:2022/nxt? requestType=getUnconfirmedTransactionIds& account=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"requestProcessingTime\": 1, \"unconfirmedTransactionIds\": [] }","title":"Get Unconfirmed Transaction Ids"},{"location":"api/API_Examples/#get-unconfirmed-transactions","text":"Request: https://localhost:2022/nxt? requestType=getUnconfirmedTransactions& account=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"unconfirmedTransactions\": [], \"requestProcessingTime\": 1 }","title":"Get Unconfirmed Transactions"},{"location":"api/API_Examples/#search-accounts","text":"Request: https://localhost:2022/nxt? requestType=searchAccounts& query=testnet AND tyler Response: { \"accounts\": [ { \"accountRS\": \"BLX-7C4U-3Z9K-GZM8-CU8EJ\", \"name\": \"Tyler Jordan\", \"description\": \"testnet account\", \"account\": \"12119426358687475802\" } ], \"requestProcessingTime\": 16 }","title":"Search Accounts"},{"location":"api/API_Examples/#send-money","text":"Request: https://localhost:2022/nxt? requestType=sendMoney& secretPhrase=IWontTellYou& recipient=BLX-4VNQ-RWZC-4WWQ-GVM8S& amountNQT=100000000& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"b35eae7d2f01639810d37694138aa0a86fbbf8a9bf58c2be4f2a5b8f0f30b3f7\", \"unsignedTransactionBytes\": \"001046aac6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"5f0378b7390ff5a815eadd1354de533eef682f139362b153576e2207320a6...\", \"feeNQT\": \"100000000\", \"type\": 0, \"fullHash\": \"3a304584f20cf3d2cbbdd9698ff9a166427005ab98fbe9ca4ad6253651ee81f1\", \"version\": 1, \"ecBlockId\": \"17321329645912574173\", \"signatureHash\": \"b35eae7d2f01639810d37694138aa0a86fbbf8a9bf58c2be4f2a5b8f0f30b3f7\", \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 0, \"amountNQT\": \"100000000\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"recipient\": \"17013046603665206934\", \"ecBlockHeight\": 275727, \"deadline\": 60, \"transaction\": \"15200507403046301754\", \"timestamp\": 29796934, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 8475, \"transactionBytes\": \"001046aac6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143...\", \"fullHash\": \"3a304584f20cf3d2cbbdd9698ff9a166427005ab98fbe9ca4ad6253651ee81f1\", \"transaction\": \"15200507403046301754\" }","title":"Send Money"},{"location":"api/API_Examples/#set-account-info","text":"Request: https://localhost:2022/nxt? requestType=setAccountInfo& secretPhrase=IWontTellYou& name=iwonttellyou description=example account feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"15917aafd59ad9cece7dfc127ab256711d1c58a8ed1a0dc7334949ca826d8a32\", \"unsignedTransactionBytes\": \"0115dfeecb013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"3f5167a3a23677c85aba7fbbc8bc31cddf540a632abebee4a80fe08ba92b9a0...\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"2d31c26aa2b0ae4cf233cc4035c555bca0c579bdcef24bc9819132dc2ce5b2e5\", \"version\": 1, \"ecBlockId\": \"17558522603047297060\", \"signatureHash\": \"15917aafd59ad9cece7dfc127ab256711d1c58a8ed1a0dc7334949ca826d8a32\", \"attachment\": { \"name\": \"iwonttellyou\", \"description\": \"example account\", \"version.AccountInfo\": 1 }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 5, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"ecBlockHeight\": 279080, \"deadline\": 60, \"transaction\": \"5525548004452479277\", \"timestamp\": 30142175, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 8553, \"transactionBytes\": \"0115dfeecb013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"2d31c26aa2b0ae4cf233cc4035c555bca0c579bdcef24bc9819132dc2ce5b2e5\", \"transaction\": \"5525548004452479277\" }","title":"Set Account Info"},{"location":"api/API_Examples/#set-account-property","text":"Request: https://localhost:2022/nxt? requestType=setAccountProperty& secretPhrase=iwonttellyou& property=country& value=switzerland& recipient=BLX-EZQ9-35P5-XZ8C-4LW87& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"34a690abc9f7fe4749da49d996e875e961aa0d38d6b80cdca9a01a7614004089\", \"transactionJSON\": { \"senderPublicKey\": \"b0db10704a831f1a0fd028e947784811e88fbe0fde25dc1f68209a2d9f93be13\", \"signature\": \"f5fd4b881c5625c778ffe38bced33d44231eda406e95d9068dea69407ea3370dc873f52a123a0cbe590ecf4adf2a3c6238dc26c73ee63aeb7ac4331958b53a1e\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"d94baf764f0b7e47dbbe30c5aef1694fef6dfd2ecc7c86e29eefee7e6d1b2b39\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"1026208230615777523\", \"signatureHash\": \"34a690abc9f7fe4749da49d996e875e961aa0d38d6b80cdca9a01a7614004089\", \"attachment\": { \"property\": \"\\\\\"switzerland\\\\\"\", \"value\": \"\\\\\"country\\\\\"\", \"version.AccountProperty\": 1 }, \"senderRS\": \"BLX-EZQ9-35P5-XZ8C-4LW87\", \"subtype\": 10, \"amountNQT\": \"0\", \"sender\": \"2493747385666535111\", \"recipientRS\": \"BLX-EZQ9-35P5-XZ8C-4LW87\", \"recipient\": \"2493747385666535111\", \"ecBlockHeight\": 684730, \"deadline\": 360, \"transaction\": \"5151567459679947737\", \"timestamp\": 72072027, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"011a5bbb4b046801b0db10704a831f1a0fd028e947784811e88fbe0fde25dc1f68209a2d9f93be13c77e36ea08929b22000000000000000000e1f5050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ba720a00f3806fdbf2d23d0e010d22737769747a65726c616e64220922636f756e74727922\", \"broadcasted\": true, \"requestProcessingTime\": 83, \"transactionBytes\": \"011a5bbb4b046801b0db10704a831f1a0fd028e947784811e88fbe0fde25dc1f68209a2d9f93be13c77e36ea08929b22000000000000000000e1f505000000000000000000000000000000000000000000000000000000000000000000000000f5fd4b881c5625c778ffe38bced33d44231eda406e95d9068dea69407ea3370dc873f52a123a0cbe590ecf4adf2a3c6238dc26c73ee63aeb7ac4331958b53a1e00000000ba720a00f3806fdbf2d23d0e010d22737769747a65726c616e64220922636f756e74727922\", \"fullHash\": \"d94baf764f0b7e47dbbe30c5aef1694fef6dfd2ecc7c86e29eefee7e6d1b2b39\", \"transaction\": \"5151567459679947737\"","title":"Set Account Property"},{"location":"api/API_Examples/#start-funding-monitor","text":"Request: https://localhost:2022/nxt? requestType=startFundingMonitor& property=funding& amount=1000000000& threshold=15000000000& interval=10& secretPhrase=IWontTellYou Response: { \"started\": true, \"requestProcessingTime\": 5 }","title":"Start Funding Monitor"},{"location":"api/API_Examples/#stop-funding-monitor","text":"Request: https://localhost:2022/nxt? requestType=stopFundingMonitor& property=funding& secretPhrase=IWontTellYou Response: { \"stopped\": 1, \"requestProcessingTime\": 5 }","title":"Stop Funding Monitor"},{"location":"api/API_Examples/#account-control-operations","text":"","title":"Account Control Operations"},{"location":"api/API_Examples/#get-all-phasing-only-controls","text":"Request: https://localhost:2022/nxt? requestType=getAllPhasingOnlyControls& firstIndex=0& lastIndex=1 Response: { \"phasingOnlyControls\": [ { \"minDuration\": 0, \"votingModel\": 0, \"minBalance\": \"0\", \"accountRS\": \"BLX-AVGK-SKJZ-583G-A689A\", \"quorum\": \"2\", \"maxFees\": \"0\", \"whitelist\": [ { \"whitelistedRS\": \"BLX-EVHD-5FLM-3NMQ-G46NR\", \"whitelisted\": \"16992224448242675179\" }, { \"whitelistedRS\": \"BLX-XK4R-7VJU-6EQG-7R335\", \"whitelisted\": \"5873880488492319831\" }, { \"whitelistedRS\": \"BLX-SZKV-J8TH-GSM9-9LKV6\", \"whitelisted\": \"8245583500397018683\" } ], \"minBalanceModel\": 0, \"account\": \"9519700060090428881\", \"maxDuration\": 0 }, { \"minDuration\": 10, \"votingModel\": 0, \"minBalance\": \"0\", \"accountRS\": \"BLX-VSTJ-MHZK-A6N3-CHRRH\", \"quorum\": \"1\", \"maxFees\": \"1000000000\", \"whitelist\": [ { \"whitelistedRS\": \"BLX-D5A2-7CCE-G35P-BB324\", \"whitelisted\": \"10448396398360890624\" }, { \"whitelistedRS\": \"BLX-KGPY-DF8U-HSF9-GQ69A\", \"whitelisted\": \"16437178058884561598\" } ], \"minBalanceModel\": 0, \"account\": \"12096369102442849072\", \"maxDuration\": 100 } ], \"requestProcessingTime\": 0 }","title":"Get All Phasing Only Controls"},{"location":"api/API_Examples/#get-phasing-only-control","text":"Request: https://localhost:2022/nxt? requestType=getPhasingOnlyControl& account=BLX-AVGK-SKJZ-583G-A689A Response: { \"minDuration\": 0, \"votingModel\": 0, \"minBalance\": \"0\", \"accountRS\": \"BLX-AVGK-SKJZ-583G-A689A\", \"quorum\": \"2\", \"maxFees\": \"0\", \"whitelist\": [ { \"whitelistedRS\": \"BLX-EVHD-5FLM-3NMQ-G46NR\", \"whitelisted\": \"16992224448242675179\" }, { \"whitelistedRS\": \"BLX-XK4R-7VJU-6EQG-7R335\", \"whitelisted\": \"5873880488492319831\" }, { \"whitelistedRS\": \"BLX-SZKV-J8TH-GSM9-9LKV6\", \"whitelisted\": \"8245583500397018683\" } ], \"requestProcessingTime\": 1, \"minBalanceModel\": 0, \"account\": \"9519700060090428881\", \"maxDuration\": 0 }","title":"Get Phasing Only Control"},{"location":"api/API_Examples/#set-phasing-only-control","text":"Request: https://localhost:2022/nxt? requestType=setPhasingOnlyControl& controlVotingModel=0& controlQuorum=1& controlWhitelisted=BLX-5MYN-AP7M-NKMH-CRQJZ& secretPhrase=IWontTellYou& feeNQT:100000000& deadline=60 Response: { \"signatureHash\": \"bbb24087ab3639f508da77413a63ed8c45431ec9b7f0413fd574faea0de7e70a\", \"transactionJSON\": { \"senderPublicKey\": \"373522bcd8904f4707472e590cbb67976d40e7af39650ea11cb2be5734cdf30c\", \"signature\": \"eacaf3dc98c0e2ddc1b7b546209cecf092f16bb9e2fe9fd09760fb5815573f063...\", \"feeNQT\": \"100000000\", \"type\": 4, \"fullHash\": \"b6b7ac7a29f9f638244f1025c39199e8b5f8f7c5415f77ef0ca95c0f206e1e2d\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"12092908062633562059\", \"signatureHash\": \"bbb24087ab3639f508da77413a63ed8c45431ec9b7f0413fd574faea0de7e70a\", \"attachment\": { \"version.SetPhasingOnly\": 1, \"controlMaxFees\": \"0\", \"controlMinDuration\": 0, \"controlMaxDuration\": 0, \"phasingControlParams\": { \"phasingHolding\": \"0\", \"phasingQuorum\": 1, \"phasingWhitelist\": [ \"12664921794733526996\" ], \"phasingMinBalance\": 0, \"phasingMinBalanceModel\": 0, \"phasingVotingModel\": 0 } }, \"senderRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"subtype\": 1, \"amountNQT\": \"0\", \"sender\": \"12745647715474645062\", \"ecBlockHeight\": 767270, \"deadline\": 60, \"transaction\": \"4104742066941900726\", \"timestamp\": 80779288, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"04111898d0043c00373522bcd8904f4707472e590cbb67976d40e7af39650ea...\", \"broadcasted\": true, \"requestProcessingTime\": 5, \"transactionBytes\": \"04111898d0043c00373522bcd8904f4707472e590cbb67976d40e7af39650ea1...\", \"fullHash\": \"b6b7ac7a29f9f638244f1025c39199e8b5f8f7c5415f77ef0ca95c0f206e1e2d\", \"transaction\": \"4104742066941900726\" }","title":"Set Phasing Only Control"},{"location":"api/API_Examples/#alias-operations","text":"","title":"Alias Operations"},{"location":"api/API_Examples/#buy-sell-alias","text":"Request: https://localhost:2022/nxt? requestType=sellAlias& secretPhrase=IWontTellYou& aliasName=nextus& priceNQT=5& recipient=BLX-4VNQ-RWZC-4WWQ-GVM8S& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"d6f026cd8a883b5b6ff78a7d0121e4847eb6744b02757427de6d7ca0bf304226\", \"unsignedTransactionBytes\": \"01166e01d4013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"2041afc1687da2693ba092e33a84f665ad461e3b6762c18af61778261bc7e...\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"14a3eeb17cd4082db287259a768d32065d4cf5397ed6053fffa25e92a8a66ac7\", \"version\": 1, \"ecBlockId\": \"1612829598027150491\", \"signatureHash\": \"d6f026cd8a883b5b6ff78a7d0121e4847eb6744b02757427de6d7ca0bf304226\", \"attachment\": { \"alias\": \"nextus\", \"priceNQT\": \"5\", \"version.AliasSell\": 1 }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 6, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"recipient\": \"17013046603665206934\", \"ecBlockHeight\": 284050, \"deadline\": 60, \"transaction\": \"3245077163546682132\", \"timestamp\": 30671214, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 8515, \"transactionBytes\": \"01166e01d4013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143...\", \"fullHash\": \"14a3eeb17cd4082db287259a768d32065d4cf5397ed6053fffa25e92a8a66ac7\", \"transaction\": \"3245077163546682132\" }","title":"Buy / Sell Alias"},{"location":"api/API_Examples/#set-alias","text":"Request: https://localhost:2022/nxt? requestType=setAlias& secretPhrase=IWontTellYou& aliasName=iwonttellyou& aliasURI=acct:nxt-l6fm-89wk-vk8p-fcrbb@nxt& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"0dc7e07acef27fe86686cfabe2d1bd57c0c038f9465c3fe3d10f67932a97af10\", \"unsignedTransactionBytes\": \"011135d0d3013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"d92aefbab189b6e61f890c34b06a47e14a1a2b2ce868f77a4591d2067c51d...\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"53917acbf44109391609a9bb57832c0d5903301e3d2bd6ffcf45cf893480f5a1\", \"version\": 1, \"ecBlockId\": \"4181883296304410027\", \"signatureHash\": \"0dc7e07acef27fe86686cfabe2d1bd57c0c038f9465c3fe3d10f67932a97af10\", \"attachment\": { \"alias\": \"iwonttellyou\", \"version.AliasAssignment\": 1, \"uri\": \"acct:nxt-l6fm-89wk-vk8p-fcrbb@nxt\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 1, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"ecBlockHeight\": 283939, \"deadline\": 60, \"transaction\": \"4109888654593921363\", \"timestamp\": 30658613, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 8104, \"transactionBytes\": \"011135d0d3013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473...\", \"fullHash\": \"53917acbf44109391609a9bb57832c0d5903301e3d2bd6ffcf45cf893480f5a1\", \"transaction\": \"4109888654593921363\" }","title":"Set Alias"},{"location":"api/API_Examples/#delete-alias","text":"Request: https://localhost:2022/nxt? requestType=deleteAlias& aliasName=mystical Response: { \"signatureHash\": \"a6e68daed99c1015dd12546c042466612b52a9f5193d8513f7f12684aba5bf1d\", \"unsignedTransactionBytes\": \"011809e60c023c0010f09c34f225d425306e5be55a49469081...\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"a5088bc6469e528d884e7fd3c49afeefc8656dd59c9fa5ffeab2a17b465f6d03e77...\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"63afc769e677b6210617ff7a9f5be2d7fe1aea7e46ccad968017d28df578fabf\", \"version\": 1, \"ecBlockId\": \"17895923487075501156\", \"signatureHash\": \"a6e68daed99c1015dd12546c042466612b52a9f5193d8513f7f12684aba5bf1d\", \"attachment\": { \"version.AliasDelete\": 1, \"alias\": \"mystical\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 8, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 161137, \"deadline\": 60, \"transaction\": \"2429260880513838947\", \"timestamp\": 34399753, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 52, \"transactionBytes\": \"011809e60c023c0010f09c34f225d425306e5be55a4946908156072...\", \"transaction\": \"2429260880513838947\" }","title":"Delete Alias"},{"location":"api/API_Examples/#get-alias","text":"Request: https://localhost:2022/nxt? requestType=getAlias& alias=15515279700680480368 Response: { \"aliasURI\": \"http:\\\\/\\\\/google.com\", \"aliasName\": \"google\", \"accountRS\": \"BLX-FLVS-VRBV-LDPD-6DZ9W\", \"alias\": \"15515279700680480368\", \"requestProcessingTime\": 1, \"account\": \"5629477397208681336\", \"timestamp\": 2409343 }","title":"Get Alias"},{"location":"api/API_Examples/#get-alias-count","text":"Request: https://localhost:2022/nxt? requestType=getAliasCount& account=BLX-FLVS-VRBV-LDPD-6DZ9W Response: { \"numberOfAliases\": 200, \"requestProcessingTime\": 2 }","title":"Get Alias Count"},{"location":"api/API_Examples/#get-aliases","text":"Request: https://localhost:2022/nxt? requestType=getAliases& account=5629477397208681336& lastIndex=1 Response: { \"aliases\": [ { \"aliasURI\": \"\", \"aliasName\": \"101\", \"accountRS\": \"BLX-FLVS-VRBV-LDPD-6DZ9W\", \"alias\": \"8952438483248557843\", \"account\": \"5629477397208681336\", \"timestamp\": 2409893 } ], \"requestProcessingTime\": 1 }","title":"Get Aliases"},{"location":"api/API_Examples/#get-aliases-like","text":"Request: https://localhost:2022/nxt? requestType=getAliasesLike& aliasPrefix=mysteri Response: { \"aliases\": [ { \"aliasURI\": \"\", \"aliasName\": \"mysteries\", \"accountRS\": \"BLX-9DZL-XFE2-EWE5-HVVAY\", \"alias\": \"13234331415538245332\", \"account\": \"18384674354580664306\", \"timestamp\": 4856820 }, { \"aliasURI\": \"anm\", \"aliasName\": \"mysterious\", \"accountRS\": \"BLX-AHBB-DSVC-WS2L-EW8BC\", \"alias\": \"8033154744709486670\", \"account\": \"14205721421835156777\", \"timestamp\": 2417903 } ], \"requestProcessingTime\": 1 }","title":"Get Aliases Like"},{"location":"api/API_Examples/#arbitrary-message-system-operations","text":"","title":"Arbitrary Message System Operations"},{"location":"api/API_Examples/#decrypt-from","text":"Request: https://localhost:2022/nxt? requestType=decryptFrom& secretPhrase=IWontTellYou& account=BLX-L6FM-89WK-VK8P-FCRBB& data=5c30bd27cc86a8ab0349aaf66deae3c0a9db5675b5c4ba973dd47f37e06157...& nonce=7f3c9082c73a7bd825aa48d23fc138fd05a466700ff9fc3a040bbb29d3a60ee1& Response: { \"decryptedMessage\": \"test message\", \"requestProcessingTime\": 2 }","title":"Decrypt From"},{"location":"api/API_Examples/#download-prunable-message","text":"Request: https://localhost:2022/nxt? requestType=downloadPrunableMessage& transaction=264609232955144528& retrieve=true Response: The file in binary format.","title":"Download Prunable Message"},{"location":"api/API_Examples/#encrypt-to","text":"Request: https://localhost:2022/nxt? requestType=encryptTo& secretPhrase=IWontTellYou& recipient=BLX-L6FM-89WK-VK8P-FCRBB& messageToEncrypt=test message& Response: { \"data\": \"5c30bd27cc86a8ab0349aaf66deae3c0a9db5675b5c4ba973dd47f37e06157...\", \"requestProcessingTime\": 48, \"nonce\": \"7f3c9082c73a7bd825aa48d23fc138fd05a466700ff9fc3a040bbb29d3a60ee1\" }","title":"Encrypt To"},{"location":"api/API_Examples/#get-all-prunable-messages","text":"Request: https://localhost:2022/nxt? requestType=getAllPrunableMessages& lastIndex=0 Response: { \"prunableMessages\": [ { \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"sender\": \"15295723609781267838\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"recipient\": \"11580081983047651163\", \"blockTimestamp\": 46382992, \"message\": \"This is a test prunable plain message.\", \"transaction\": \"4628485271017409467\", \"isText\": true, \"transactionTimestamp\": 46382948 } ], \"requestProcessingTime\": 0 }","title":"Get All Prunable Messages"},{"location":"api/API_Examples/#get-prunable-message","text":"Request: https://localhost:2022/nxt? requestType=getPrunableMessage& transaction=16832262845403902696& secretPhrase=secretPhrase Response: { \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"encryptedMessage\": { \"data\": \"ba6baa8361ac5bdb9cb591cee616dc5801a32ddf05b66a4ee527cd8d57b0...\", \"nonce\": \"41f93e32997c70937a005e5b0b42546a1efa9ea9eb012f98d7a92d0c5a8855a4\" }, \"sender\": \"15295723609781267838\", \"decryptedMessage\": \"test prunable encrypted message\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"recipient\": \"11580081983047651163\", \"blockTimestamp\": 46117919, \"requestProcessingTime\": 3, \"transaction\": \"16832262845403902696\", \"encryptedMessageIsText\": true, \"transactionTimestamp\": 46117594, \"isCompressed\": true }","title":"Get Prunable Message"},{"location":"api/API_Examples/#get-prunable-messages","text":"Request: https://localhost:2022/nxt? requestType=getPrunableMessages& account=BLX-4VDY-LNVT-LMAY-FMCKA& lastIndex=0 Response: { \"prunableMessages\": [ { \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"encryptedMessage\": { \"data\": \"ba6baa8361ac5bdb9cb591cee616dc5801a32ddf05b66a4ee527cd8d57b0a...\", \"nonce\": \"41f93e32997c70937a005e5b0b42546a1efa9ea9eb012f98d7a92d0c5a8855a4\" }, \"sender\": \"15295723609781267838\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"recipient\": \"11580081983047651163\", \"blockTimestamp\": 46117919, \"transaction\": \"16832262845403902696\", \"isText\": true, \"transactionTimestamp\": 46117594, \"isCompressed\": true } ], \"requestProcessingTime\": 1 }","title":"Get Prunable Messages"},{"location":"api/API_Examples/#get-shared-key","text":"Request: https://localhost:2022/nxt? requestType=getSharedKey& account=BLX-5MYN-AP7M-NKMH-CRQJZ& secretPhrase=IWontTellYou& nonce=0102030405060708091011121314151617181920212223242526272829303132 Response: { \"sharedKey\": \"927118faa4850afa7fb3ced7b17eb4968ec4f1c0a405b0890552bb54a67d0eba\", \"requestProcessingTime\": 1 }","title":"Get Shared Key"},{"location":"api/API_Examples/#read-message","text":"Request: https://localhost:2022/nxt? requestType=readMessage& transaction=9908575668289607167& secretPhrase=IWontTellYou& Response: { \"requestProcessingTime\": 1, \"message\": \"Test message.\", \"decryptedMessage\": \"Test message (encrypted).\", \"decryptedMessageToSelf\": \"abc123\" }","title":"Read Message"},{"location":"api/API_Examples/#send-message","text":"Request: https://localhost:2022/nxt? requestType=sendMessage& secretPhrase=IWontTellYou& recipient=BLX-4VNQ-RWZC-4WWQ-GVM8S& message=Test Message.& deadline=60 Response: { \"signatureHash\": \"795c58938a50d691f3f2b88bfaf03267236e972e1c068e0a5e11aeb606597f17\", \"unsignedTransactionBytes\": \"01100593ce013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c14...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"e916dbbfec51ca97ae76b1b190d1c74328f74c3c43ed3a06f1ca0ea250116...\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"ff157b8a125582898b5c50d32a62f725602d5197af236fabcd6ec978b6861528\", \"version\": 1, \"ecBlockId\": \"6060075251340574063\", \"signatureHash\": \"795c58938a50d691f3f2b88bfaf03267236e972e1c068e0a5e11aeb606597f17\", \"attachment\": { \"version.Message\": 1, \"messageIsText\": true, \"message\": \"Test message.\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"recipient\": \"17013046603665206934\", \"ecBlockHeight\": 280756, \"deadline\": 60, \"transaction\": \"9908575668289607167\", \"timestamp\": 30315269, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 11379, \"transactionBytes\": \"01100593ce013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"ff157b8a125582898b5c50d32a62f725602d5197af236fabcd6ec978b6861528\", \"transaction\": \"9908575668289607167\" }","title":"Send Message"},{"location":"api/API_Examples/#verify-prunable-message","text":"Request: https://localhost:2022/nxt? requestType=verifyPrunableMessage& message=This is a test prunable plain message. Response: { \"version.PrunablePlainMessage\": 1, \"verify\": true, \"messageIsText\": true, \"messageHash\": \"da99da8026e30d971340ef54803543af3aa48ea215f80bd9375457bad8effb3f\", \"requestProcessingTime\": 1, \"message\": \"This is a test prunable plain message.\" }","title":"Verify Prunable Message"},{"location":"api/API_Examples/#asset-exchange-operations","text":"","title":"Asset Exchange Operations"},{"location":"api/API_Examples/#cancel-order","text":"Request: https://localhost:2022/nxt? requestType=cancelBidOrder& secretPhrase=IWontTellYou& order=17185236428295897167& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"20264f33a06331f6a8d7c4362d0525aee25e4ef991653f14bbfb1b2beebba433\", \"unsignedTransactionBytes\": \"02153c6ed6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"30cf47942179f5969369699b548f5a3517ef7ff71b337db630ea5f8b6e740...\", \"feeNQT\": \"100000000\", \"type\": 2, \"fullHash\": \"725f441d9f50a9b2e02d780098a827b1015ec902199becd493bfa73a4843ae89\", \"version\": 1, \"ecBlockId\": \"196207598250363138\", \"signatureHash\": \"20264f33a06331f6a8d7c4362d0525aee25e4ef991653f14bbfb1b2beebba433\", \"attachment\": { \"version.BidOrderCancellation\": 1, \"order\": \"17185236428295897167\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 5, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"ecBlockHeight\": 285586, \"deadline\": 60, \"transaction\": \"12873909654136315762\", \"timestamp\": 30830140, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 7640, \"transactionBytes\": \"02153c6ed6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"725f441d9f50a9b2e02d780098a827b1015ec902199becd493bfa73a4843ae89\", \"transaction\": \"12873909654136315762\" }","title":"Cancel Order"},{"location":"api/API_Examples/#delete-asset-shares","text":"Request: https://localhost:2022/nxt? requestType=deleteAssetShares& asset=5920455660623529270& quantityQNT=100& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60& broadcast=false Response: { \"signatureHash\": \"883599a340375c387e7b27a4f2c37f4ee960760b31e4b1a9c604663c6b84c708\", \"transactionJSON\": { \"senderPublicKey\": \"373522bcd8904f4707472e590cbb67976d40e7af39650ea11cb2be5734cdf30c\", \"signature\": \"b91a664d9ee99399ebba913fa56abea26fbf4b84fe10fa4f76a29a8eae16810e61...\", \"feeNQT\": \"100000000\", \"type\": 2, \"fullHash\": \"8929fa9d30fd38c8811e079835b3959c1a3f8503df8999d5a858831ea6ba7741\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"9535861265974556985\", \"signatureHash\": \"883599a340375c387e7b27a4f2c37f4ee960760b31e4b1a9c604663c6b84c708\", \"attachment\": { \"quantityQNT\": \"100\", \"version.AssetDelete\": 1, \"asset\": \"5920455660623529270\" }, \"senderRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"subtype\": 7, \"amountNQT\": \"0\", \"sender\": \"12745647715474645062\", \"ecBlockHeight\": 757498, \"deadline\": 60, \"transaction\": \"14427559791532059017\", \"timestamp\": 80204814, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"02170ed4c7043c00373522bcd8904f4707472e590cbb67976d40e7a...\", \"broadcasted\": false, \"requestProcessingTime\": 2, \"transactionBytes\": \"02170ed4c7043c00373522bcd8904f4707472e590cbb67976d40e7af39650ea...\", \"fullHash\": \"8929fa9d30fd38c8811e079835b3959c1a3f8503df8999d5a858831ea6ba7741\", \"transaction\": \"14427559791532059017\" }","title":"Delete Asset Shares"},{"location":"api/API_Examples/#dividend-payment","text":"Request: https://localhost:2022/nxt? requestType=dividendPayment& asset=3517042713515967694& height=161157& amountNQTPerQNT=100000000 Response: { \"signatureHash\": \"5d92fee3570b7b058ace2387f5b4eef4377ea738e6a6c2aabc06bd9f6871e4b4\", \"unsignedTransactionBytes\": \"02160feb0c023c0010f09c34f225d425306e5be55a49469081...\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"61e2398087b078bdba24021d909e937c2d5fe157a09fa3c82d910e7b5843e00cef2...\", \"feeNQT\": \"100000000\", \"type\": 2, \"fullHash\": \"27b52e61813b73fdf9ff3b1bacf3b344d3ed60e8c94db2c9d0518c8483150770\", \"version\": 1, \"ecBlockId\": \"17871828515938613022\", \"signatureHash\": \"5d92fee3570b7b058ace2387f5b4eef4377ea738e6a6c2aabc06bd9f6871e4b4\", \"attachment\": { \"version.DividendPayment\": 1, \"amountNQTPerQNT\": \"100000000\", \"asset\": \"3517042713515967694\", \"height\": 161157 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 6, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 161151, \"deadline\": 60, \"transaction\": \"18263006340784764199\", \"timestamp\": 34401039, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 111, \"transactionBytes\": \"02160feb0c023c0010f09c34f225d425306e5be55a49469081560...\", \"fullHash\": \"27b52e61813b73fdf9ff3b1bacf3b344d3ed60e8c94db2c9d0518c8483150770\", \"transaction\": \"18263006340784764199\" }","title":"Dividend Payment"},{"location":"api/API_Examples/#get-account-asset-count","text":"Request: https://localhost:2022/nxt? requestType=getAccountAssetCount& account=BLX-8N9W-TN4F-YA2S-H5B7R Response: { \"requestProcessingTime\": 1, \"numberOfAssets\": 3 }","title":"Get Account Asset Count"},{"location":"api/API_Examples/#get-account-assets","text":"Request: https://localhost:2022/nxt? requestType=getAccountAssets& account=BLX-4VNQ-RWZC-4WWQ-GVM8S Response: { \"accountAssets\": [ { \"quantityQNT\": \"68013764\", \"unconfirmedQuantityQNT\": \"68013764\", \"decimals\": 0, \"name\": \"Test\", \"asset\": \"17554243582654188572\" } ], \"requestProcessingTime\": 1 }","title":"Get Account Assets"},{"location":"api/API_Examples/#get-account-current-order-ids","text":"Request: https://localhost:2022/nxt? requestType=getAccountCurrentBidOrderIds& account=BLX-L6FM-89WK-VK8P-FCRBB& asset=17554243582654188572 Response: { \"bidOrderIds\": [ \"17185236428295897167\" ], \"requestProcessingTime\": 4 }","title":"Get Account Current Order Ids"},{"location":"api/API_Examples/#get-account-current-orders","text":"Request: https://localhost:2022/nxt? requestType=getAccountCurrentBidOrders& account=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"bidOrders\": [ { \"quantityQNT\": \"1000000\", \"priceNQT\": \"100\", \"accountRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"asset\": \"17554243582654188572\", \"type\": \"bid\", \"account\": \"15323192282528158131\", \"order\": \"17185236428295897167\", \"height\": 285549 } ], \"requestProcessingTime\": 1 }","title":"Get Account Current Orders"},{"location":"api/API_Examples/#get-all-assets","text":"Request: https://localhost:2022/nxt? requestType=getAllAssets& firstIndex=13& lastIndex=13 Response: { \"assets\": [ { \"quantityQNT\": \"2100000000000000\", \"numberOfAccounts\": 31, \"accountRS\": \"BLX-3TKA-UH62-478B-DQU6K\", \"decimals\": 8, \"numberOfTransfers\": 63, \"name\": \"mgwBTC\", \"description\": \"Production Multigateway BTC (mgwBTC) is backed 100% by...\", \"numberOfTrades\": 9, \"asset\": \"17554243582654188572\", \"account\": \"13300069592148796968\" } ], \"requestProcessingTime\": 13 }","title":"Get All Assets"},{"location":"api/API_Examples/#get-all-open-orders","text":"Request: https://localhost:2022/nxt? requestType=getAllOpenBidOrders& firstIndex=123& lastIndex=123 Response: { \"requestProcessingTime\": 5631, \"openOrders\": [ { \"quantityQNT\": \"1000000\", \"priceNQT\": \"101\", \"accountRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"asset\": \"17554243582654188572\", \"type\": \"bid\", \"account\": \"15323192282528158131\", \"order\": \"12743274869785967304\", \"height\": 285577 } ] }","title":"Get All Open Orders"},{"location":"api/API_Examples/#get-all-trades","text":"Request: https://localhost:2022/nxt? requestType=getAllTrades& lastIndex=0 Response: { \"trades\": [ { \"seller\": \"14968762166783718535\", \"quantityQNT\": \"10000\", \"bidOrder\": \"1166717226538227076\", \"sellerRS\": \"BLX-8F69-W9Z9-8M6Y-ETXGZ\", \"buyer\": \"202478233571806601\", \"priceNQT\": \"19796\", \"askOrder\": \"16222071953599729591\", \"buyerRS\": \"BLX-RMEB-W7TE-28EM-2SUM7\", \"decimals\": 8, \"name\": \"mgwBTC\", \"block\": \"8807797247643599359\", \"asset\": \"4551058913252105307\", \"askOrderHeight\": 285768, \"bidOrderHeight\": 286453, \"tradeType\": \"buy\", \"timestamp\": 30920039, \"height\": 286453 } ], \"requestProcessingTime\": 25840 }","title":"Get All Trades"},{"location":"api/API_Examples/#get-asset","text":"Request: https://localhost:2022/nxt? requestType=getAsset& asset=17554243582654188572 Response: { \"quantityQNT\": \"2100000000000000\", \"numberOfAccounts\": 31, \"accountRS\": \"BLX-3TKA-UH62-478B-DQU6K\", \"decimals\": 8, \"numberOfTransfers\": 63, \"name\": \"mgwBTC\", \"description\": \"Production Multigateway BTC (mgwBTC) is backed 100% by...\", \"numberOfTrades\": 9, \"requestProcessingTime\": 11, \"asset\": \"17554243582654188572\", \"account\": \"13300069592148796968\" }","title":"Get Asset"},{"location":"api/API_Examples/#get-asset-account-count","text":"Request: https://localhost:2022/nxt? requestType=getAssetAccountCount& asset=17554243582654188572 Response: { \"numberOfAccounts\": 38, \"requestProcessingTime\": 14 }","title":"Get Asset Account Count"},{"location":"api/API_Examples/#get-asset-accounts","text":"Request: https://localhost:2022/nxt? requestType=getAssetAccounts& asset=5539238107226883203 Response: { \"accountAssets\": [ { \"quantityQNT\": \"100000000\", \"accountRS\": \"BLX-JTE5-HB7Y-QPS5-B58MZ\", \"unconfirmedQuantityQNT\": \"100000000\", \"asset\": \"5539238107226883203\", \"account\": \"11514793277306463619\" } ], \"requestProcessingTime\": 19 }","title":"Get Asset Accounts"},{"location":"api/API_Examples/#get-asset-deletes","text":"Request: https://localhost:2022/nxt? requestType=getAssetDeletes& asset=5920455660623529270 Response: { \"deletes\": [ { \"quantityQNT\": \"1000\", \"assetDelete\": \"16186302132012496205\", \"accountRS\": \"BLX-G885-AKDX-5G2B-BLUCG\", \"asset\": \"5920455660623529270\", \"account\": \"10892890577210644675\", \"height\": 678815, \"timestamp\": 75619271 }, { \"quantityQNT\": \"1\", \"assetDelete\": \"5520627816808994883\", \"accountRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"asset\": \"5920455660623529270\", \"account\": \"12745647715474645062\", \"height\": 513529, \"timestamp\": 65930633 }, { \"quantityQNT\": \"1\", \"assetDelete\": \"14523372185703177675\", \"accountRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"asset\": \"5920455660623529270\", \"account\": \"12745647715474645062\", \"height\": 512164, \"timestamp\": 65851395 } ], \"requestProcessingTime\": 3 }","title":"Get Asset Deletes"},{"location":"api/API_Examples/#get-asset-dividends","text":"Request: https://localhost:2022/nxt? requestType=getAssetDividends& asset=4348103880042995903& timestamp=105414366 Response: { \"dividends\": [ { \"assetDividend\": \"9638088763182480941\", \"numberOfAccounts\": 391, \"amountNQTPerQNT\": \"15\", \"totalDividend\": \"31399603179510\", \"dividendHeight\": 1332177, \"asset\": \"4348103880042995903\", \"height\": 1332178, \"timestamp\": 111043612 }, { \"assetDividend\": \"15350389444990902579\", \"numberOfAccounts\": 374, \"amountNQTPerQNT\": \"28\", \"totalDividend\": \"51709584601752\", \"dividendHeight\": 1287433, \"asset\": \"4348103880042995903\", \"height\": 1287434, \"timestamp\": 108351797 }, { \"assetDividend\": \"8213383200925147837\", \"numberOfAccounts\": 309, \"amountNQTPerQNT\": \"22\", \"totalDividend\": \"29425292831902\", \"dividendHeight\": 1238568, \"asset\": \"4348103880042995903\", \"height\": 1238569, \"timestamp\": 105414366 } ], \"requestProcessingTime\": 5 }","title":"Get Asset Dividends"},{"location":"api/API_Examples/#get-asset-ids","text":"Request: https://localhost:2022/nxt? requestType=getAssetIds& firstIndex=15& lastIndex=15 Response: { \"assetIds\": [ \"17554243582654188572\" ], \"requestProcessingTime\": 1 }","title":"Get Asset Ids"},{"location":"api/API_Examples/#get-asset-transfers","text":"Request: https://localhost:2022/nxt? requestType=getAssetTransfers& asset=17554243582654188572& lastIndex=0 Response: { \"transfers\": [ { \"quantityQNT\": \"500000\", \"senderRS\": \"BLX-9K6X-4ZQS-PCQN-465T4\", \"assetTransfer\": \"15255934090738722602\", \"sender\": \"2406158154854548637\", \"recipientRS\": \"BLX-YMEM-ERX3-BFUZ-4MQ4P\", \"decimals\": 8, \"recipient\": \"3065494931320556947\", \"name\": \"mgwBTC\", \"asset\": \"17554243582654188572\", \"height\": 287648, \"timestamp\": 31042663 } ], \"requestProcessingTime\": 4 }","title":"Get Asset Transfers"},{"location":"api/API_Examples/#get-assets","text":"Request: https://localhost:2022/nxt? requestType=getAssets& assets=17554243582654188572 Response: { \"assets\": [ { \"quantityQNT\": \"2100000000000000\", \"numberOfAccounts\": 31, \"accountRS\": \"BLX-3TKA-UH62-478B-DQU6K\", \"decimals\": 8, \"numberOfTransfers\": 63, \"name\": \"mgwBTC\", \"description\": \"Production Multigateway BTC (mgwBTC) is backed 100% by...\", \"numberOfTrades\": 9, \"asset\": \"17554243582654188572\", \"account\": \"13300069592148796968\" } ], \"requestProcessingTime\": 15 }","title":"Get Assets"},{"location":"api/API_Examples/#get-assets-by-issuer","text":"Request: https://localhost:2022/nxt? requestType=getAssetsByIssuer& account=BLX-DE2F-W76R-GL25-HMFPR& lastIndex=0 Response: { \"assets\": [ [ { \"quantityQNT\": \"10000000000\", \"numberOfAccounts\": 222, \"accountRS\": \"BLX-DE2F-W76R-GL25-HMFPR\", \"decimals\": 4, \"numberOfTransfers\": 278, \"name\": \"NXTprivacy\", \"description\": \"NXTprivacy will contain various privacy related projects...\", \"numberOfTrades\": 456, \"asset\": \"17911762572811467637\", \"account\": \"18146608053740744717\" } ] ], \"requestProcessingTime\": 9 }","title":"Get Assets By Issuer"},{"location":"api/API_Examples/#get-expected-asset-deletes","text":"Request: https://localhost:2022/nxt? requestType=getExpectedAssetDeletes Response: { \"deletes\": [ { \"quantityQNT\": \"1000\", \"assetDelete\": \"16186302132012496205\", \"accountRS\": \"BLX-G885-AKDX-5G2B-BLUCG\", \"asset\": \"5920455660623529270\", \"account\": \"10892890577210644675\" } ], \"requestProcessingTime\": 3 }","title":"Get Expected Asset Deletes"},{"location":"api/API_Examples/#get-order","text":"Request: https://localhost:2022/nxt? requestType=getAskOrder& order=6044046093672850641 Response: { \"quantityQNT\": \"100\", \"priceNQT\": \"100000000\", \"transactionHeight\": 346634, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"transactionIndex\": 0, \"requestProcessingTime\": 0, \"asset\": \"17091401215301664836\", \"type\": \"ask\", \"account\": \"15295723609781267838\", \"order\": \"6044046093672850641\", \"height\": 346634 }","title":"Get Order"},{"location":"api/API_Examples/#get-order-ids","text":"Request: https://localhost:2022/nxt? requestType=getBidOrderIds& asset=17554243582654188572 Response: { \"bidOrderIds\": [ \"17972270381487138621\", \"8331653287549483600\", \"16386956089071870421\", \"12743274869785967304\", \"3409888667133338290\" ], \"requestProcessingTime\": 1 }","title":"Get Order Ids"},{"location":"api/API_Examples/#get-orders","text":"Request: https://localhost:2022/nxt? requestType=getBidOrders& asset=17554243582654188572& firstIndex=3& lastIndex=3 Response: { \"bidOrders\": [ { \"quantityQNT\": \"1000000\", \"priceNQT\": \"101\", \"accountRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"asset\": \"17554243582654188572\", \"type\": \"bid\", \"account\": \"15323192282528158131\", \"order\": \"12743274869785967304\", \"height\": 285577 } ], \"requestProcessingTime\": 2 }","title":"Get Orders"},{"location":"api/API_Examples/#get-expected-order-cancellations","text":"Request: https://localhost:2022/nxt? requestType=getExpectedOrderCancellations Response: { \"orderCancellations\": [ { \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"account\": \"15295723609781267838\", \"order\": \"8404616015717333294\", \"height\": 348793, \"phased\": false } ], \"requestProcessingTime\": 1 }","title":"Get Expected Order Cancellations"},{"location":"api/API_Examples/#get-last-trades","text":"Request: https://localhost:2022/nxt? requestType=getLastTrades& assets=17091401215301664836 Response: { \"trades\": [ { \"seller\": \"11580081983047651163\", \"quantityQNT\": \"100\", \"bidOrder\": \"12461616895431889058\", \"sellerRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"buyer\": \"15295723609781267838\", \"priceNQT\": \"100000000\", \"askOrder\": \"16690422801364092687\", \"buyerRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"block\": \"9740784167963638799\", \"asset\": \"17091401215301664836\", \"askOrderHeight\": 286247, \"bidOrderHeight\": 286243, \"tradeType\": \"sell\", \"timestamp\": 46115694, \"height\": 286247 } ], \"requestProcessingTime\": 1 }","title":"Get Last Trades"},{"location":"api/API_Examples/#get-order-trades","text":"Request: https://localhost:2022/nxt? requestType=getOrderTrades& askOrder=2769987326979385551& includeAssetInfo=true Response: { \"trades\": [ { \"seller\": \"8069635474378047786\", \"quantityQNT\": \"200\", \"bidOrder\": \"6083013926058683287\", \"sellerRS\": \"BLX-5JBC-QQ8M-UAFJ-8UAZZ\", \"buyer\": \"3617506283101058376\", \"priceNQT\": \"5000000\", \"askOrder\": \"2769987326979385551\", \"buyerRS\": \"BLX-QXCA-TKAH-KK85-5QZE6\", \"decimals\": 0, \"name\": \"TWT\", \"block\": \"17820716559461579006\", \"asset\": \"7496917644161273018\", \"askOrderHeight\": 263896, \"bidOrderHeight\": 265168, \"tradeType\": \"buy\", \"timestamp\": 44288754, \"height\": 265168 } ], \"requestProcessingTime\": 0 }","title":"Get Order Trades"},{"location":"api/API_Examples/#get-trades","text":"Request: https://localhost:2022/nxt? requestType=getTrades& asset=17554243582654188572& lastIndex=0 Response: { \"trades\": [ { \"seller\": \"4012743767778395236\", \"quantityQNT\": \"922082\", \"bidOrder\": \"18332182738291742411\", \"sellerRS\": \"BLX-J356-8B4K-L4DK-533EH\", \"buyer\": \"17013046603665206934\", \"priceNQT\": \"19607\", \"askOrder\": \"5860848661439768841\", \"buyerRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"decimals\": 8, \"name\": \"mgwBTC\", \"block\": \"15627545821108097361\", \"asset\": \"17554243582654188572\", \"askOrderHeight\": 285964, \"bidOrderHeight\": 285821, \"tradeType\": \"sell\", \"timestamp\": 30869573, \"height\": 285964 } ], \"requestProcessingTime\": 0 }","title":"Get Trades"},{"location":"api/API_Examples/#issue-asset","text":"Request: https://localhost:2022/nxt? requestType=issueAsset& publicKey=57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c& name=SecretCoin& description=This+is+SecretCoin& quantityQNT=100& deadline=60& feeNQT=100000000000& broad=false Response: { \"unsignedTransactionBytes\": \"021095e5da013c0073080c6a224062660184f10ebb7fb431d459364a12403...\", \"transactionJSON\": { \"senderPublicKey\": \"73080c6a224062660184f10ebb7fb431d459364a12403320c7f601f9d75cc547\", \"feeNQT\": \"100000000000\", \"type\": 2, \"version\": 1, \"ecBlockId\": \"1564408139943737911\", \"attachment\": { \"name\": \"SecretCoin\", \"description\": \"This+is+SecretCoin\", \"quantityQNT\": \"100\", \"version.AssetIssuance\": 1, \"decimals\": 0 }, \"senderRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"17013046603665206934\", \"ecBlockHeight\": 288402, \"deadline\": 60, \"timestamp\": 31122837, \"height\": 2147483647 }, \"broadcasted\": false, \"requestProcessingTime\": 2 }","title":"Issue Asset"},{"location":"api/API_Examples/#place-order","text":"Request: https://localhost:2022/nxt? requestType=placeBidOrder& secretPhrase=IWontTellYou& asset=17554243582654188572& quantityQNT=1000000& priceNQT=100& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"44028b4ddb46e7d4383331425b79019bb0f004f88ede12a5aa66f05c23a75f03\", \"unsignedTransactionBytes\": \"02135a5ed6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"65713e80be99a927bfa7bb2e9a7b6fbd2f17c226fb956494c68a6d90a8127...\", \"feeNQT\": \"100000000\", \"type\": 2, \"fullHash\": \"4f00aef17a397eee25027e834ca765660e4e3f3f1b162468bdac67b315aeb812\", \"version\": 1, \"ecBlockId\": \"14593256906948324209\", \"signatureHash\": \"44028b4ddb46e7d4383331425b79019bb0f004f88ede12a5aa66f05c23a75f03\", \"attachment\": { \"quantityQNT\": \"1000000\", \"priceNQT\": \"100\", \"asset\": \"17554243582654188572\", \"version.BidOrderPlacement\": 1 }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 3, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"ecBlockHeight\": 285545, \"deadline\": 60, \"transaction\": \"17185236428295897167\", \"timestamp\": 30826074, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 8729, \"transactionBytes\": \"02135a5ed6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143...\", \"fullHash\": \"4f00aef17a397eee25027e834ca765660e4e3f3f1b162468bdac67b315aeb812\", \"transaction\": \"17185236428295897167\" }","title":"Place Order"},{"location":"api/API_Examples/#search-assets","text":"Request: https://localhost:2022/nxt? requestType=searchAssets& query=assets AND production Response: { \"assets\": [ { \"quantityQNT\": \"2100000000000000\", \"numberOfAccounts\": 37, \"accountRS\": \"BLX-3TKA-UH62-478B-DQU6K\", \"decimals\": 8, \"numberOfTransfers\": 84, \"name\": \"mgwBTC\", \"description\": \"Production Multigateway BTC (mgwBTC) is backed 100% by...\", \"numberOfTrades\": 15, \"asset\": \"17554243582654188572\", \"account\": \"13300069592148796968\" } ], \"requestProcessingTime\": 96 }","title":"Search Assets"},{"location":"api/API_Examples/#transfer-asset","text":"Request: https://localhost:2022/nxt? requestType=transferAsset& secretPhrase=IWontTellYou& recipient=BLX-4VNQ-RWZC-4WWQ-GVM8S& asset=17554243582654188572& quantityQNT=1000& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"f622557588bc82942984286e431c978e687783b32db6a68a1c554b2e11349751\", \"unsignedTransactionBytes\": \"0211c9ebda013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"33d0fccf1f19d18b4ca97d2636cf62f7a801c07628d1bbb1d6084dc3ca658d...\", \"feeNQT\": \"100000000\", \"type\": 2, \"fullHash\": \"c8f25b15b48fb5efd3341fb369627d00f8fefb59dc18016ba0c482b6de7cad59\", \"version\": 1, \"ecBlockId\": \"3925493493266246517\", \"signatureHash\": \"f622557588bc82942984286e431c978e687783b32db6a68a1c554b2e11349751\", \"attachment\": { \"version.AssetTransfer\": 1, \"quantityQNT\": \"1000\", \"asset\": \"17554243582654188572\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 1, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"recipient\": \"17013046603665206934\", \"ecBlockHeight\": 288416, \"deadline\": 60, \"transaction\": \"17272869949464638152\", \"timestamp\": 31124425, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 4968, \"transactionBytes\": \"0211c9ebda013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473b...\", \"fullHash\": \"c8f25b15b48fb5efd3341fb369627d00f8fefb59dc18016ba0c482b6de7cad59\", \"transaction\": \"17272869949464638152\" }","title":"Transfer Asset"},{"location":"api/API_Examples/#block-operations","text":"","title":"Block Operations"},{"location":"api/API_Examples/#get-block","text":"Request: https://localhost:2022/nxt? requestType=getBlock& block=8455642159445842600 Response: { \"previousBlockHash\": \"c0574d7a7b8497373dbead497c2dc7f60fdcfc8c5a9fcb48f7d373acc9bbb099\", \"payloadLength\": 1189, \"totalAmountNQT\": \"100000000\", \"generationSignature\": \"c5098d37267bc71134fc8572a87b4af8727a2e5139d60fe8833fab98af22244a\", \"generator\": \"11693867635361772359\", \"generatorPublicKey\": \"fbb72a280228af5c8c74c7c754a290e1539f839553c00bc560cac7bfdb324a7c\", \"baseTarget\": \"1530224444\", \"payloadHash\": \"633992be640a593ba04e31ca4028deed70bbf47cff333e2a0372a4e2a4aba205\", \"generatorRS\": \"BLX-TWU9-P3E4-HCDM-CQ9L6\", \"nextBlock\": \"5937170741469897491\", \"requestProcessingTime\": 175, \"numberOfTransactions\": 6, \"blockSignature\": \"ff65a82e385c135cf9bd5be0861e9e5d3d3174fbd993e5b7f57935ec4...\", \"transactions\": [ \"15184285173972564233\", \"15200280108574630445\", \"15200507403046301754\", \"15900338016714606285\", \"17881859777840687131\", \"18361738217269620028\" ], \"version\": 3, \"totalFeeNQT\": \"600000000\", \"previousBlock\": \"4005816059437078464\", \"cumulativeDifficulty\": \"10229109959119715\", \"block\": \"8455642159445842600\", \"height\": 275730, \"timestamp\": 29797208 }","title":"Get Block"},{"location":"api/API_Examples/#get-block-id","text":"Request: https://localhost:2022/nxt? requestType=getBlockId& height=12 Response: { \"block\": \"2680262203532249785\", \"requestProcessingTime\": 1 }","title":"Get Block Id"},{"location":"api/API_Examples/#get-blocks","text":"Request: https://localhost:2022/nxt? requestType=getBlocks& lastIndex=1 Response: { \"blocks\": [ { \"previousBlockHash\": \"f88c75a36317e1795348330cb9a944f33153b517ebdf05d9f3f9a606e997618d\", \"payloadLength\": 981, \"totalAmountNQT\": \"0\", \"generationSignature\": \"02f7462b62270c0028c379d838d3a192cf0b782995f3bb1929a5378d26e7e8a9\", \"generator\": \"2218289317977832095\", \"generatorPublicKey\": \"98ccf5d5173b13e4c9eab2631372f61ce8ba506db559d73b285073a689872e75\", \"baseTarget\": \"151761236\", \"payloadHash\": \"82f8c8ca1f8f2252172ed1e9836d5228432fcb18aecfa7d55a119efcd242321c\", \"generatorRS\": \"BLX-TGNZ-E8VK-69EX-3L9LX\", \"numberOfTransactions\": 5, \"blockSignature\": \"76a3f7f966256c4985262fb4622190b2b9a19b900f6ce443ab7d581e3176c...\", \"transactions\": [ \"10545999940082849455\", \"16751328983055099280\", \"1257496316971695605\", \"2048859884870801838\", \"5105170273384355243\" ], \"version\": 3, \"totalFeeNQT\": \"500000000\", \"previousBlock\": \"8782326465060769016\", \"block\": \"7299310714263322546\", \"height\": 281683, \"timestamp\": 30416681 }, { \"previousBlockHash\": \"edc2d65d24883b9b32c46da4eec3792a69a5ff9a9b1e629c4e7e0224432c87c9\", \"payloadLength\": 0, \"totalAmountNQT\": \"0\", \"generationSignature\": \"8c4944c7a9ef5700d1b89660fdf83bcbd3dbbfbe191fef005d0f248a573816fe\", \"generator\": \"15766845356521829337\", \"generatorPublicKey\": \"11636697faf4ade736cedf6c528bec0142353c4d93fce05cdb818c49e0390422\", \"baseTarget\": \"303522472\", \"payloadHash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\", \"generatorRS\": \"BLX-2EYT-C522-VL6G-FQSMP\", \"nextBlock\": \"7299310714263322546\", \"numberOfTransactions\": 0, \"blockSignature\": \"90464d183ed01cb0930ef527e746eaa092d1558697c369cc9246add5f6eec...\", \"transactions\": [], \"version\": 3, \"totalFeeNQT\": \"0\", \"previousBlock\": \"11185683789279314669\", \"block\": \"8782326465060769016\", \"height\": 281682, \"timestamp\": 30416671 } ], \"requestProcessingTime\": 2 }","title":"Get Blocks"},{"location":"api/API_Examples/#get-ec-block","text":"Request: https://localhost:2022/nxt? requestType=getECBlock Response: { \"ecBlockHeight\": 281777, \"requestProcessingTime\": 2, \"ecBlockId\": \"6565813579609649593\", \"timestamp\": 30427868 }","title":"Get EC Block"},{"location":"api/API_Examples/#digital-goods-store-operations","text":"","title":"Digital Goods Store Operations"},{"location":"api/API_Examples/#dgs-delisting","text":"Request: https://localhost:2022/nxt? requestType=dgsDelisting& goods=11813734897437346473 secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"87dd2aa00690acaa5da4e8cd9db6ab94b5ed8bf0f8fe2c2ba6a39c57d3073105\", \"unsignedTransactionBytes\": \"03111852e2013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"39ee52204d0a32c0bbd0e4bc6a6fb52299cd7d16ab74e9a040f857d3b1c3e...\", \"feeNQT\": \"100000000\", \"type\": 3, \"fullHash\": \"40e64c357e240f9b7ca5780e757e34d48a58ae93eeb19e62d020d5719b43e2b6\", \"version\": 1, \"ecBlockId\": \"5345754442518111082\", \"signatureHash\": \"87dd2aa00690acaa5da4e8cd9db6ab94b5ed8bf0f8fe2c2ba6a39c57d3073105\", \"attachment\": { \"version.DigitalGoodsDelisting\": 1, \"goods\": \"11813734897437346473\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 1, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"ecBlockHeight\": 292903, \"deadline\": 60, \"transaction\": \"11173189325008201280\", \"timestamp\": 31609368, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 5188, \"transactionBytes\": \"03111852e2013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"40e64c357e240f9b7ca5780e757e34d48a58ae93eeb19e62d020d5719b43e2b6\", \"transaction\": \"11173189325008201280\" }","title":"DGS Delisting"},{"location":"api/API_Examples/#dgs-delivery","text":"Request: https://localhost:2022/nxt? requestType=dgsDelivery& purchase=3723760852542296589& goodsToEncrypt=Download Code.& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"f3f1f1bf30c7a6f5a7776aa23502dfe5240efe0d5c016760f8e8a152c4eb1b1b\", \"unsignedTransactionBytes\": \"0315b20fe1013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"b96c42161ce38177168de5a8906ce747a5415017df5b16cdce1c015cb6e1f10b...\", \"feeNQT\": \"100000000\", \"type\": 3, \"fullHash\": \"349926ea025b627117c05fbe3ff298e97a8efdb07f7ae552b5a91e7112c5b82b\", \"version\": 1, \"ecBlockId\": \"15813950788992376142\", \"signatureHash\": \"f3f1f1bf30c7a6f5a7776aa23502dfe5240efe0d5c016760f8e8a152c4eb1b1b\", \"attachment\": { \"goodsIsText\": true, \"discountNQT\": \"0\", \"purchase\": \"3723760852542296589\", \"goodsData\": \"aef91bfe543844964b0dadc51c6fe4c624b6b0c72c23c5c61f7e626f51e15...\", \"version.DigitalGoodsDelivery\": 1, \"goodsNonce\": \"4cb474ec53a590c6fd20d050c429d009ddefd286b2782eb3a0782ae45c2bbbbd\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 5, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"recipient\": \"7580519603555678830\", \"ecBlockHeight\": 292069, \"deadline\": 60, \"transaction\": \"8170192742079961396\", \"timestamp\": 31526834, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 8832, \"transactionBytes\": \"0315b20fe1013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"349926ea025b627117c05fbe3ff298e97a8efdb07f7ae552b5a91e7112c5b82b\", \"transaction\": \"8170192742079961396\" }","title":"DGS Delivery"},{"location":"api/API_Examples/#dgs-feedback","text":"Request: https://localhost:2022/nxt? requestType=dgsFeedback& purchase=10234639413366748292& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60& message=Thank You! Response: { \"signatureHash\": \"bf31e4e3b2037bfe223efd72519e3a2d25cd1e0dc1a62e3eeefe59179e16a7a4\", \"unsignedTransactionBytes\": \"0316a463e2013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"a3ee76ce4bec0328fe5cfc1a2adfc229a8c9959a81b7912664de51156987c...\", \"feeNQT\": \"100000000\", \"type\": 3, \"fullHash\": \"491d94b9031b7a7a32d9ab5d0491b81364941eb080ee9029de58cb6ffa0161f6\", \"version\": 1, \"ecBlockId\": \"5484311742753527844\", \"signatureHash\": \"bf31e4e3b2037bfe223efd72519e3a2d25cd1e0dc1a62e3eeefe59179e16a7a4\", \"attachment\": { \"purchase\": \"10234639413366748292\", \"version.Message\": 1, \"messageIsText\": true, \"version.DigitalGoodsFeedback\": 1, \"message\": \"Thank you!\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 6, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"recipient\": \"7580519603555678830\", \"ecBlockHeight\": 292938, \"deadline\": 60, \"transaction\": \"8825396122598251849\", \"timestamp\": 31613860, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 9343, \"transactionBytes\": \"0316a463e2013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"491d94b9031b7a7a32d9ab5d0491b81364941eb080ee9029de58cb6ffa0161f6\", \"transaction\": \"8825396122598251849\" }","title":"DGS Feedback"},{"location":"api/API_Examples/#114-dgs-listing","text":"Request: https://localhost:2022/nxt? requestType=dgsListing& secretPhrase=IWontTellYou& name=Test Product& description=Testing the DGS. tags=test, product, tag, extra& quantity=3& priceNQT=100000000& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"565bc0a6140ae1331cd5db009fbd9da164d8802330939ef40204a9bc343b3149\", \"unsignedTransactionBytes\": \"031092aedf013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"465ed3dfef9a02fc97fc18a6f83bb9f07c285aef41ff78c957d59cda2972ba...\", \"feeNQT\": \"100000000\", \"type\": 3, \"fullHash\": \"a98a63204cd1f2a3304cee79776854f290f0472883c576056fec16a23efa90df\", \"version\": 1, \"ecBlockId\": \"4480409615309425420\", \"signatureHash\": \"565bc0a6140ae1331cd5db009fbd9da164d8802330939ef40204a9bc343b3149\", \"attachment\": { \"priceNQT\": \"100000000\", \"quantity\": 3, \"name\": \"Test Product\", \"description\": \"Testing the DGS.\", \"version.DigitalGoodsListing\": 1, \"tags\": \"test, product, tag, extra\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"ecBlockHeight\": 291240, \"deadline\": 60, \"transaction\": \"11813734897437346473\", \"timestamp\": 31436434, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 8958, \"transactionBytes\": \"031092aedf013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473b...\", \"fullHash\": \"a98a63204cd1f2a3304cee79776854f290f0472883c576056fec16a23efa90df\", \"transaction\": \"11813734897437346473\" }","title":"11.4 DGS Listing"},{"location":"api/API_Examples/#dgs-price-change","text":"Request: https://localhost:2022/nxt? requestType=dgsPriceChange& goods=11813734897437346473& priceNQT=200000000& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"aad88476935eda8ca3a9190163b83106e6ca95733ddfa274d29a0378d773cc3c\", \"unsignedTransactionBytes\": \"0312cebbdf013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"533f9c330100cab8a7a0f9375b49a09f6432b0e029660ab715a728ac75e6c2...\", \"feeNQT\": \"100000000\", \"type\": 3, \"fullHash\": \"1964e4fe11f4a00a96c79e274f9da21f64d7fe10ed77a154975b92d3c65f1287\", \"version\": 1, \"ecBlockId\": \"14411471768450948944\", \"signatureHash\": \"aad88476935eda8ca3a9190163b83106e6ca95733ddfa274d29a0378d773cc3c\", \"attachment\": { \"goods\": \"11813734897437346473\", \"priceNQT\": \"200000000\", \"version.DigitalGoodsPriceChange\": 1 }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 2, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"ecBlockHeight\": 291259, \"deadline\": 60, \"transaction\": \"765880294780986393\", \"timestamp\": 31439822, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 6444, \"transactionBytes\": \"0312cebbdf013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"1964e4fe11f4a00a96c79e274f9da21f64d7fe10ed77a154975b92d3c65f1287\", \"transaction\": \"765880294780986393\" }","title":"DGS Price Change"},{"location":"api/API_Examples/#dgs-purchase","text":"Request: https://localhost:2022/nxt? requestType=dgsPurchase& goods=1587116104511359906& quantity=1& deliveryDeadlineTimestamp=31800000& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"03e112d8707ae33ec37ff4405f31920c0e67c58439e33033c248b3eaca81d2c3\", \"unsignedTransactionBytes\": \"0314805be2013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"a2739ef63024d9d3c61bebbb2692e7a2092666e13fc380c2e8b29c3a3fc24...\", \"feeNQT\": \"100000000\", \"type\": 3, \"fullHash\": \"84f4ef2d52be088e011e5b7857fbab88665918e0df02102a8333aee53c3bb88b\", \"version\": 1, \"ecBlockId\": \"3186563001195424357\", \"signatureHash\": \"03e112d8707ae33ec37ff4405f31920c0e67c58439e33033c248b3eaca81d2c3\", \"attachment\": { \"goods\": \"1587116104511359906\", \"priceNQT\": \"100000000\", \"quantity\": 1, \"deliveryDeadlineTimestamp\": 31800000, \"version.DigitalGoodsPurchase\": 1 }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 4, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"recipient\": \"7580519603555678830\", \"ecBlockHeight\": 292925, \"deadline\": 60, \"transaction\": \"10234639413366748292\", \"timestamp\": 31611776, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 5536, \"transactionBytes\": \"0314805be2013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"84f4ef2d52be088e011e5b7857fbab88665918e0df02102a8333aee53c3bb88b\", \"transaction\": \"10234639413366748292\" }","title":"DGS Purchase"},{"location":"api/API_Examples/#dgs-quantity-change","text":"Request: https://localhost:2022/nxt? requestType=dgsQuantityChange& goods=11813734897437346473& deltaQuantity=-1& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"5c60fc94452980f88423c3a16a74d49209d246d0f7454024c87cc76ea3221500\", \"unsignedTransactionBytes\": \"031334b7df013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"7eaf8e48a780f51aa7e01c01091c9388b72a1bf075dddbd3594d55ad169272...\", \"feeNQT\": \"100000000\", \"type\": 3, \"fullHash\": \"f3cd9046bba3706dd6f63cf387f23c7c29532ff15e3423f57900613c844a646f\", \"version\": 1, \"ecBlockId\": \"14589429051005044326\", \"signatureHash\": \"5c60fc94452980f88423c3a16a74d49209d246d0f7454024c87cc76ea3221500\", \"attachment\": { \"goods\": \"11813734897437346473\", \"version.DigitalGoodsQuantityChange\": 1, \"deltaQuantity\": -1 }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 3, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"ecBlockHeight\": 291249, \"deadline\": 60, \"transaction\": \"7885982972263845363\", \"timestamp\": 31438644, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 7474, \"transactionBytes\": \"031334b7df013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"f3cd9046bba3706dd6f63cf387f23c7c29532ff15e3423f57900613c844a646f\", \"transaction\": \"7885982972263845363\" }","title":"DGS Quantity Change"},{"location":"api/API_Examples/#dgs-refund","text":"Request: https://localhost:2022/nxt? requestType=dgsRefund& purchase=3723760852542296589& refundNQT=100000000& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"dafa980759db6bd6e5f11aa7bdc1cff1bb201be750328c397870f1758cef975c\", \"unsignedTransactionBytes\": \"0317944ee2013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"43a90c1f0dde1bca84623e69b0abe0284883600d7bfb5286b3489a9ee417...\", \"feeNQT\": \"100000000\", \"type\": 3, \"fullHash\": \"64c2af2811da3306f4671002ed1f12655fca1937a0b68164da2a71f3ee63adce\", \"version\": 1, \"ecBlockId\": \"11418000967717599433\", \"signatureHash\": \"dafa980759db6bd6e5f11aa7bdc1cff1bb201be750328c397870f1758cef975c\", \"attachment\": { \"purchase\": \"3723760852542296589\", \"version.DigitalGoodsRefund\": 1, \"refundNQT\": \"100000000\" }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 7, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"recipient\": \"7580519603555678830\", \"ecBlockHeight\": 292899, \"deadline\": 60, \"transaction\": \"446940555271717476\", \"timestamp\": 31608468, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 10509, \"transactionBytes\": \"0317944ee2013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b...\", \"fullHash\": \"64c2af2811da3306f4671002ed1f12655fca1937a0b68164da2a71f3ee63adce\", \"transaction\": \"446940555271717476\" }","title":"DGS Refund"},{"location":"api/API_Examples/#get-dgs-expired-purchases","text":"Request: https://localhost:2022/nxt? requestType=getDGSExpiredPurchases& seller=BLX-XK4R-7VJU-6EQG-7R335 Response: { \"purchases\": [ { \"seller\": \"5873880488492319831\", \"priceNQT\": \"1000000000\", \"quantity\": 1, \"deliveryDeadlineTimestamp\": 44955165, \"buyerRS\": \"BLX-XK4R-7VJU-6EQG-7R335\", \"pending\": false, \"purchase\": \"17272258199467687054\", \"name\": \"MyProduct\", \"goods\": \"4830545483228225683\", \"sellerRS\": \"BLX-XK4R-7VJU-6EQG-7R335\", \"buyer\": \"5873880488492319831\", \"timestamp\": 44397533 } ], \"requestProcessingTime\": 1 }","title":"Get DGS Expired Purchases"},{"location":"api/API_Examples/#get-dgs-good","text":"Request: https://localhost:2022/nxt? requestType=getDGSGood& goods=11813734897437346473 Response: { \"seller\": \"15323192282528158131\", \"quantity\": 3, \"goods\": \"11813734897437346473\", \"description\": \"Testing the DGS.\", \"sellerRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"requestProcessingTime\": 1, \"delisted\": false, \"parsedTags\": [ \"test\", \"product\", \"tag\" ], \"tags\": \"test, product, tag, extra\", \"priceNQT\": \"100000000\", \"numberOfPublicFeedbacks\": 0, \"name\": \"Test Product\", \"numberOfPurchases\": 0, \"timestamp\": 31436434 }","title":"Get DGS Good"},{"location":"api/API_Examples/#get-dgs-goods","text":"Request: https://localhost:2022/nxt? requestType=getDGSGoods& seller=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"goods\": [ { \"seller\": \"15323192282528158131\", \"quantity\": 2, \"goods\": \"11813734897437346473\", \"description\": \"Testing the DGS.\", \"sellerRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"delisted\": false, \"parsedTags\": [ \"test\", \"product\", \"tag\" ], \"tags\": \"test, product, tag, extra\", \"priceNQT\": \"200000000\", \"numberOfPublicFeedbacks\": 0, \"name\": \"Test Product\", \"numberOfPurchases\": 0, \"timestamp\": 31436434 } ], \"requestProcessingTime\": 46 }","title":"Get DGS Goods"},{"location":"api/API_Examples/#get-dgs-goods-count","text":"Request: https://localhost:2022/nxt? requestType=getDGSGoodsCount& seller=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"numberOfGoods\": 1, \"requestProcessingTime\": 2 }","title":"Get DGS Goods Count"},{"location":"api/API_Examples/#get-dgs-goods-purchase-count","text":"Request: https://localhost:2022/nxt? requestType=getDGSGoodsPurchaseCount& goods=11813734897437346473 Response: { \"numberOfPurchases\": 1, \"requestProcessingTime\": 1 }","title":"Get DGS Goods Purchase Count"},{"location":"api/API_Examples/#get-dgs-goods-purchases","text":"Request: https://localhost:2022/nxt? requestType=getDGSGoodsPurchases& goods=11813734897437346473 Response: { \"purchases\": [ { \"seller\": \"15323192282528158131\", \"quantity\": 2, \"pending\": false, \"purchase\": \"3723760852542296589\", \"goods\": \"11813734897437346473\", \"sellerRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"buyer\": \"7580519603555678830\", \"priceNQT\": \"200000000\", \"deliveryDeadlineTimestamp\": 31600000, \"goodsIsText\": false, \"buyerRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"name\": \"Test Product\", \"goodsData\": { \"data\": \"aef91bfe543844964b0dadc51c6fe4c624b6b0c72c23c5c61f7e626f51e15...\", \"nonce\": \"4cb474ec53a590c6fd20d050c429d009ddefd286b2782eb3a0782ae45c2bbbbd\" }, \"timestamp\": 31520720 } ], \"requestProcessingTime\": 305 }","title":"Get DGS Goods Purchases"},{"location":"api/API_Examples/#get-dgs-pending-purchases","text":"Request: https://localhost:2022/nxt? requestType=getDGSPendingPurchases& seller=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"purchases\": [ { \"seller\": \"15323192282528158131\", \"priceNQT\": \"200000000\", \"quantity\": 2, \"deliveryDeadlineTimestamp\": 31600000, \"buyerRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"pending\": true, \"purchase\": \"3723760852542296589\", \"name\": \"Test Product\", \"goods\": \"11813734897437346473\", \"sellerRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"buyer\": \"7580519603555678830\", \"timestamp\": 31520720 } ], \"requestProcessingTime\": 1 }","title":"Get DGS Pending Purchases"},{"location":"api/API_Examples/#get-dgs-purchase","text":"Request: https://localhost:2022/nxt? requestType=getDGSPurchase& purchase=10234639413366748292 Response: { \"seller\": \"7580519603555678830\", \"quantity\": 1, \"feedbackNotes\": [ { \"data\": \"7086a82f4da0708d4eaa9b16d5fc5a25c556596ea29d957d0a1dddd0a482c...\", \"nonce\": \"c521481ce67f7778c41c6716806047d4ea641005392cd7e5ce8d20c49623dad8\" } ], \"publicFeedbacks\": [ \"Thank you again!\", \"Thank you!\" ], \"pending\": false, \"purchase\": \"10234639413366748292\", \"goods\": \"1587116104511359906\", \"sellerRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"requestProcessingTime\": 1, \"buyer\": \"15323192282528158131\", \"priceNQT\": \"100000000\", \"deliveryDeadlineTimestamp\": 31800000, \"goodsIsText\": false, \"buyerRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"discountNQT\": \"100000000\", \"name\": \"Test Product\", \"goodsData\": { \"data\": \"5f4868022381aa9532614a7aae1600e59e84c80571add107dabca891df97e7...\", \"nonce\": \"c017b846de4375741ebc9f3bff894270d218ff4090a66dfd505770ccdc2f54bd\" }, \"timestamp\": 31611776 }","title":"Get DGS Purchase"},{"location":"api/API_Examples/#get-dgs-purchase-count","text":"Request: https://localhost:2022/nxt? requestType=getDGSPurchaseCount& seller=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"numberOfPurchases\": 2, \"requestProcessingTime\": 1 }","title":"Get DGS Purchase Count"},{"location":"api/API_Examples/#get-dgs-purchases","text":"Request: https://localhost:2022/nxt? requestType=getDGSPurchases& seller=BLX-L6FM-89WK-VK8P-FCRBB& lastIndex=0 Response: { \"purchases\": [ { \"seller\": \"15323192282528158131\", \"priceNQT\": \"200000000\", \"quantity\": 2, \"deliveryDeadlineTimestamp\": 31600000, \"buyerRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"pending\": true, \"purchase\": \"3723760852542296589\", \"name\": \"Test Product\", \"goods\": \"11813734897437346473\", \"sellerRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"buyer\": \"7580519603555678830\", \"timestamp\": 31520720 } ], \"requestProcessingTime\": 1 }","title":"Get DGS Purchases"},{"location":"api/API_Examples/#get-dgs-tag-count","text":"Request: https://localhost:2022/nxt? requestType=getDGSTagCount Response: { \"numberOfTags\": 383, \"requestProcessingTime\": 472 }","title":"Get DGS Tag Count"},{"location":"api/API_Examples/#get-dgs-tags","text":"Request: https://localhost:2022/nxt? requestType=getDGSTags& lastIndex=0 Response: { \"requestProcessingTime\": 2, \"tags\": [ { \"inStockCount\": 40, \"tag\": \"domains\", \"totalCount\": 42 } ] }","title":"Get DGS Tags"},{"location":"api/API_Examples/#get-dgs-tags-like","text":"Request: https://localhost:2022/nxt? requestType=getDGSTagsLike& tagPrefix=item Response: { \"requestProcessingTime\": 1, \"tags\": [ { \"inStockCount\": 1, \"tag\": \"items\", \"totalCount\": 1 } ] }","title":"Get DGS Tags Like"},{"location":"api/API_Examples/#search-dgs-goods","text":"Request: https://localhost:2022/nxt? requestType=searchDGSGoods& tag=te?t AND prod\\* Response: { \"goods\": [ { \"seller\": \"7580519603555678830\", \"quantity\": 1, \"goods\": \"1587116104511359906\", \"description\": \"This is a test. Please do not order.\", \"sellerRS\": \"BLX-6GMG-FC5F-YSX6-8CVEL\", \"delisted\": false, \"parsedTags\": [ \"test\", \"product\", \"tag\" ], \"tags\": \"test,product,tag\", \"priceNQT\": \"100000000\", \"numberOfPublicFeedbacks\": 1, \"name\": \"Test Product\", \"numberOfPurchases\": 1, \"timestamp\": 31611435 } ], \"requestProcessingTime\": 4 }","title":"Search DGS Goods"},{"location":"api/API_Examples/#forging-operations","text":"","title":"Forging Operations"},{"location":"api/API_Examples/#start-stop-get-forging","text":"Request: https://localhost:2022/nxt? requestType=startForging& secretPhrase=IWontTellYou Response: { \"requestProcessingTime\": 1, \"deadline\": 0, \"hitTime\": 0 }","title":"Start / Stop / Get Forging"},{"location":"api/API_Examples/#lease-balance","text":"Request: https://localhost:2022/nxt? requestType=leaseBalance& period=1440& recipient=BLX-4VNQ-RWZC-4WWQ-GVM8S& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"462590bb85b615ddd34d59a1ffdc452a9baee2088044c1b9eb44298e49158f35\", \"unsignedTransactionBytes\": \"04107977ce013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473b...\", \"transactionJSON\": { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"4a89702535246fd55bfc4b4691dc4266daa3100e00cdf0caaed57a5ad750da075a...\", \"feeNQT\": \"100000000\", \"type\": 4, \"fullHash\": \"251bcd86057c09bb2d055bbeeb9b67ccae861f75d4aada21b3b79a13db9712e1\", \"version\": 1, \"ecBlockId\": \"6565389899781382679\", \"signatureHash\": \"462590bb85b615ddd34d59a1ffdc452a9baee2088044c1b9eb44298e49158f35\", \"attachment\": { \"version.EffectiveBalanceLeasing\": 1, \"period\": 1440 }, \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"recipient\": \"17013046603665206934\", \"ecBlockHeight\": 280672, \"deadline\": 60, \"transaction\": \"13477439723061189413\", \"timestamp\": 30308217, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 7340, \"transactionBytes\": \"04107977ce013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473b...\", \"fullHash\": \"251bcd86057c09bb2d055bbeeb9b67ccae861f75d4aada21b3b79a13db9712e1\", \"transaction\": \"13477439723061189413\" }","title":"Lease Balance"},{"location":"api/API_Examples/#get-next-block-generators","text":"Request: https://localhost:2022/nxt? requestType=getNextBlockGenerators& limit=3 Response: { \"activeCount\": 216, \"lastBlock\": \"10153073870267066931\", \"generators\": [ { \"effectiveBalanceNXT\": 5400786, \"accountRS\": \"BLX-8HNT-4ZTF-ZXH3-7RU38\", \"deadline\": 4, \"account\": \"5982846390354787993\", \"hitTime\": 112224054 }, { \"effectiveBalanceNXT\": 4061204, \"accountRS\": \"BLX-HLNR-4HDK-HQUJ-37545\", \"deadline\": 35, \"account\": \"1263370831364868759\", \"hitTime\": 112224085 }, { \"effectiveBalanceNXT\": 8847921, \"accountRS\": \"BLX-ZEKG-CHYB-N8AR-4TQ3U\", \"deadline\": 52, \"account\": \"3244519536310858286\", \"hitTime\": 112224102 } ], \"requestProcessingTime\": 1, \"timestamp\": 112224050, \"height\": 1351776 }","title":"Get Next Block Generators"},{"location":"api/API_Examples/#hallmark-operations","text":"","title":"Hallmark Operations"},{"location":"api/API_Examples/#decode-hallmark","text":"Request: https://localhost:2022/nxt? requestType=decodeHallmark& hallmark=827ed8cf83bbd36419002759d960a1bec952f2209db8ed3be958... Response: { \"date\": \"2013-12-10\", \"valid\": true, \"accountRS\": \"BLX-FEJ5-H4YB-QD3D-2L3W2\", \"host\": \"nxttyclub.info\", \"weight\": 100, \"requestProcessingTime\": 2, \"account\": \"31580691533050371\" }","title":"Decode Hallmark"},{"location":"api/API_Examples/#mark-host","text":"Request: https://localhost:2022/nxt? requestType=markHost& secretPhrase=IWontTellYou& host=iwonttellyou.com& weight=1& date=2014-11-22 Response: { \"hallmark\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c...\", \"requestProcessingTime\": 5 }","title":"Mark Host"},{"location":"api/API_Examples/#monetary-system-operations","text":"","title":"Monetary System Operations"},{"location":"api/API_Examples/#can-delete-currency","text":"Request: https://localhost:2022/nxt? requestType=canDeleteCurrency& account=BLX-2HCZ-6GCJ-2XGV-EDRPH& currency=4923907272718555444 Response: { \"canDelete\": true, \"requestProcessingTime\": 1 }","title":"Can Delete Currency"},{"location":"api/API_Examples/#currency-buy-sell","text":"Request: https://localhost:2022/nxt? requestType=currencyBuy& currency=6520756875632314476& rateNQT=1500000000& units=200& secretPhrase=SECRETPHRASE& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"0471907734d4aae7fc708131726f8660a68e66fe873fa17cab4f0cb3f879243f\", \"unsignedTransactionBytes\": \"051607cb08023c0010f09c34f225d425306e5be55a49469081...\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"dda6c065344827bfdecfee179b22dfee1d5280fa5da5431b012d9ea045a0d80b9d4...\", \"feeNQT\": \"100000000\", \"type\": 5, \"fullHash\": \"d388798c9ecaf2cd28578cfcb8fb7e8f07d308e36e2a5674bb1c7766595b8435\", \"version\": 1, \"ecBlockId\": \"10096636210021430702\", \"signatureHash\": \"0471907734d4aae7fc708131726f8660a68e66fe873fa17cab4f0cb3f879243f\", \"attachment\": { \"currency\": \"6520756875632314476\", \"version.ExchangeSell\": 1, \"units\": \"200\", \"rateNQT\": \"1500000000\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 6, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 162266, \"deadline\": 60, \"transaction\": \"14840146504449624275\", \"timestamp\": 34130695, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 331, \"transactionBytes\": \"051607cb08023c0010f09c34f225d425306e5be55a49469081560...\", \"fullHash\": \"d388798c9ecaf2cd28578cfcb8fb7e8f07d308e36e2a5674bb1c7766595b8435\", \"transaction\": \"14840146504449624275\" }","title":"Currency Buy / Sell"},{"location":"api/API_Examples/#currency-mint","text":"Request: https://localhost:2022/nxt? requestType=currencyMint& currency=9207767346829573996& nonce=-6757092571753666960& units=1& counter=26& secretPhrase=SECRETPHRASE& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"f0e9f3b040890043fbc2d1b235377eb566805419f459184bc9290051bacdf80f\", \"unsignedTransactionBytes\": \"0517655a0c023c0010f09c34f225d425306e5be55a49469081...\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"e961f58250dd256bb5f0628df342beb6ce042765d7cdad8d7598495759d7ec00ad8...\", \"feeNQT\": \"100000000\", \"type\": 5, \"fullHash\": \"05cbe451cdece14bab56c5684d30cd7eb62e45a86136071e90ae26981d4c1fc3\", \"version\": 1, \"ecBlockId\": \"12526333689713738846\", \"signatureHash\": \"f0e9f3b040890043fbc2d1b235377eb566805419f459184bc9290051bacdf80f\", \"attachment\": { \"currency\": \"9207767346829573996\", \"units\": \"1\", \"counter\": \"26\", \"version.CurrencyMinting\": 1, \"nonce\": \"-6757092571753666960\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 7, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 160721, \"deadline\": 60, \"transaction\": \"5467911789190892293\", \"timestamp\": 34364005, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 815, \"transactionBytes\": \"0517655a0c023c0010f09c34f225d425306e5be55a49469081560...\", \"fullHash\": \"05cbe451cdece14bab56c5684d30cd7eb62e45a86136071e90ae26981d4c1fc3\", \"transaction\": \"5467911789190892293\" }","title":"Currency Mint"},{"location":"api/API_Examples/#currency-reserve-claim","text":"Request: https://localhost:2022/nxt? requestType=currencyReserveClaim& currency=15992040603642022742& units=36 Response: { \"signatureHash\": \"6daef8c9b8653a9b78b64e400c2ab64ea201e9888b8bc54ec6c9a28814b0a69e\", \"unsignedTransactionBytes\": \"0512a7830b023c00169cf83994b0e8c48a152ddc50606d58bd...\", \"transactionJSON\": { \"senderPublicKey\": \"169cf83994b0e8c48a152ddc50606d58bd4b2b85ec2f5bbbaae93d838443df7f\", \"signature\": \"5ab6605aca7a958b10e5f0198660eccd01bff1418f2bf172105ba39e9c911d09709...\", \"feeNQT\": \"100000000\", \"type\": 5, \"fullHash\": \"f32e02362dce767c6f4b069f793f2cd8c6b89bad04847c8abe98d8998cede94f\", \"version\": 1, \"ecBlockId\": \"14980969893438059909\", \"signatureHash\": \"6daef8c9b8653a9b78b64e400c2ab64ea201e9888b8bc54ec6c9a28814b0a69e\", \"attachment\": { \"version.ReserveClaim\": 1, \"currency\": \"15992040603642022742\", \"units\": \"36\" }, \"senderRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"subtype\": 2, \"amountNQT\": \"0\", \"sender\": \"11580081983047651163\", \"ecBlockHeight\": 160064, \"deadline\": 60, \"transaction\": \"8968582401529884403\", \"timestamp\": 34309031, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 7, \"transactionBytes\": \"0512a7830b023c00169cf83994b0e8c48a152ddc50606d58bd4b2...\", \"fullHash\": \"f32e02362dce767c6f4b069f793f2cd8c6b89bad04847c8abe98d8998cede94f\", \"transaction\": \"8968582401529884403\" }","title":"Currency Reserve Claim"},{"location":"api/API_Examples/#currency-reserve-increase","text":"Request: https://localhost:2022/nxt? requestType=currencyReserveIncrease& currency=11847174313362984527 amountPerUnitNQT=40000000 Response: { \"signatureHash\": \"0ba69ec678e0d4c4f94ee576d9520bf13a1c88b87e46c79d937b8f998a4a1f54\", \"unsignedTransactionBytes\": \"05115c930b023c00169cf83994b0e8c48a152ddc50606d58bd...\", \"transactionJSON\": { \"senderPublicKey\": \"169cf83994b0e8c48a152ddc50606d58bd4b2b85ec2f5bbbaae93d838443df7f\", \"signature\": \"01ab2e01e8543321bb93baef1cdfd24335b2f98f4898c0203ebb372f6ea2140f609...\", \"feeNQT\": \"100000000\", \"type\": 5, \"fullHash\": \"0e583d097aa7832ef97f49bf1c43fe6fa26592cd7b60cd1c652b1139719c9404\", \"version\": 1, \"ecBlockId\": \"3894856940593871962\", \"signatureHash\": \"0ba69ec678e0d4c4f94ee576d9520bf13a1c88b87e46c79d937b8f998a4a1f54\", \"attachment\": { \"amountPerUnitNQT\": \"40000000\", \"currency\": \"11847174313362984527\", \"version.ReserveIncrease\": 1 }, \"senderRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"subtype\": 1, \"amountNQT\": \"0\", \"sender\": \"11580081983047651163\", \"ecBlockHeight\": 160118, \"deadline\": 60, \"transaction\": \"3351706690276644878\", \"timestamp\": 34313052, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 7, \"transactionBytes\": \"05115c930b023c00169cf83994b0e8c48a152ddc50606d58bd4b2...\", \"fullHash\": \"0e583d097aa7832ef97f49bf1c43fe6fa26592cd7b60cd1c652b1139719c9404\", \"transaction\": \"3351706690276644878\" }","title":"Currency Reserve Increase"},{"location":"api/API_Examples/#delete-currency","text":"Request: https://localhost:2022/nxt? requestType=deleteCurrency& currency=7103310507724273660& secretPhrase=SECRETPHRASE& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"3f2b029337263728f4d4fed1f774252b06706159659e6ba9116b2d74b67a8435\", \"unsignedTransactionBytes\": \"05189d7208023c0010f09c34f225d425306e5be55a49469081...\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"09c7be5b0742191f3777cc850f9478af21bd42225aec5e0793b57cd188767a0be6f...\", \"feeNQT\": \"100000000\", \"type\": 5, \"fullHash\": \"a877379e3f3713e2f8baaa777c9a48af23d7da74e00301f12a4051dcf747243f\", \"version\": 1, \"ecBlockId\": \"2688066685599408512\", \"signatureHash\": \"3f2b029337263728f4d4fed1f774252b06706159659e6ba9116b2d74b67a8435\", \"attachment\": { \"version.CurrencyDeletion\": 1, \"currency\": \"7103310507724273660\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 8, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 162004, \"deadline\": 60, \"transaction\": \"16290425023506118568\", \"timestamp\": 34108061, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 112, \"transactionBytes\": \"05189d7208023c0010f09c34f225d425306e5be55a49469081...\", \"fullHash\": \"a877379e3f3713e2f8baaa777c9a48af23d7da74e00301f12a4051dcf747243f\", \"transaction\": \"16290425023506118568\" }","title":"Delete Currency"},{"location":"api/API_Examples/#get-account-currencies","text":"Request: https://localhost:2022/nxt? requestType=getAccountCurrencies& account=BLX-4VDY-LNVT-LMAY-FMCKA Response: { \"accountCurrencies\": [ { \"issuerAccountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"code\": \"MYSTX\", \"unconfirmedUnits\": \"10000\", \"decimals\": 2, \"name\": \"MystcoinX\", \"currency\": \"6520756875632314476\", \"units\": \"10000\", \"issuanceHeight\": 0, \"type\": 1, \"issuerAccount\": \"15295723609781267838\" } ], \"requestProcessingTime\": 1 }","title":"Get Account Currencies"},{"location":"api/API_Examples/#get-account-currency-count","text":"Request: https://localhost:2022/nxt? requestType=getAccountCurrencyCount& account=BLX-4VDY-LNVT-LMAY-FMCKA Response: { \"numberOfCurrencies\": 1, \"requestProcessingTime\": 1 }","title":"Get Account Currency Count"},{"location":"api/API_Examples/#get-account-exchange-requests","text":"Request: https://localhost:2022/nxt? requestType=getAccountExchangeRequests& account=BLX-4VDY-LNVT-LMAY-FMCKA& currency=6520756875632314476 Response: { \"exchangeRequests\": [ { \"issuerAccountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"code\": \"MYSTX\", \"subtype\": 6, \"decimals\": 2, \"name\": \"MystcoinX\", \"units\": \"200\", \"issuanceHeight\": 0, \"type\": 1, \"transaction\": \"14840146504449624275\", \"timestamp\": 34130695, \"rateNQT\": \"1500000000\", \"issuerAccount\": \"15295723609781267838\" } ], \"requestProcessingTime\": 1 }","title":"Get Account Exchange Requests"},{"location":"api/API_Examples/#get-funding-monitor","text":"Request: https://localhost:2022/nxt? requestType=getFundingMonitor& property=funding& secretPhrase=IWontTellYou& includeMonitoredAccounts:true Response: { \"requestProcessingTime\": 0, \"monitors\": [ { \"holding\": \"0\", \"amount\": \"1000000000\", \"monitoredAccounts\": [ { \"amount\": \"1000000000\", \"accountRS\": \"BLX-5MYN-AP7M-NKMH-CRQJZ\", \"threshold\": \"15000000000\", \"interval\": 10, \"account\": \"12664921794733526996\" }, { \"amount\": \"1000000000\", \"accountRS\": \"BLX-G885-AKDX-5G2B-BLUCG\", \"threshold\": \"15000000000\", \"interval\": 10, \"account\": \"10892890577210644675\" } ], \"holdingType\": 0, \"accountRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"property\": \"funding\", \"threshold\": \"15000000000\", \"interval\": 10, \"account\": \"12745647715474645062\" } ] }","title":"Get Funding Monitor"},{"location":"api/API_Examples/#get-all-currencies","text":"Request: https://localhost:2022/nxt? requestType=getAllCurrencies& firstIndex=2& lastIndex=2 Response: { \"requestProcessingTime\": 3, \"currencies\": [ { \"initialSupply\": \"10000\", \"currentReservePerUnitNQT\": \"0\", \"types\": [ \"EXCHANGEABLE\" ], \"code\": \"MYSTX\", \"creationHeight\": 162067, \"minDifficulty\": 0, \"numberOfTransfers\": 0, \"description\": \"Exchangeable\", \"minReservePerUnitNQT\": \"0\", \"currentSupply\": \"10000\", \"issuanceHeight\": 0, \"type\": 1, \"reserveSupply\": \"0\", \"maxDifficulty\": 0, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"decimals\": 2, \"name\": \"MystcoinX\", \"numberOfExchanges\": 12, \"currency\": \"6520756875632314476\", \"maxSupply\": \"10000\", \"account\": \"15295723609781267838\", \"algorithm\": 0 } ] }","title":"Get All Currencies"},{"location":"api/API_Examples/#get-all-exchanges","text":"Request: https://localhost:2022/nxt? requestType=getAllExchanges& firstIndex=7& lastIndex=7 Response: { \"exchanges\": [ { \"issuerAccountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"seller\": \"15295723609781267838\", \"code\": \"MYSTX\", \"sellerRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"units\": \"5000\", \"issuanceHeight\": 0, \"type\": 1, \"rateNQT\": \"10000000\", \"buyer\": \"11580081983047651163\", \"offer\": \"17204924627068821879\", \"buyerRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"decimals\": 2, \"name\": \"MystcoinX\", \"currency\": \"6520756875632314476\", \"block\": \"4816799421151726903\", \"transaction\": \"2086609620693258113\", \"timestamp\": 34206117, \"height\": 163202, \"issuerAccount\": \"15295723609781267838\" } ], \"requestProcessingTime\": 1 }","title":"Get All Exchanges"},{"location":"api/API_Examples/#get-available-to-buy","text":"Request: https://localhost:2022/nxt? requestType=getAvailableToBuy& currency=4855695375693311301& units=1 Response: { \"amountNQT\": \"1087\", \"units\": \"1\", \"requestProcessingTime\": 0, \"rateNQT\": \"1087\" }","title":"Get Available To Buy"},{"location":"api/API_Examples/#get-buy-sell-offers","text":"Request: https://localhost:2022/nxt? requestType=getSellOffers& currency=6520756875632314476 Response: { \"offers\": [ { \"offer\": \"4813417617929273983\", \"expirationHeight\": 163125, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"limit\": \"1000\", \"currency\": \"6520756875632314476\", \"supply\": \"500\", \"account\": \"15295723609781267838\", \"height\": 163110, \"rateNQT\": \"20000000\" } ], \"requestProcessingTime\": 1 }","title":"Get Buy / Sell Offers"},{"location":"api/API_Examples/#get-currencies","text":"Request: https://localhost:2022/nxt? requestType=getCurrencies& currencies=6520756875632314476 Response: { \"requestProcessingTime\": 3, \"currencies\": [ { \"initialSupply\": \"10000\", \"currentReservePerUnitNQT\": \"0\", \"types\": [ \"EXCHANGEABLE\" ], \"code\": \"MYSTX\", \"creationHeight\": 162067, \"minDifficulty\": 0, \"numberOfTransfers\": 0, \"description\": \"Exchangeable\", \"minReservePerUnitNQT\": \"0\", \"currentSupply\": \"10000\", \"issuanceHeight\": 0, \"type\": 1, \"reserveSupply\": \"0\", \"maxDifficulty\": 0, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"decimals\": 2, \"name\": \"MystcoinX\", \"numberOfExchanges\": 12, \"currency\": \"6520756875632314476\", \"maxSupply\": \"10000\", \"account\": \"15295723609781267838\", \"algorithm\": 0 } ] }","title":"Get Currencies"},{"location":"api/API_Examples/#get-currencies-by-issuer","text":"Request: https://localhost:2022/nxt? requestType=getCurrenciesByIssuer& account=BLX-4VDY-LNVT-LMAY-FMCKA Response: { \"requestProcessingTime\": 334, \"currencies\": [ [ { \"initialSupply\": \"10000\", \"currentReservePerUnitNQT\": \"0\", \"types\": [ \"EXCHANGEABLE\" ], \"code\": \"MYSTX\", \"creationHeight\": 162067, \"minDifficulty\": 0, \"numberOfTransfers\": 0, \"description\": \"Exchangeable\", \"minReservePerUnitNQT\": \"0\", \"currentSupply\": \"10000\", \"issuanceHeight\": 0, \"type\": 1, \"reserveSupply\": \"0\", \"maxDifficulty\": 0, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"decimals\": 2, \"name\": \"MystcoinX\", \"numberOfExchanges\": 12, \"currency\": \"6520756875632314476\", \"maxSupply\": \"10000\", \"account\": \"15295723609781267838\", \"algorithm\": 0 } ] ] }","title":"Get Currencies By Issuer"},{"location":"api/API_Examples/#get-currency","text":"Request: https://localhost:2022/nxt? requestType=getCurrency& code=MYSTX Response: { \"initialSupply\": \"10000\", \"currentReservePerUnitNQT\": \"0\", \"types\": [ \"EXCHANGEABLE\" ], \"code\": \"MYSTX\", \"creationHeight\": 162067, \"minDifficulty\": 0, \"numberOfTransfers\": 0, \"description\": \"Exchangeable\", \"minReservePerUnitNQT\": \"0\", \"currentSupply\": \"10000\", \"issuanceHeight\": 0, \"requestProcessingTime\": 0, \"type\": 1, \"reserveSupply\": \"0\", \"maxDifficulty\": 0, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"decimals\": 2, \"name\": \"MystcoinX\", \"numberOfExchanges\": 0, \"currency\": \"6520756875632314476\", \"maxSupply\": \"10000\", \"account\": \"15295723609781267838\", \"algorithm\": 0 }","title":"Get Currency"},{"location":"api/API_Examples/#get-currency-account-count","text":"Request: https://localhost:2022/nxt? requestType=getCurrencyAccountCount& currency=6520756875632314476 Response: { \"numberOfAccounts\": 2, \"requestProcessingTime\": 1 }","title":"Get Currency Account Count"},{"location":"api/API_Examples/#get-currency-accounts","text":"Request: https://localhost:2022/nxt? requestType=getCurrencyAccounts& currency=6520756875632314476 Response: { \"accountCurrencies\": [ { \"unconfirmedUnits\": \"9000\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"currency\": \"6520756875632314476\", \"units\": \"9000\", \"account\": \"15295723609781267838\" }, { \"unconfirmedUnits\": \"1000\", \"accountRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"currency\": \"6520756875632314476\", \"units\": \"1000\", \"account\": \"11580081983047651163\" } ], \"requestProcessingTime\": 1 }","title":"Get Currency Accounts"},{"location":"api/API_Examples/#get-currency-founders","text":"Request: https://localhost:2022/nxt? requestType=getCurrencyFounders& currency=16165836410580103964 Response: { \"founders\": [ { \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"amountPerUnitNQT\": \"100000000\", \"currency\": \"16165836410580103964\", \"account\": \"15295723609781267838\" } ], \"requestProcessingTime\": 1 }","title":"Get Currency Founders"},{"location":"api/API_Examples/#get-currency-ids","text":"Request: https://localhost:2022/nxt? requestType=getCurrencyIds& lastIndex=2 Response: { \"currencyIds\": [ \"3543596621551215845\", \"6520756875632314476\", \"10304209318415949524\" ], \"requestProcessingTime\": 2 }","title":"Get Currency Ids"},{"location":"api/API_Examples/#get-currency-transfers","text":"Request: https://localhost:2022/nxt? requestType=getCurrencyTransfers& currency=9387514940677621191 Response: { \"transfers\": [ { \"issuerAccountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"code\": \"MYSTX\", \"units\": \"10\", \"issuanceHeight\": 0, \"type\": 1, \"transfer\": \"12208608533071682262\", \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"sender\": \"15295723609781267838\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"decimals\": 2, \"recipient\": \"11580081983047651163\", \"name\": \"MystcoinX\", \"currency\": \"9387514940677621191\", \"issuerAccount\": \"15295723609781267838\", \"height\": 159732, \"timestamp\": 34280949 } ], \"requestProcessingTime\": 0 }","title":"Get Currency Transfers"},{"location":"api/API_Examples/#get-exchanges","text":"Request: https://localhost:2022/nxt? requestType=getExchanges& currency=6520756875632314476 Response: { \"exchanges\": [ { \"issuerAccountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"seller\": \"15295723609781267838\", \"code\": \"MYSTX\", \"sellerRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"units\": \"1\", \"issuanceHeight\": 0, \"type\": 1, \"rateNQT\": \"1500000000\", \"buyer\": \"11580081983047651163\", \"offer\": \"7762792906174207279\", \"buyerRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"decimals\": 2, \"name\": \"MystcoinX\", \"currency\": \"6520756875632314476\", \"block\": \"2329341955641682831\", \"transaction\": \"12589829502215822061\", \"timestamp\": 34137058, \"height\": 162356, \"issuerAccount\": \"15295723609781267838\" } ], \"requestProcessingTime\": 0 }","title":"Get Exchanges"},{"location":"api/API_Examples/#get-exchanges-by-exchange-request","text":"Request: https://localhost:2022/nxt? requestType=getExchangesByExchangeRequest& transaction=12589829502215822061 Response: { \"exchanges\": [ { \"issuerAccountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"seller\": \"15295723609781267838\", \"code\": \"MYSTX\", \"sellerRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"units\": \"1\", \"issuanceHeight\": 0, \"type\": 1, \"rateNQT\": \"1500000000\", \"buyer\": \"11580081983047651163\", \"offer\": \"7762792906174207279\", \"buyerRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"decimals\": 2, \"name\": \"MystcoinX\", \"currency\": \"6520756875632314476\", \"block\": \"2329341955641682831\", \"transaction\": \"12589829502215822061\", \"timestamp\": 34137058, \"height\": 162356, \"issuerAccount\": \"15295723609781267838\" } ], \"requestProcessingTime\": 1 }","title":"Get Exchanges By Exchange Request"},{"location":"api/API_Examples/#get-exchanges-by-offer","text":"Request: https://localhost:2022/nxt? requestType=getExchangesByOffer& offer=7762792906174207279 Response: { \"exchanges\": [ { \"issuerAccountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"seller\": \"15295723609781267838\", \"code\": \"MYSTX\", \"sellerRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"units\": \"1\", \"issuanceHeight\": 0, \"type\": 1, \"rateNQT\": \"1500000000\", \"buyer\": \"11580081983047651163\", \"offer\": \"7762792906174207279\", \"buyerRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"decimals\": 2, \"name\": \"MystcoinX\", \"currency\": \"6520756875632314476\", \"block\": \"2329341955641682831\", \"transaction\": \"12589829502215822061\", \"timestamp\": 34137058, \"height\": 162356, \"issuerAccount\": \"15295723609781267838\" } ], \"requestProcessingTime\": 1 }","title":"Get Exchanges By Offer"},{"location":"api/API_Examples/#get-last-exchanges","text":"Request: https://localhost:2022/nxt? requestType=getLastExchanges& currencies=12366259387060174981 Response: { \"exchanges\": [ { \"offer\": \"1659323201112235372\", \"seller\": \"15295723609781267838\", \"buyerRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"sellerRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"currency\": \"12366259387060174981\", \"block\": \"15911141024340031754\", \"units\": \"2\", \"transaction\": \"13926698078551037914\", \"timestamp\": 35547397, \"rateNQT\": \"100000000\", \"buyer\": \"15295723609781267838\", \"height\": 167709 } ], \"requestProcessingTime\": 0 }","title":"Get Last Exchanges"},{"location":"api/API_Examples/#get-minting-target","text":"Request: https://localhost:2022/nxt? requestType=getMintingTarget& currency=9207767346829573996& account=BLX-4VDY-LNVT-LMAY-FMCKA& units=1 Response: { \"difficulty\": \"1024\", \"targetBytes\": \"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3f00\", \"currency\": \"9207767346829573996\", \"counter\": 0, \"requestProcessingTime\": 1 }","title":"Get Minting Target"},{"location":"api/API_Examples/#get-offer","text":"Request: https://localhost:2022/nxt? requestType=getOffer& offer=4813417617929273983 Response: { \"sellOffer\": { \"offer\": \"4813417617929273983\", \"expirationHeight\": 163125, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"limit\": \"1000\", \"currency\": \"6520756875632314476\", \"supply\": \"500\", \"account\": \"15295723609781267838\", \"height\": 163110, \"rateNQT\": \"20000000\" }, \"buyOffer\": { \"offer\": \"4813417617929273983\", \"expirationHeight\": 163125, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"limit\": \"1000\", \"currency\": \"6520756875632314476\", \"supply\": \"500\", \"account\": \"15295723609781267838\", \"height\": 163110, \"rateNQT\": \"10000000\" }, \"requestProcessingTime\": 0 }","title":"Get Offer"},{"location":"api/API_Examples/#issue-currency","text":"Request: https://localhost:2022/nxt? requestType=issueCurrency& name=MystcoinX& code=MYSTX& description=Exchangeable type=1& initialSupply=10000& maxSupply=10000& decimals=2& secretPhrase=SECRETPHRASE& feeNQT=4000000000& deadline=60 Response: { \"signatureHash\": \"c5ec66dd60bcc13fc0fe2cb617b4d7a05e7ef6360aacc591c911969785361491\", \"unsignedTransactionBytes\": \"05100f8308023c0010f09c34f225d425306e5be55a49469081...\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"da27e4bead869d0e96fb9370f0afcd0c49eb17b7da503705384239d9abaec209733...\", \"feeNQT\": \"4000000000\", \"type\": 5, \"fullHash\": \"6c08c076d4617e5a4be6f027c9b3e47ddb0e92fab87032d631546051dbdbfe8c\", \"version\": 1, \"ecBlockId\": \"2004481009157728964\", \"signatureHash\": \"c5ec66dd60bcc13fc0fe2cb617b4d7a05e7ef6360aacc591c911969785361491\", \"attachment\": { \"initialSupply\": \"10000\", \"code\": \"MYSTX\", \"minDifficulty\": 0, \"ruleset\": 0, \"description\": \"Exchangeable\", \"minReservePerUnitNQT\": \"0\", \"issuanceHeight\": 0, \"type\": 1, \"reserveSupply\": \"0\", \"version.CurrencyIssuance\": 1, \"maxDifficulty\": 0, \"decimals\": 2, \"name\": \"MystcoinX\", \"maxSupply\": \"10000\", \"algorithm\": 0 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 162060, \"deadline\": 60, \"transaction\": \"6520756875632314476\", \"timestamp\": 34112271, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 53, \"transactionBytes\": \"05100f8308023c0010f09c34f225d425306e5be55a49469081560...\", \"fullHash\": \"6c08c076d4617e5a4be6f027c9b3e47ddb0e92fab87032d631546051dbdbfe8c\", \"transaction\": \"6520756875632314476\" }","title":"Issue Currency"},{"location":"api/API_Examples/#publish-exchange-offer","text":"Request: https://localhost:2022/nxt? requestType=publishExchangeOffer& currency=6520756875632314476& buyRateNQT=10000000& sellRateNQT=20000000& totalBuyLimit=1000& totalSellLimit=1000& initialBuySupply=500& initialSellSupply=500& expirationHeight=163080& secretPhrase=SECRETPHRASE& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"6fd60fcbc6e7022f12adad82a76c0534d2f79a569b9857b02328bf7573cf93f8\", \"unsignedTransactionBytes\": \"0514d7c409023c0010f09c34f225d425306e5be55a49469081...\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"b204a7d9622ac6b99936447a4314fac1c2f0c67e45f4021f4b1949755c081802a34...\", \"feeNQT\": \"100000000\", \"type\": 5, \"fullHash\": \"fccb2c6200a04bbce82b9e623051b8d8ed9d519dbb0a12ec5a354c842da9a664\", \"version\": 1, \"ecBlockId\": \"6813726597245349906\", \"signatureHash\": \"6fd60fcbc6e7022f12adad82a76c0534d2f79a569b9857b02328bf7573cf93f8\", \"attachment\": { \"totalSellLimit\": \"1000\", \"buyRateNQT\": \"10000000\", \"initialSellSupply\": \"500\", \"totalBuyLimit\": \"1000\", \"expirationHeight\": 163080, \"sellRateNQT\": \"20000000\", \"version.PublishExchangeOffer\": 1, \"currency\": \"6520756875632314476\", \"initialBuySupply\": \"500\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 4, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 163049, \"deadline\": 60, \"transaction\": \"13568114225891298300\", \"timestamp\": 34194647, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 54, \"transactionBytes\": \"0514d7c409023c0010f09c34f225d425306e5be55a4946908156072...\", \"transaction\": \"13568114225891298300\" }","title":"Publish Exchange Offer"},{"location":"api/API_Examples/#search-currencies","text":"Request: https://localhost:2022/nxt? requestType=searchCurrencies& query=MYST? Response: { \"requestProcessingTime\": 5, \"currencies\": [ { \"initialSupply\": \"10000\", \"currentReservePerUnitNQT\": \"0\", \"types\": [ \"EXCHANGEABLE\" ], \"code\": \"MYSTX\", \"creationHeight\": 159726, \"minDifficulty\": 0, \"numberOfTransfers\": 3, \"description\": \"Exchangeable\", \"minReservePerUnitNQT\": \"0\", \"currentSupply\": \"10000\", \"issuanceHeight\": 0, \"type\": 1, \"reserveSupply\": \"0\", \"maxDifficulty\": 0, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"decimals\": 2, \"name\": \"MystcoinX\", \"numberOfExchanges\": 0, \"currency\": \"9387514940677621191\", \"maxSupply\": \"10000\", \"account\": \"15295723609781267838\", \"algorithm\": 0 } ] }","title":"Search Currencies"},{"location":"api/API_Examples/#transfer-currency","text":"Request: https://localhost:2022/nxt? requestType=transferCurrency& recipient=BLX-BMUV-8QQR-47VK-CR7F3& currency=9387514940677621191& units=10 Response: { \"signatureHash\": \"eda8f238d164074170ddb8163d7d71f08062f1f1a51712f05670a670e64e5eff\", \"unsignedTransactionBytes\": \"0513ad150b023c0010f09c34f225d425306e5be55a49469081...\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"7629cba6e776685c9e134f8d96c54a5bcad6915c433f833b1ca792c69e75ee0ac6f...\", \"feeNQT\": \"100000000\", \"type\": 5, \"fullHash\": \"d65a8adfc6b06da98ce50bb36d52305a8c9300b8defbeed9f2582628d9e258f0\", \"version\": 1, \"ecBlockId\": \"13770841487927223834\", \"signatureHash\": \"eda8f238d164074170ddb8163d7d71f08062f1f1a51712f05670a670e64e5eff\", \"attachment\": { \"currency\": \"9387514940677621191\", \"version.CurrencyTransfer\": 1, \"units\": \"10\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 3, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"recipient\": \"11580081983047651163\", \"ecBlockHeight\": 159721, \"deadline\": 60, \"transaction\": \"12208608533071682262\", \"timestamp\": 34280877, \"height\": 2147483647 }, \"broadcasted\": true, \"requestProcessingTime\": 8, \"transactionBytes\": \"0513ad150b023c0010f09c34f225d425306e5be55a49469081560...\", \"fullHash\": \"d65a8adfc6b06da98ce50bb36d52305a8c9300b8defbeed9f2582628d9e258f0\", \"transaction\": \"12208608533071682262\" }","title":"Transfer Currency"},{"location":"api/API_Examples/#networking-operations","text":"","title":"Networking Operations"},{"location":"api/API_Examples/#add-peer","text":"Request: https://localhost:2022/nxt? requestType=addPeer& peer=nxt9.webice.ru Response: { \"hallmark\": \"4a8fd0f2af5f511e041ad7bee1625ae3a711ddcc056c60cf7ab3523e2c99092f0e006e...\", \"downloadedVolume\": 155414, \"address\": \"23.95.51.154\", \"weight\": 19829, \"uploadedVolume\": 63532, \"requestProcessingTime\": 478, \"version\": \"1.4.8\", \"platform\": \"webice.ru\", \"lastUpdated\": 37014605, \"blacklisted\": false, \"announcedAddress\": \"nxt9.webice.ru\", \"application\": \"NRS\", \"state\": 1, \"shareAddress\": true }","title":"Add Peer"},{"location":"api/API_Examples/#blacklist-api-proxy-peer","text":"Request: https://localhost:2022/nxt? requestType=blacklistAPIProxyPeer& peer=52.0.72.67 Response: { \"requestProcessingTime\": 24, \"done\": true }","title":"Blacklist API Proxy Peer"},{"location":"api/API_Examples/#blacklist-peer","text":"Request: https://localhost:2022/nxt? requestType=blacklistPeer& peer=nxt9.webice.ru Response: { \"requestProcessingTime\": 0, \"done\": true }","title":"Blacklist Peer"},{"location":"api/API_Examples/#get-inbound-peers","text":"Request: https://localhost:2022/nxt? requestType=getInboundPeers Response: { \"peers\": [], \"requestProcessingTime\": 1 }","title":"Get Inbound Peers"},{"location":"api/API_Examples/#get-my-info","text":"Request: https://localhost:2022/nxt? requestType=getMyInfo Response: { \"address\": \"127.0.0.1\", \"host\": \"127.0.0.1\", \"requestProcessingTime\": 1 }","title":"Get My Info"},{"location":"api/API_Examples/#get-peer","text":"Request: https://localhost:2022/nxt? requestType=getPeer& peer=nxtx.ru Response: { \"hallmark\": \"5f107c33097fc8241f55b9eb23615fe80ed3f87c87dc8c23ed6a08ab9273417a07006...\", \"downloadedVolume\": 352, \"address\": \"188.226.174.169\", \"inbound\": false, \"weight\": 53, \"uploadedVolume\": 2165, \"requestProcessingTime\": 30, \"version\": \"1.5.11\", \"platform\": \"VPS\", \"inboundWebSocket\": false, \"lastUpdated\": 48540348, \"blacklisted\": false, \"announcedAddress\": \"nxtx.ru\", \"application\": \"NRS\", \"port\": 7874, \"outboundWebSocket\": true, \"lastConnectAttempt\": 48540348, \"state\": 1, \"shareAddress\": true }","title":"Get Peer"},{"location":"api/API_Examples/#get-peers","text":"Request: https://localhost:2022/nxt? requestType=getPeers& state=DISCONNECTED Response: { \"peers\": [ \"198.50.146.93\", \"213.46.57.77\" ], \"requestProcessingTime\": 1 }","title":"Get Peers"},{"location":"api/API_Examples/#set-api-proxy-peer","text":"Request: https://localhost:2022/nxt? requestType=setAPIProxyPeer& peer=163.172.154.74 Response: { \"downloadedVolume\":6176, \"address\":\"104.223.53.14\", \"inbound\":false, \"blockchainState\":\"UP\\_TO\\_DATE\", \"weight\":0, \"uploadedVolume\":323, \"services\":[ \"HALLMARK\",\"PRUNABLE\",\"API\",\"API\\_SSL\",\"CORS\" ], \"requestProcessingTime\":77, \"version\":\"1.11.5\", \"platform\":\"BLX-TGFQ-U33C-C37U-CMKWF\", \"inboundWebSocket\":false, \"apiSSLPort\":7878, \"lastUpdated\":112610887, \"blacklisted\":false, \"announcedAddress\":\"104.223.53.14\", \"apiPort\":2022, \"application\":\"NRS\", \"port\":7874, \"outboundWebSocket\":true, \"lastConnectAttempt\":112610887, \"state\":1, \"shareAddress\":true }","title":"Set API Proxy Peer"},{"location":"api/API_Examples/#phasing-operations","text":"","title":"Phasing Operations"},{"location":"api/API_Examples/#approve-transaction","text":"Request: https://localhost:2022/nxt? requestType=approveTransaction& transactionFullHash=5016cc59b0665675f00513e8c647288e0a668a78c4964c84d0de8f768b89060a& revealedSecretText=secret& secretPhrase=secretPhrase& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"db429ccecd7d13b54b43cf9db7656cef6df6152c60e626b393000ed00a652c95\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"380e1a94e40d58e9382aa742ca998373e27c5d30890d91a74d83bfead849e507e93c51...\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"2bb80af156e70067f509df9ad5a88b687040cff4a8c778c69aef77863d3d15ef\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"704052112466096836\", \"signatureHash\": \"db429ccecd7d13b54b43cf9db7656cef6df6152c60e626b393000ed00a652c95\", \"attachment\": { \"transactionFullHashes\": [ \"5016cc59b0665675f00513e8c647288e0a668a78c4964c84d0de8f768b89060a\" ], \"version.PhasingVoteCasting\": 1, \"revealedSecret\": \"736563726574\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 9, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 262493, \"deadline\": 60, \"transaction\": \"7422186546503792683\", \"timestamp\": 43965004, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"01194cda9e023c0010f09c34f225d425306e5be55a494690...\", \"broadcasted\": true, \"requestProcessingTime\": 20, \"transactionBytes\": \"01194cda9e023c0010f09c34f225d425306e5be55a4946908156072a...\", \"fullHash\": \"2bb80af156e70067f509df9ad5a88b687040cff4a8c778c69aef77863d3d15ef\", \"transaction\": \"7422186546503792683\" }","title":"Approve Transaction"},{"location":"api/API_Examples/#create-phasing-poll","text":"Request: https://localhost:2022/nxt? requestType=sendMoney& recipient=BLX-BMUV-8QQR-47VK-CR7F3& secretPhrase=secretPhrase& feeNQT=200000000& deadline=60& phased=true& phasingFinishHeight=261550& phasingVotingModel=0& phasingQuorum=2 Response: { \"signatureHash\": \"df6c2dfcaf17f83256cfe388f408e091c08f208a060d54d1fbdb407ffdca121c\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"418a5453329d6c8d29b1b49dff30653a7f1e66992cece404d8ae997413deaa015b749a...\", \"feeNQT\": \"200000000\", \"type\": 0, \"fullHash\": \"6fd876512477ef4fab089ec2ffa084d6db75ba3cd0cef2541675515470dca374\", \"version\": 1, \"phased\": true, \"ecBlockId\": \"17522485785088843392\", \"signatureHash\": \"df6c2dfcaf17f83256cfe388f408e091c08f208a060d54d1fbdb407ffdca121c\", \"attachment\": { \"phasingFinishHeight\": 261550, \"phasingHolding\": \"0\", \"phasingQuorum\": \"2\", \"version.Phasing\": 1, \"phasingMinBalance\": \"0\", \"phasingMinBalanceModel\": 0, \"version.OrdinaryPayment\": 0, \"phasingVotingModel\": 0 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"2000000000\", \"sender\": \"15295723609781267838\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"recipient\": \"11580081983047651163\", \"ecBlockHeight\": 261454, \"deadline\": 60, \"transaction\": \"5759953446299424879\", \"timestamp\": 43874749, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"0010bd799d023c0010f09c34f225d425306e5be55a494690...\", \"broadcasted\": true, \"requestProcessingTime\": 760, \"transactionBytes\": \"0010bd799d023c0010f09c34f225d425306e5be55a4946908156072a...\", \"fullHash\": \"6fd876512477ef4fab089ec2ffa084d6db75ba3cd0cef2541675515470dca374\", \"transaction\": \"5759953446299424879\" }","title":"Create Phasing Poll"},{"location":"api/API_Examples/#get-account-phased-transaction-count","text":"Request: https://localhost:2022/nxt? requestType=getAccountPhasedTransactionCount& account=15295723609781267838 Response: { \"requestProcessingTime\": 1, \"numberOfPhasedTransactions\": 3 }","title":"Get Account Phased Transaction Count"},{"location":"api/API_Examples/#get-account-phased-transactions","text":"Request: https://localhost:2022/nxt? requestType=getAccountPhasedTransactions& account=15295723609781267838& lastIndex=0 Response: { \"requestProcessingTime\": 2, \"transactions\": [ { \"signature\": \"803d3fad7076bfe3f48a8ced40bb7075539858bf2b9d23b7653671a7204e6108234d...\", \"transactionIndex\": 0, \"type\": 0, \"phased\": true, \"ecBlockId\": \"14167949999961480077\", \"signatureHash\": \"693b18675d813dcc2de1a889fd919d0c4a0eaa679df0b0f8b0ec703bc2e278d4\", \"attachment\": { \"phasingFinishHeight\": 262450, \"phasingHolding\": \"17091401215301664836\", \"phasingQuorum\": \"500\", \"version.Phasing\": 1, \"phasingMinBalance\": \"100\", \"phasingMinBalanceModel\": 2, \"version.OrdinaryPayment\": 0, \"phasingVotingModel\": 2 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"500000000\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"block\": \"11015494088798322289\", \"blockTimestamp\": 43952022, \"deadline\": 60, \"timestamp\": 43957682, \"height\": 262418, \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"feeNQT\": \"2100000000\", \"confirmations\": 27, \"fullHash\": \"e57462c46447f8bd7a0bafd9ab65bde8743ca6c13213185271d7ea6c48118861\", \"version\": 1, \"sender\": \"15295723609781267838\", \"recipient\": \"11580081983047651163\", \"ecBlockHeight\": 262409, \"transaction\": \"13688769565509711077\" } ] }","title":"Get Account Phased Transactions"},{"location":"api/API_Examples/#get-asset-phased-transactions","text":"Request: https://localhost:2022/nxt? requestType=getAssetPhasedTransactions& asset=17091401215301664836 Response: { \"requestProcessingTime\": 2, \"transactions\": [ { \"signature\": \"803d3fad7076bfe3f48a8ced40bb7075539858bf2b9d23b7653671a7204e6108234d...\", \"transactionIndex\": 0, \"type\": 0, \"phased\": true, \"ecBlockId\": \"14167949999961480077\", \"signatureHash\": \"693b18675d813dcc2de1a889fd919d0c4a0eaa679df0b0f8b0ec703bc2e278d4\", \"attachment\": { \"phasingFinishHeight\": 262450, \"phasingHolding\": \"\", \"phasingQuorum\": \"500\", \"version.Phasing\": 1, \"phasingMinBalance\": \"100\", \"phasingMinBalanceModel\": 2, \"version.OrdinaryPayment\": 0, \"phasingVotingModel\": 2 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"500000000\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"block\": \"11015494088798322289\", \"blockTimestamp\": 43952022, \"deadline\": 60, \"timestamp\": 43957682, \"height\": 262418, \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"feeNQT\": \"2100000000\", \"confirmations\": 27, \"fullHash\": \"e57462c46447f8bd7a0bafd9ab65bde8743ca6c13213185271d7ea6c48118861\", \"version\": 1, \"sender\": \"15295723609781267838\", \"recipient\": \"11580081983047651163\", \"ecBlockHeight\": 262409, \"transaction\": \"13688769565509711077\" } ] }","title":"Get Asset Phased Transactions"},{"location":"api/API_Examples/#get-currency-phased-transactions","text":"Request: https://localhost:2022/nxt? requestType=getCurrencyPhasedTransactions& currency=12366259387060174981 Response: { \"requestProcessingTime\": 2, \"transactions\": [ { \"signature\": \"ec467483307c73c08e7e9195eeddf23ce129ce30d703881cca505cbb0569c2009...\", \"transactionIndex\": 0, \"type\": 0, \"phased\": true, \"ecBlockId\": \"7353294686633135686\", \"signatureHash\": \"12cc1d54a453c3d1231b991a54f3323db6a51c00387ca5480db268164d5b7cfa\", \"attachment\": { \"phasingFinishHeight\": 263500, \"phasingHolding\": \"12366259387060174981\", \"phasingQuorum\": \"100\", \"version.Phasing\": 1, \"phasingMinBalance\": \"10\", \"phasingMinBalanceModel\": 3, \"version.OrdinaryPayment\": 0, \"phasingVotingModel\": 3 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"800000000\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"block\": \"699750272975612223\", \"blockTimestamp\": 44042909, \"deadline\": 60, \"timestamp\": 44042827, \"height\": 263430, \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"feeNQT\": \"4100000000\", \"confirmations\": 2, \"fullHash\": \"5799d135aacf48a317c813fea405c317e7ab90888afb701b92c17914744f244f\", \"version\": 1, \"sender\": \"15295723609781267838\", \"recipient\": \"11580081983047651163\", \"ecBlockHeight\": 263424, \"transaction\": \"11765882356459739479\" } ] }","title":"Get Currency Phased Transactions"},{"location":"api/API_Examples/#get-linked-phased-transactions","text":"Request: https://localhost:2022/nxt? requestType=getLinkedPhasedTransactions& linkedFullHash=083eba49bb481c38752a14493f0d40b3c60635935f13dd1fb33f6831fb997079 Response: { \"requestProcessingTime\": 1, \"transactions\": [ { \"signature\": \"d20a8bb84dcb335182ddc81ceaa1c5464881137d32eb195805ad460c9fcdba0...\", \"transactionIndex\": 0, \"type\": 0, \"phased\": true, \"ecBlockId\": \"4351283327032663440\", \"signatureHash\": \"77dfa3ff467a3b253530ad1b7a227633fa21fa064efe1df8206690bafb06f42c\", \"attachment\": { \"phasingFinishHeight\": 770000, \"version.Message\": 1, \"phasingHolding\": \"0\", \"phasingQuorum\": \"1\", \"version.Phasing\": 1, \"messageIsText\": true, \"phasingLinkedFullHashes\": [ \"083eba49bb481c38752a14493f0d40b3c60635935f13dd1fb33f6831fb997079\" ], \"phasingMinBalance\": \"0\", \"message\": \"I givef Nxt\", \"phasingMinBalanceModel\": 0, \"version.OrdinaryPayment\": 0, \"phasingVotingModel\": 4 }, \"senderRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"subtype\": 0, \"amountNQT\": \"500000000\", \"recipientRS\": \"BLX-5MYN-AP7M-NKMH-CRQJZ\", \"block\": \"13425992991123879393\", \"blockTimestamp\": 80870662, \"deadline\": 1440, \"timestamp\": 80870626, \"height\": 768864, \"senderPublicKey\": \"373522bcd8904f4707472e590cbb67976d40e7af39650ea11cb2be...\", \"feeNQT\": \"300000000\", \"confirmations\": 11, \"fullHash\": \"a1d845b3daf08493a2b299639b71422a41fcf923e1b68a4533d2bd0e22ad694d\", \"version\": 1, \"sender\": \"12745647715474645062\", \"recipient\": \"12664921794733526996\", \"ecBlockHeight\": 768850, \"transaction\": \"10629885842602449057\" } ] }","title":"Get Linked Phased Transactions"},{"location":"api/API_Examples/#get-phasing-poll","text":"Request: https://localhost:2022/nxt? requestType=getPhasingPoll& transaction=15402897900571339064 Response: { \"votingModel\": 0, \"quorum\": \"2\", \"transactionFullHash\": \"38292a530816c2d5693bf5d0afb20847a3c4d2f37c3665fd294a7d2fdc278d56\", \"finished\": true, \"whitelist\": [ { \"whitelistedRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"whitelisted\": \"11580081983047651163\" }, { \"whitelistedRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"whitelisted\": \"15295723609781267838\" } ], \"requestProcessingTime\": 1, \"result\": \"2\", \"approved\": true, \"minBalance\": \"0\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"finishHeight\": 259600, \"minBalanceModel\": 0, \"transaction\": \"15402897900571339064\", \"account\": \"15295723609781267838\", \"hashedSecret\": \"\" }","title":"Get Phasing Poll"},{"location":"api/API_Examples/#get-phasing-poll-vote","text":"Request: https://localhost:2022/nxt? requestType=getPhasingPollVote& transaction=12580288379938056583& account=15295723609781267838 Response: { \"voterRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"voter\": \"15295723609781267838\", \"requestProcessingTime\": 1, \"transaction\": \"9761138556025135837\" }","title":"Get Phasing Poll Vote"},{"location":"api/API_Examples/#get-phasing-poll-votes","text":"Request: https://localhost:2022/nxt? requestType=getPhasingPollVotes& account=12580288379938056583 Response: { \"votes\": [ { \"voterRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"voter\": \"15295723609781267838\", \"transaction\": \"9761138556025135837\" } ], \"requestProcessingTime\": 2 }","title":"Get Phasing Poll Votes"},{"location":"api/API_Examples/#get-phasing-polls","text":"Request: https://localhost:2022/nxt? requestType=getPhasingPolls& transaction=12580288379938056583& transaction=13688769565509711077& countVotes=true Response: { \"polls\": [ { \"votingModel\": 1, \"quorum\": \"100000000000\", \"transactionFullHash\": \"87a92edaa02996aeaf59a619ca513563775870c2b8ca490b61b02535745cdd34\", \"finished\": true, \"whitelist\": [], \"result\": \"186700000000\", \"approved\": true, \"minBalance\": \"10000000000\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"finishHeight\": 262450, \"minBalanceModel\": 1, \"transaction\": \"12580288379938056583\", \"account\": \"15295723609781267838\", \"hashedSecret\": \"\" }, { \"votingModel\": 2, \"quorum\": \"500\", \"transactionFullHash\": \"e57462c46447f8bd7a0bafd9ab65bde8743ca6c13213185271d7ea6c48118861\", \"finished\": true, \"whitelist\": [], \"result\": \"500\", \"holding\": \"17091401215301664836\", \"approved\": true, \"minBalance\": \"100\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"finishHeight\": 262450, \"minBalanceModel\": 2, \"transaction\": \"13688769565509711077\", \"account\": \"15295723609781267838\", \"hashedSecret\": \"\" } ], \"requestProcessingTime\": 1 }","title":"Get Phasing Polls"},{"location":"api/API_Examples/#get-voter-phased-transactions","text":"Request: https://localhost:2022/nxt? requestType=getVoterPhasedTransactions& account=15295723609781267838 Response: { \"requestProcessingTime\": 1, \"transactions\": [ { \"signature\": \"e527fce6591049b61d232ebbf4171319ae4e208f34d8a055ffb09f07dec7d9033527...\", \"transactionIndex\": 0, \"type\": 0, \"phased\": true, \"ecBlockId\": \"13625660527605830055\", \"signatureHash\": \"2a3cc644b1cb48130a172de92a418d48522b45a25a36d4d48c2347f032e430ab\", \"attachment\": { \"phasingFinishHeight\": 263850, \"phasingHolding\": \"0\", \"phasingQuorum\": \"2\", \"version.Phasing\": 1, \"phasingWhitelist\": [ \"11580081983047651163\", \"15295723609781267838\" ], \"phasingMinBalance\": \"0\", \"phasingMinBalanceModel\": 0, \"version.OrdinaryPayment\": 0, \"phasingVotingModel\": 0 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"1100000000\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"block\": \"16550954176569210781\", \"blockTimestamp\": 44074579, \"deadline\": 1440, \"timestamp\": 44074556, \"height\": 263813, \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"feeNQT\": \"200000000\", \"confirmations\": 0, \"fullHash\": \"b54a7e14c910e0750af0b29c0328347e27411dbe5d158d5d358ee2165b781968\", \"version\": 1, \"sender\": \"15295723609781267838\", \"recipient\": \"11580081983047651163\", \"ecBlockHeight\": 263804, \"transaction\": \"8493807353039047349\" } ] }","title":"Get Voter Phased Transactions"},{"location":"api/API_Examples/#server-information-operations","text":"","title":"Server Information Operations"},{"location":"api/API_Examples/#event-register","text":"Request: https://localhost:2022/nxt? requestType=eventRegister Response: { \"registered\": true, \"requestProcessingTime\": 5780 }","title":"Event Register"},{"location":"api/API_Examples/#event-wait","text":"Request: https://localhost:2022/nxt? requestType=eventWait Response: { \"requestProcessingTime\": 0, \"events\": [ { \"name\": \"Block.BLOCK\\_PUSHED\", \"ids\": [ \"11748297033830700369\" ] }, { \"name\": \"Transaction.REMOVED\\_UNCONFIRMED\\_TRANSACTIONS\", \"ids\": [] }, { \"name\": \"Peer.ADDED\\_ACTIVE\\_PEER\", \"ids\": [ \"178.150.207.53\" ] } ] }","title":"Event Wait"},{"location":"api/API_Examples/#get-blockchain-status","text":"Request: https://localhost:2022/nxt? requestType=getBlockchainStatus Response: { \"currentMinRollbackHeight\": 445745, \"numberOfBlocks\": 446546, \"isTestnet\": false, \"includeExpiredPrunable\": false, \"requestProcessingTime\": 1, \"version\": \"1.5.11\", \"maxRollback\": 800, \"lastBlock\": \"2164693711802180410\", \"application\": \"NRS\", \"isScanning\": false, \"isDownloading\": false, \"cumulativeDifficulty\": \"17966254519242206\", \"lastBlockchainFeederHeight\": 446597, \"maxPrunableLifetime\": 1209600, \"time\": 48539846, \"lastBlockchainFeeder\": \"84.253.125.186\" }","title":"Get Blockchain Status"},{"location":"api/API_Examples/#get-plugins","text":"Request: https://localhost:2022/nxt? requestType=getPlugins Response: { \"plugins\": [ \"hello\\_world\" ], \"requestProcessingTime\": 9 }","title":"Get Plugins"},{"location":"api/API_Examples/#get-state","text":"Request: https://localhost:2022/nxt? requestType=getState Response: { \"numberOfPolls\": 19, \"numberOfTransfers\": 124216, \"maxMemory\": 900726784, \"numberOfOffers\": 90, \"isDownloading\": false, \"cumulativeDifficulty\": \"17966254519242206\", \"numberOfCurrencies\": 1833, \"freeMemory\": 36399744, \"peerPort\": 7874, \"availableProcessors\": 4, \"numberOfTaggedData\": 1, \"numberOfActiveAccountLeases\": 216, \"currentMinRollbackHeight\": 445745, \"requestProcessingTime\": 125533, \"version\": \"1.5.11\", \"numberOfAliases\": 142415, \"numberOfActivePeers\": 10, \"maxPrunableLifetime\": 1209600, \"numberOfExchanges\": 1750, \"numberOfPurchases\": 770, \"numberOfAskOrders\": 3536, \"lastBlockchainFeeder\": \"84.253.125.186\", \"numberOfPeers\": 289, \"numberOfGoods\": 990, \"numberOfUnlockedAccounts\": 0, \"includeExpiredPrunable\": false, \"numberOfOrders\": 4781, \"numberOfTransactions\": 1325666, \"maxRollback\": 800, \"isScanning\": false, \"numberOfAssets\": 539, \"numberOfPrunableMessages\": 45, \"numberOfVotes\": 106, \"numberOfAccounts\": 111301, \"numberOfDataTags\": 3, \"needsAdminPassword\": false, \"numberOfBlocks\": 446546, \"isTestnet\": false, \"numberOfCurrencyTransfers\": 719, \"numberOfPhasedTransactions\": 5, \"numberOfAccountLeases\": 231, \"numberOfBidOrders\": 1245, \"lastBlock\": \"2164693711802180410\", \"totalMemory\": 235929600, \"application\": \"NRS\", \"lastBlockchainFeederHeight\": 446597, \"numberOfTrades\": 102458, \"numberOfTags\": 723, \"isOffline\": false, \"time\": 48539770 }","title":"Get State"},{"location":"api/API_Examples/#get-time","text":"Request: https://localhost:2022/nxt? requestType=getTime Response: { \"time\": 31184078, \"requestProcessingTime\": 1 }","title":"Get Time"},{"location":"api/API_Examples/#shuffling-operations","text":"","title":"Shuffling Operations"},{"location":"api/API_Examples/#get-account-shufflings","text":"Request: https://localhost:2022/nxt? getAccountShufflings& account=BLX-UZNP-6LBA-YQ38-3TEY8 Response: { \"requestProcessingTime\": 91, \"shufflings\": [ { \"blocksRemaining\": 4372, \"amount\": \"25000000000000\", \"shufflingStateHash\": \"be12c737ad86e551621f57ebddaaaa61e66cf0a206fabfe40538304ff674c7a7\", \"issuer\": \"11802441287912491934\", \"holding\": \"0\", \"stage\": 0, \"holdingType\": 0, \"participantCount\": 7, \"assigneeRS\": \"BLX-UZNP-6LBA-YQ38-3TEY8\", \"shuffling\": \"5901270965262160574\", \"registrantCount\": 2, \"assignee\": \"1403321141259239061\", \"issuerRS\": \"BLX-V4WY-U928-GRN8-CKPL9\", \"shufflingFullHash\": \"be12c737ad86e551621f57ebddaaaa61e66cf0a206fabfe40538304ff674c7a7\" } ] }","title":"Get Account Shufflings"},{"location":"api/API_Examples/#get-all-shufflings","text":"Request: https://localhost:2022/nxt? requestType=getAllShufflings Response: { \"requestProcessingTime\": 81, \"shufflings\": [ { \"blocksRemaining\": 226, \"amount\": \"5000000000000\", \"shufflingStateHash\": \"9be2ed518e46d921df9f9f6425cc16a399f72a7833c58dbeb2a261e04620c392\", \"issuer\": \"16667202175165271068\", \"holding\": \"0\", \"stage\": 0, \"holdingType\": 0, \"participantCount\": 5, \"assigneeRS\": \"BLX-V4WY-U928-GRN8-CKPL9\", \"shuffling\": \"2439058250271679131\", \"registrantCount\": 3, \"assignee\": \"11802441287912491934\", \"issuerRS\": \"BLX-J52W-4BF7-L4J9-GEGMG\", \"shufflingFullHash\": \"9be2ed518e46d921df9f9f6425cc16a399f72a7833c58dbeb2a261e04620c392\" } ] }","title":"Get All Shufflings"},{"location":"api/API_Examples/#get-assigned-shufflings","text":"Request: https://localhost:2022/nxt? requestType=getAssignedShufflings& account=BLX-V4WY-U928-GRN8-CKPL9 Response: { \"blocksRemaining\": 20, \"amount\": \"5000000000000\", \"shufflingStateHash\": \"9be2ed518e46d921df9f9f6425cc1...\", \"requestProcessingTime\": 3, \"issuer\": \"16667202175165271068\", \"holding\": \"0\", \"stage\": 1, \"holdingType\": 0, \"participantCount\": 5, \"assigneeRS\": \"BLX-V4WY-U928-GRN8-CKPL9\", \"shuffling\": \"2439058250271679131\", \"registrantCount\": 5, \"assignee\": \"11802441287912491934\", \"issuerRS\": \"BLX-J52W-4BF7-L4J9-GEGMG\", \"shufflingFullHash\": \"9be2ed518e46d921df9f9f6425cc16a399...\" }","title":"Get Assigned Shufflings"},{"location":"api/API_Examples/#get-holding-shufflings","text":"Request: https://localhost:2022/nxt? requestType=getHoldingShufflings& holding=15344649963748848799& includeFinished=true Response: { \"requestProcessingTime\": 4, \"shufflings\": [ { \"holding\": \"15344649963748848799\", \"blocksRemaining\": 0, \"amount\": \"1000\", \"stage\": 4, \"shufflingStateHash\": \"57ed7cc02fa5b1f289d2a345314be5ec557ad093a5fd3070a16aba952d30656f\", \"holdingType\": 1, \"participantCount\": 5, \"shuffling\": \"144176732027925694\", \"registrantCount\": 1, \"issuer\": \"17417706268123203912\", \"issuerRS\": \"BLX-A4CA-L7JT-ZYGU-HZ2G5\", \"shufflingFullHash\": \"beb46651f937000259819298872f1721170a4c2e1af7f7900cb2ca01188fd942\" } ] }","title":"Get Holding Shufflings"},{"location":"api/API_Examples/#get-shufflers","text":"Request: https://localhost:2022/nxt? requestType=getShufflers& adminPassword=IWontTellYou Response: { \"shufflers\": [ { \"accountRS\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"recipientRS\": \"BLX-H42E-48UL-FM7A-AVEC2\", \"recipient\": \"9235083011255928844\", \"shuffling\": \"9534657251385467319\", \"account\": \"12745647715474645062\", \"shufflingFullHash\": \"b7e1eedb40e851849cb77a53075ce74aa...\" } ], \"requestProcessingTime\": 0 }","title":"Get Shufflers"},{"location":"api/API_Examples/#get-shuffling","text":"Request: https://localhost:2022/nxt? requestType=getShuffling& shuffling=3347171811359602131 Response: { \"blocksRemaining\": 956, \"amount\": \"100000000000\", \"shufflingStateHash\": \"d3354a42078b732e16561b67a37d699d0410c564a4d18568319170665bf5dd9b\", \"requestProcessingTime\": 2, \"issuer\": \"10740484011813680725\", \"holding\": \"0\", \"stage\": 0, \"holdingType\": 0, \"participantCount\": 5, \"assigneeRS\": \"BLX-V4WY-U928-GRN8-CKPL9\", \"shuffling\": \"3347171811359602131\", \"registrantCount\": 2, \"assignee\": \"11802441287912491934\", \"issuerRS\": \"BLX-PFLP-BQHY-NG4J-BXG5C\", \"shufflingFullHash\": \"d3354a42078b732e16561b67a37d699d0410c564a4d18568319170665bf5dd9b\" }","title":"Get Shuffling"},{"location":"api/API_Examples/#get-shuffling-participants","text":"Request: https://localhost:2022/nxt? requestType=getShufflingParticipants& shuffling=16292433427943984172 Response: { \"requestProcessingTime\": 5, \"participants\": [ { \"nextAccountRS\": \"BLX-KTTY-WRE6-2B5Y-4CYWR\", \"accountRS\": \"BLX-3ZXY-KWR5-LR8V-2PYAT\", \"shuffling\": \"16292433427943984172\", \"state\": 2, \"nextAccount\": \"3167098051496568638\", \"account\": \"910806360590974910\" }, { \"nextAccountRS\": \"BLX-L8VW-NRUG-LZ6Q-62WWW\", \"accountRS\": \"BLX-KTTY-WRE6-2B5Y-4CYWR\", \"shuffling\": \"16292433427943984172\", \"state\": 2, \"nextAccount\": \"5653003407546981244\", \"account\": \"3167098051496568638\" }, { \"nextAccountRS\": \"BLX-XC7L-35JW-FZCL-24NUT\", \"accountRS\": \"BLX-L8VW-NRUG-LZ6Q-62WWW\", \"shuffling\": \"16292433427943984172\", \"state\": 2, \"nextAccount\": \"930699247665195186\", \"account\": \"5653003407546981244\" }, { \"nextAccountRS\": \"BLX-2222-2222-2222-22222\", \"accountRS\": \"BLX-XC7L-35JW-FZCL-24NUT\", \"shuffling\": \"16292433427943984172\", \"state\": 2, \"nextAccount\": \"0\", \"account\": \"930699247665195186\" } ] }","title":"Get Shuffling Participants"},{"location":"api/API_Examples/#shuffling-create","text":"Request: https://localhost:2022/nxt? requestType=shufflingCreate& amount=10000000000000& participantCount=7& registrationPeriod=9757& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=1440 Response: { \"senderPublicKey\": \"ffcafb6de1ec93db5fe0475a6e2efd82faa3cb89a47a7d96f5579b0deadd5c10\", \"signature\": \"36b410b83abb4e373bf77c715c8ef3b06ba6c872e621e3f5f412dc1424eb6a0710ed8...\", \"feeNQT\": \"100000000\", \"transactionIndex\": 0, \"requestProcessingTime\": 5, \"type\": 7, \"confirmations\": 9906, \"fullHash\": \"2d10f4e18f808aa8d0de06d5cddcd77828eb6e7548f62e48de83f58fdf0629d5\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"13021232786632787054\", \"signatureHash\": \"18956d76e3ed20937027373615e5fb49f11d1ac86eed279176856b59644899f5\", \"attachment\": { \"holding\": \"0\", \"amount\": \"10000000000000\", \"registrationPeriod\": 9757, \"holdingType\": 0, \"participantCount\": 7, \"version.ShufflingCreation\": 1 }, \"senderRS\": \"BLX-V4WY-U928-GRN8-CKPL9\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"11802441287912491934\", \"ecBlockHeight\": 817230, \"block\": \"435349863926964285\", \"blockTimestamp\": 80029572, \"deadline\": 1440, \"transaction\": \"12144660700617510957\", \"timestamp\": 80029541, \"height\": 817245 }","title":"Shuffling Create"},{"location":"api/API_Examples/#shuffling-process","text":"Request: https://localhost:2022/nxt? requestType=shufflingProcess& shuffling=12144660700617510957& recipientSecretPhrase=IWontTellYou& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=1440 Response: { \"senderPublicKey\": \"ffcafb6de1ec93db5fe0475a6e2efd82faa3cb89a47a7d96f5579b0deadd5c10\", \"signature\": \"fb6112d759cedfefe14a7bdbe19b2fac73d334566f05fc20d7d79933879b140...\", \"feeNQT\": \"1000000000\", \"transactionIndex\": 1, \"type\": 7, \"confirmations\": 251, \"fullHash\": \"0d0855396fa1a60c8b50507069abdb5a7c6af3fdb49f12766c8630ec66309642\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"17529486445813261105\", \"signatureHash\": \"a7c1d67e2ff01dd8e3cf72869428a708a6ad087bb6247e628fb1964456eea66b\", \"attachment\": { \"shuffling\": \"12144660700617510957\", \"shufflingStateHash\": \"e98b2810531c6e807e5e89bb2537025bc7b4fb72e79ab675deb6fec2b8ec6d78\", \"data\": [ \"438e2560cd958a173dc3b7adc3eb3c02a69ea5...\" ], \"version.ShufflingProcessing\": 1, \"hash\": \"2e3cecabbf59a47d55399649be89d1bcd1b56264dca32cb269f88b30cbe2c262\" }, \"senderRS\": \"BLX-V4WY-U928-GRN8-CKPL9\", \"subtype\": 2, \"amountNQT\": \"0\", \"sender\": \"11802441287912491934\", \"ecBlockHeight\": 826902, \"block\": \"15948287569415806210\", \"blockTimestamp\": 80611249, \"deadline\": 1440, \"transaction\": \"911593473664419853\", \"timestamp\": 80611213, \"height\": 826917 }","title":"Shuffling Process"},{"location":"api/API_Examples/#shuffling-verify","text":"Request: https://localhost:2022/nxt? requestType=shufflingVerify& shuffling=12144660700617510957& shufflingStateHash=90832470918374087102938470198234& recipientSecretPhrase=IWontTellYou& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=1440 Response: { \"senderPublicKey\": \"f050f86b050c1de933d8094c9a05a346b2319912313a04b822bba15d6d256505\", \"signature\": \"a23968d9cf5313e745fa4b50102f7f6d664c1b574d8ff2fbcc721cb967a42a0225f1e...\", \"feeNQT\": \"100000000\", \"transactionIndex\": 3, \"requestProcessingTime\": 3, \"type\": 7, \"confirmations\": 287, \"fullHash\": \"296a76a1601da4a06c6524df5791553b5d305cb266f71afb6e9d7aa0149c04ff\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"3207126357685519085\", \"signatureHash\": \"7b69ba9ffb10d725b693abb53157f274cbf42f2435e919821cda67f889f44e96\", \"attachment\": { \"version.ShufflingVerification\": 1, \"shuffling\": \"12144660700617510957\", \"shufflingStateHash\": \"fbc8b99c99c4e09203f1237771e38c7ee484c18a72572c3d1adae04da858fe92\" }, \"senderRS\": \"BLX-KHDF-9KSG-2UCY-BUQZ4\", \"subtype\": 4, \"amountNQT\": \"0\", \"sender\": \"10484056935692287341\", \"ecBlockHeight\": 826914, \"block\": \"1046003298185760668\", \"blockTimestamp\": 80612146, \"deadline\": 1440, \"transaction\": \"11575409243111975465\", \"timestamp\": 80611663, \"height\": 826925 }","title":"Shuffling Verify"},{"location":"api/API_Examples/#shuffling-register","text":"Request: https://localhost:2022/nxt? requestType=shufflingRegister& shufflingFullHash=2d10f4e18f808aa8d0de06d5cddcd77828eb6e7548f62e48de83f58fdf0629d5& secretPhrase=IWontTellYou& feeNQT=100000000& deadline=1440 Response: { \"senderPublicKey\": \"6351706ab8ea5c94243e6b0bff3be05f2e1b9accc83004af3e655a8fbc104735\", \"signature\": \"23bb57aee566ba2c27fe8c83ea4e88821f9f23c820371a39b5d49dbd327...\", \"feeNQT\": \"100000000\", \"transactionIndex\": 1, \"requestProcessingTime\": 3, \"type\": 7, \"confirmations\": 9924, \"fullHash\": \"467e60696e598fe5c075446897ff636886bf7c0e9...\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"4928509411801335816\", \"signatureHash\": \"b0e945000b9010814f5399d9006a21939089db5616...\", \"attachment\": { \"version.ShufflingRegistration\": 1, \"shufflingFullHash\": \"2d10f4e18f808aa8d0de06d5cddcd77828eb6e7...\" }, \"senderRS\": \"BLX-D78H-8QHV-DEP2-5TAGA\", \"subtype\": 1, \"amountNQT\": \"0\", \"sender\": \"3763066681748198607\", \"ecBlockHeight\": 817256, \"block\": \"12642960475175742738\", \"blockTimestamp\": 80031214, \"deadline\": 1440, \"transaction\": \"16541538287104327238\", \"timestamp\": 80031109, \"height\": 817265 }","title":"Shuffling Register"},{"location":"api/API_Examples/#start-shuffler","text":"Request: https://localhost:2022/nxt? requestType=startShuffler& shufflingFullHash=2d10f4e18f808aa8d0de06d5cddcd77828eb6e7548f62e48de83f58fdf0629d5& secretPhrase=IWontTellYou& recipientSecretPhrase=IWontTellYou Response: { \"shuffling\": \"12144660700617510957\", \"shufflingFullHash\": \"2d10f4e18f808aa8d0de06d5cddcd77828eb6e7548f62e48de83f58fdf0629d5\", \"account\": \"11802441287912491934\", \"accountRS\": \"BLX-V4WY-U928-GRN8-CKPL9\", \"recipient\": \"3763066681748198607\", \"recipientRS\": \"BLX-D78H-8QHV-DEP2-5TAGA\", \"requestProcessingTime\": 7 }","title":"Start Shuffler"},{"location":"api/API_Examples/#stop-shuffler","text":"Request: https://localhost:2022/nxt? requestType=stopShuffler& shufflingFullHash=2d10f4e18f808aa8d0de06d5cddcd77828eb6e7548f62e48de83f58fdf0629d5& secretPhrase=IWontTellYou Response: { \"stoppedShuffler\": true, \"requestProcessingTime\": 7 }","title":"Stop Shuffler"},{"location":"api/API_Examples/#tagged-data-operations","text":"","title":"Tagged Data Operations"},{"location":"api/API_Examples/#download-tagged-data","text":"Request: https://localhost:2022/nxt? requestType=downloadTaggedData& transaction=9169681701986886056 Response: Downloaded file named nxt with contents: d4f167249340d6d746f49441b8ccdb1bd3521feb","title":"Download Tagged Data"},{"location":"api/API_Examples/#extend-tagged-data","text":"Request: https://localhost:2022/nxt? requestType=extendTaggedData& transaction=9086193976300572942& secretPhrase=secretPhrase& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"96cee31072bcdc82c85710c78e86d42aa8eac34e90960d97dcb87e9212534cc4\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"1be49ba648dcb242620d34762243399053837a32e5c2f0a392b27e70fcf823073f0...\", \"feeNQT\": \"100000000\", \"type\": 6, \"fullHash\": \"77c6dcbf770f2ce04ca8ed14ba52cdff8f7e35515bc0a8440079acd156700fb6\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"9233989544625577248\", \"signatureHash\": \"96cee31072bcdc82c85710c78e86d42aa8eac34e90960d97dcb87e9212534cc4\", \"attachment\": { \"version.TaggedDataExtend\": 1, \"filename\": \"\", \"data\": \"d4f167249340d6d746f49441b8ccdb1bd3521feb\", \"name\": \"Stargate SG1 full series\", \"channel\": \"torrent\", \"description\": \"Hash of the torrent.\", \"type\": \"\", \"taggedData\": \"9086193976300572942\", \"isText\": true, \"tags\": \"video, scifi, torrent\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 1, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 304612, \"deadline\": 60, \"transaction\": \"16153302970465568375\", \"timestamp\": 47672016, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"0611d06ad7023c0010f09c34f225d425306e5be55a494...\", \"broadcasted\": true, \"requestProcessingTime\": 28, \"transactionBytes\": \"0611d06ad7023c0010f09c34f225d425306e5be55a49469081560...\", \"fullHash\": \"77c6dcbf770f2ce04ca8ed14ba52cdff8f7e35515bc0a8440079acd156700fb6\", \"transaction\": \"16153302970465568375\" }","title":"Extend Tagged Data"},{"location":"api/API_Examples/#get-account-tagged-data","text":"Request: https://localhost:2022/nxt? requestType=getAccountTaggedData& account=BLX-4VDY-LNVT-LMAY-FMCKA& lastIndex=0 Response: { \"data\": [ { \"data\": \"d4f167249340d6d746f49441b8ccdb1bd3521feb\", \"channel\": \"torrent\", \"description\": \"Hash of the torrent.\", \"type\": \"\", \"parsedTags\": [ \"video\", \"scifi\", \"torrent\" ], \"transactionTimestamp\": 47843875, \"tags\": \"video, scifi, torrent\", \"filename\": \"\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"name\": \"Stargate SG1 full series\", \"blockTimestamp\": 47672045, \"transaction\": \"9086193976300572942\", \"account\": \"15295723609781267838\", \"isText\": true } ], \"requestProcessingTime\": 2 }","title":"Get Account Tagged Data"},{"location":"api/API_Examples/#get-all-tagged-data","text":"Request: https://localhost:2022/nxt? requestType=getAllTaggedData& lastIndex=0 Response: { \"requestProcessingTime\": 1, \"data\": [ { \"data\": \"d4f167249340d6d746f49441b8ccdb1bd3521feb\", \"channel\": \"torrent\", \"description\": \"Hash of the torrent.\", \"type\": \"\", \"parsedTags\": [ \"video\", \"scifi\", \"torrent\" ], \"transactionTimestamp\": 47843875, \"tags\": \"video, scifi, torrent\", \"filename\": \"\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"name\": \"Stargate SG1 full series\", \"blockTimestamp\": 47672045, \"transaction\": \"9086193976300572942\", \"account\": \"15295723609781267838\", \"isText\": true } ] }","title":"Get All Tagged Data"},{"location":"api/API_Examples/#get-channel-tagged-data","text":"Request: https://localhost:2022/nxt? requestType=getChannelTaggedData& channel=torrent& lastIndex=0 Response: { \"data\": [ { \"data\": \"d4f167249340d6d746f49441b8ccdb1bd3521feb\", \"channel\": \"torrent\", \"description\": \"Hash of the torrent.\", \"type\": \"\", \"parsedTags\": [ \"video\", \"scifi\", \"torrent\" ], \"transactionTimestamp\": 47843875, \"tags\": \"video, scifi, torrent\", \"filename\": \"\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"name\": \"Stargate SG1 full series\", \"blockTimestamp\": 47672045, \"transaction\": \"9086193976300572942\", \"account\": \"15295723609781267838\", \"isText\": true } ], \"requestProcessingTime\": 1 }","title":"Get Channel Tagged Data"},{"location":"api/API_Examples/#get-data-tag-count","text":"Request: https://localhost:2022/nxt? requestType=getDataTagCount Response: { \"numberOfDataTags\": 3, \"requestProcessingTime\": 2 }","title":"Get Data Tag Count"},{"location":"api/API_Examples/#get-data-tags","text":"Request: https://localhost:2022/nxt? requestType=getDataTags Response: { \"requestProcessingTime\": 5, \"tags\": [ { \"count\": 2, \"tag\": \"video\" }, { \"count\": 1, \"tag\": \"scifi\" }, { \"count\": 1, \"tag\": \"torrent\" } ] }","title":"Get Data Tags"},{"location":"api/API_Examples/#get-data-tags-like","text":"Request: https://localhost:2022/nxt? requestType=getDataTagsLike& tagPrefix=sci Response: { \"requestProcessingTime\": 9, \"tags\": [ { \"count\": 1, \"tag\": \"scifi\" } ] }","title":"Get Data Tags Like"},{"location":"api/API_Examples/#get-tagged-data","text":"Request: https://localhost:2022/nxt? requestType=getTaggedData& transaction=9086193976300572942 Response: { \"data\": \"d4f167249340d6d746f49441b8ccdb1bd3521feb\", \"channel\": \"torrent\", \"description\": \"Hash of the torrent.\", \"requestProcessingTime\": 3, \"type\": \"\", \"parsedTags\": [ \"video\", \"scifi\", \"torrent\" ], \"transactionTimestamp\": 47843875, \"tags\": \"video, scifi, torrent\", \"filename\": \"\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"name\": \"Stargate SG1 full series\", \"blockTimestamp\": 47672045, \"transaction\": \"9086193976300572942\", \"account\": \"15295723609781267838\", \"isText\": true }","title":"Get Tagged Data"},{"location":"api/API_Examples/#get-tagged-data-extend-transactions","text":"Request: https://localhost:2022/nxt? requestType=getTaggedDataExtendTransactions& transaction=4344513120863790923 Response: { \"extendTransactions\": [ { \"senderPublicKey\": \"631110059365218234cc28fb6c91019f4563cf910471a9e43221795f40ab6e3a\", \"signature\": \"e4fe406198843207f5255e2c98119b3130b9810812934e0406a4de97a3443b0b205c907284c2e2cfd2534e8dcc17f08afb707db338e557d02673a2e6b0010186\", \"feeNQT\": \"150000000\", \"transactionIndex\": 0, \"type\": 6, \"confirmations\": 31778, \"fullHash\": \"86e8bc8c891e1556dfb9114a0ba9c4e119e6df6ba241016a1e9a85223dea42f8\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"14132969248050944989\", \"signatureHash\": \"2ed7b6a5d579a66596409b2619375fa0edd54ace2e7d10f0bdbc0a7126f1776c\", \"senderRS\": \"BLX-G885-AKDX-5G2B-BLUCG\", \"subtype\": 1, \"amountNQT\": \"0\", \"sender\": \"10892890577210644675\", \"ecBlockHeight\": 725746, \"block\": \"18314376737060578519\", \"blockTimestamp\": 78357439, \"deadline\": 1440, \"transaction\": \"6202897637893269638\", \"timestamp\": 78357424, \"height\": 725756 } ], \"requestProcessingTime\": 1 }","title":"Get Tagged Data Extend Transactions"},{"location":"api/API_Examples/#search-tagged-data","text":"Request: https://localhost:2022/nxt? requestType=searchTaggedData& query=SG?& lastIndex=0 Response: { \"data\": [ { \"data\": \"d4f167249340d6d746f49441b8ccdb1bd3521feb\", \"channel\": \"torrent\", \"description\": \"Hash of the torrent.\", \"type\": \"\", \"parsedTags\": [ \"video\", \"scifi\", \"torrent\" ], \"transactionTimestamp\": 47843875, \"tags\": \"video, scifi, torrent\", \"filename\": \"\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"name\": \"Stargate SG1 full series\", \"blockTimestamp\": 47672045, \"transaction\": \"9086193976300572942\", \"account\": \"15295723609781267838\", \"isText\": true } ], \"requestProcessingTime\": 22 }","title":"Search Tagged Data"},{"location":"api/API_Examples/#upload-tagged-data","text":"Request: https://localhost:2022/nxt? requestType=uploadTaggedData& data=d4f167249340d6d746f49441b8ccdb1bd3521feb& name=Stargate SG1 full series& description=Hash of the torrent.& tags=video, scifi, torrent& channel=torrent& secretPhrase=secretPhrase& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"953a1023c84939a6e31da0db913ed2829b318d59663daddce63bdf2193af912e\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"17da947a7dc30a6d722a53f064d817c559f8f9c1387290048793d81b49dbf5082a0...\", \"feeNQT\": \"100000000\", \"type\": 6, \"fullHash\": \"0e91b0dd47a5187e26ea5b54f1917e3b879ee3cf096eb597ce22c6833863cdb2\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"7868019187120003959\", \"signatureHash\": \"953a1023c84939a6e31da0db913ed2829b318d59663daddce63bdf2193af912e\", \"attachment\": { \"filename\": \"\", \"data\": \"d4f167249340d6d746f49441b8ccdb1bd3521feb\", \"name\": \"Stargate SG1 full series\", \"channel\": \"torrent\", \"description\": \"Hash of the torrent.\", \"type\": \"\", \"version.TaggedDataUpload\": 1, \"isText\": true, \"hash\": \"06fbac5b5358c00f5a2f19789b06220dca4e242a851b70072633a06ae8e6fb46\", \"tags\": \"video, scifi, torrent\" }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 304598, \"deadline\": 60, \"transaction\": \"9086193976300572942\", \"timestamp\": 47671075, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"06102367d7023c0010f09c34f225d425306e5be55a494...\", \"broadcasted\": true, \"requestProcessingTime\": 284, \"transactionBytes\": \"06102367d7023c0010f09c34f225d425306e5be55a49469081560...\", \"fullHash\": \"0e91b0dd47a5187e26ea5b54f1917e3b879ee3cf096eb597ce22c6833863cdb2\", \"transaction\": \"9086193976300572942\" }","title":"Upload Tagged Data"},{"location":"api/API_Examples/#verify-tagged-data","text":"Request: https://localhost:2022/nxt? requestType=verifyTaggedData& transaction=9086193976300572942& data=d4f167249340d6d746f49441b8ccdb1bd3521feb& name=Stargate SG1 full series& description=Hash of the torrent.& tags=video, scifi, torrent& channel=torrent Response: { \"verify\": true, \"requestProcessingTime\": 7, \"version.TaggedDataUpload\": 1, \"hash\": \"06fbac5b5358c00f5a2f19789b06220dca4e242a851b70072633a06ae8e6fb46\" }","title":"Verify Tagged Data"},{"location":"api/API_Examples/#token-operations","text":"","title":"Token Operations"},{"location":"api/API_Examples/#decode-file-token","text":"Request: https://localhost:2022/nxt? requestType=decodeFileToken& file=test.txt& token=u8q9ps0gdoo2bl158p4llpar583ld0cgejat9qnrgrgde4l5uscgan7fu25hi... Response: { \"valid\": true, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"requestProcessingTime\": 3, \"account\": \"15295723609781267838\", \"timestamp\": 49748229 }","title":"Decode File Token"},{"location":"api/API_Examples/#decode-token","text":"Request: https://localhost:2022/nxt? requestType=decodeToken& website=test& token=u8q9ps0gdoo2bl158p4llpar583ld0cgejat9qnrgrgde4l5ut8bgn... Response: { \"valid\": true, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"requestProcessingTime\": 2, \"account\": \"15295723609781267838\", \"timestamp\": 49762488 }","title":"Decode Token"},{"location":"api/API_Examples/#generate-file-token","text":"Request: https://localhost:2022/nxt? requestType=generateFileToken& secretPhrase=secretPhrase& file=test.txt Response: { \"valid\": true, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"requestProcessingTime\": 4, \"account\": \"15295723609781267838\", \"timestamp\": 49748229, \"token\": \"u8q9ps0gdoo2bl158p4llpar583ld0cgejat9qnrgrgde4l5uscgan7fu25hi...\" }","title":"Generate File Token"},{"location":"api/API_Examples/#generate-token","text":"Request: https://localhost:2022/nxt? requestType=generateToken& secretPhrase=secretPhrase& website=test Response: { \"valid\": true, \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"requestProcessingTime\": 4, \"account\": \"15295723609781267838\", \"timestamp\": 49762488, \"token\": \"u8q9ps0gdoo2bl158p4llpar583ld0cgejat9qnrgrgde4l5ut8bgn...\" }","title":"Generate Token"},{"location":"api/API_Examples/#transaction-operations","text":"","title":"Transaction Operations"},{"location":"api/API_Examples/#broadcast-transaction","text":"Request: https://localhost:2022/nxt? requestType=broadcastTransaction& transactionBytes=001046aac6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143... Response: { \"requestProcessingTime\": 4, \"fullHash\": \"3a304584f20cf3d2cbbdd9698ff9a166427005ab98fbe9ca4ad6253651ee81f1\", \"transaction\": \"15200507403046301754\" } **Note**: If the transaction has already been broadcast, the following INFO notice appears in the console output and log file: _Transaction 15200507403046301754 already in blockchain (or unconfirmed pool), will not broadcast again_.","title":"Broadcast Transaction"},{"location":"api/API_Examples/#calculate-full-hash","text":"Request: https://localhost:2022/nxt? requestType=calculateFullHash& unsignedTransactionBytes=001046aac6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f2...& signatureHash=b35eae7d2f01639810d37694138aa0a86fbbf8a9bf58c2be4f2a5b8f0f30b3f7 Response: { \"requestProcessingTime\": 1, \"fullHash\": \"3a304584f20cf3d2cbbdd9698ff9a166427005ab98fbe9ca4ad6253651ee81f1\" }","title":"Calculate Full Hash"},{"location":"api/API_Examples/#get-expected-transactions","text":"Request: https://localhost:2022/nxt? requestType=getExpectedTransactions& account=BLX-X5A4-FTMJ-J97M-F3ANH Response: { \"expectedTransactions\": [ { \"senderPublicKey\": \"aaf2ffc347dae1442f218c17ff9ae1e917ab32af0af779360737f6faf7a4023e\", \"signature\": \"58720e3cb6cd4a9ad1dcb0bede55952e624b02a125aa0ac5934d7312cf87660147b495...\", \"feeNQT\": \"100000000\", \"type\": 2, \"fullHash\": \"79df9c85bc30f4a72c5d1899ce57b6533f321e1412f433fc3975cd4142a3c781\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"17663518922057624367\", \"signatureHash\": \"687701be20bfb0935b3165ae31c08b685a173be660a9720ed0319ec17cc646eb\", \"attachment\": { \"quantityQNT\": \"5\", \"priceNQT\": \"908000000\", \"asset\": \"8122396658538927693\", \"version.BidOrderPlacement\": 1 }, \"senderRS\": \"BLX-X5A4-FTMJ-J97M-F3ANH\", \"subtype\": 3, \"amountNQT\": \"0\", \"sender\": \"15551212561974070530\", \"ecBlockHeight\": 820879, \"deadline\": 1440, \"transaction\": \"12102351684905000825\", \"timestamp\": 80248727, \"height\": 2147483647 } ], \"requestProcessingTime\": 1 }","title":"Get Expected Transactions"},{"location":"api/API_Examples/#get-referencing-transactions","text":"Request: https://localhost:2022/nxt? requestType=getReferencingTransactions& transaction=9132239833429154693 Response: { \"requestProcessingTime\": 1, \"transactions\": [ { \"senderPublicKey\": \"36bb17bc15678804a95ed895d524bb361aa5dfc4e78a800901aefff783f48010\", \"signature\": \"f39849eee16cd534f86915e22bd41d91fd6e965278242c957422196454deb705aa4...\", \"feeNQT\": \"100000000\", \"transactionIndex\": 0, \"type\": 1, \"confirmations\": 216565, \"fullHash\": \"c96b60bafc581891be88eae695f773677fe3cf7322cc149831d70de046041ea7\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"1861841686166492176\", \"referencedTransactionFullHash\": \"859b376bbe3bbc7ebd5520d0d3fd20256f921e4c6bc3e...\", \"signatureHash\": \"0ed3aaabc682d4b5242b69930c0f659b62776b92bc2eecc40e37c895c5260eb4\", \"attachment\": { \"version.Message\": 1, \"messageIsText\": true, \"message\": \"],\\\\\"type\\\\\":\\\\\"payment\\\\\",\\\\\"oracles\\\\\":[{\\\\\"name\\\\\":\\\\\"nayru\\\\\"}]}\", \"version.ArbitraryMessage\": 0 }, \"senderRS\": \"BLX-DRGK-5CLR-35AZ-84R5R\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"7750380612824194513\", \"ecBlockHeight\": 614622, \"block\": \"13844289828761736561\", \"blockTimestamp\": 67496993, \"deadline\": 1440, \"transaction\": \"10455204377422490569\", \"timestamp\": 67496806, \"height\": 614629 } ] }","title":"Get Referencing Transactions"},{"location":"api/API_Examples/#get-transaction","text":"Request: https://localhost:2022/nxt? requestType=getTransaction& transaction=15200507403046301754 Response: { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"5f0378b7390ff5a815eadd1354de533eef682f139362b153576e2207320a6...\", \"feeNQT\": \"100000000\", \"transactionIndex\": 2, \"requestProcessingTime\": 2842, \"type\": 0, \"confirmations\": 849, \"fullHash\": \"3a304584f20cf3d2cbbdd9698ff9a166427005ab98fbe9ca4ad6253651ee81f1\", \"version\": 1, \"ecBlockId\": \"17321329645912574173\", \"signatureHash\": \"b35eae7d2f01639810d37694138aa0a86fbbf8a9bf58c2be4f2a5b8f0f30b3f7\", \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 0, \"amountNQT\": \"100000000\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"recipient\": \"17013046603665206934\", \"ecBlockHeight\": 275727, \"block\": \"8455642159445842600\", \"blockTimestamp\": 29797208, \"deadline\": 60, \"transaction\": \"15200507403046301754\", \"timestamp\": 29796934, \"height\": 275730 }","title":"Get Transaction"},{"location":"api/API_Examples/#get-transaction-bytes","text":"Request: https://localhost:2022/nxt? requestType=getTransactionBytes& transaction=15200507403046301754 Response: { \"unsignedTransactionBytes\": \"001046aac6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473...\", \"requestProcessingTime\": 66, \"confirmations\": 1019, \"transactionBytes\": \"001046aac6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473...\" }","title":"Get Transaction Bytes"},{"location":"api/API_Examples/#parse-transaction","text":"Request: https://localhost:2022/nxt? requestType=parseTransaction& transactionBytes=001046aac6013c0057fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143... Response: { \"senderPublicKey\": \"57fb6f3a958e320bb49c4e81b4c2cf28b9f25d086c143b473beec228f79ff93c\", \"signature\": \"5f0378b7390ff5a815eadd1354de533eef682f139362b153576e2207320a6...\", \"feeNQT\": \"100000000\", \"requestProcessingTime\": 2, \"type\": 0, \"fullHash\": \"3a304584f20cf3d2cbbdd9698ff9a166427005ab98fbe9ca4ad6253651ee81f1\", \"version\": 1, \"ecBlockId\": \"17321329645912574173\", \"signatureHash\": \"b35eae7d2f01639810d37694138aa0a86fbbf8a9bf58c2be4f2a5b8f0f30b3f7\", \"senderRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"subtype\": 0, \"amountNQT\": \"100000000\", \"sender\": \"15323192282528158131\", \"recipientRS\": \"BLX-4VNQ-RWZC-4WWQ-GVM8S\", \"recipient\": \"17013046603665206934\", \"ecBlockHeight\": 275727, \"verify\": true, \"deadline\": 60, \"transaction\": \"15200507403046301754\", \"timestamp\": 29796934, \"height\": 2147483647 }","title":"Parse Transaction"},{"location":"api/API_Examples/#retrieve-pruned-transaction","text":"Request: https://localhost:2022/nxt? requestType=retrievePrunedTransaction& transaction=9343032000583494722 Response: { \"senderPublicKey\": \"7c94b068c95edcaf6ad588cda8784c7c27421ac334be092a6b487885f40f4f0c\", \"signature\": \"a4b4b7829b90ae0aa6c6654d364d23b335c64383bacc0e518b5aa1f2746de706121d308ae11244bf0933eddaed170c958bb9520700d63a7ed9ab30eb766717ca\", \"feeNQT\": \"320000000\", \"transactionIndex\": 0, \"requestProcessingTime\": 0, \"type\": 6, \"confirmations\": 41543, \"fullHash\": \"42ece25f1a1ea9815a7e6856635c323810efd2a38686bd57b7241fce28841da0\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"11517076094591827523\", \"signatureHash\": \"5202c62fafb4b990313f03cf8882c2bad73c7888790794bb8c46a186abfc34ca\", \"attachment\": { \"filename\": \"7dba799bc6d4439191f89a88a9e50dad.jpg\", \"data\": \"ffd8ffe000104a46494600010100000100010000ffdb00430003050805050404050a07070...\", \"name\": \"Darkwing Duck\", \"channel\": \"Darkwing Duck\", \"description\": \"Darkwing Duck\", \"type\": \"image/jpeg\", \"version.TaggedDataUpload\": 1, \"isText\": false, \"hash\": \"5fb2f476f2556d15e4d419c6ff10bdbd05a7c5284242eba67c4de1adaee185a2\", \"tags\": \"Darkwing Duck\" }, \"senderRS\": \"BLX-K8HZ-VMMS-ZX8E-EY5JR\", \"subtype\": 0, \"amountNQT\": \"0\", \"sender\": \"14681874272470211071\", \"ecBlockHeight\": 788531, \"block\": \"17859315470736709713\", \"blockTimestamp\": 78307385, \"deadline\": 1440, \"transaction\": \"9343032000583494722\", \"timestamp\": 78307322, \"height\": 788546 }","title":"Retrieve Pruned Transaction"},{"location":"api/API_Examples/#send-transaction","text":"Request: https://localhost:2022/nxt? requestType=sendTransaction& transactionBytes=00109e61b606a0052bdd59320496b133052f58c82e8... Response: { \"requestProcessingTime\": 2, \"fullHash\": \"799ad836f9c65e2985978123f145130b867bab9a86f6fdabae8e8c8f25c087dc\", \"transaction\": \"2981038777035168377\" }","title":"Send Transaction"},{"location":"api/API_Examples/#sign-transaction","text":"Request: https://localhost:2022/nxt? requestType=signTransaction& unsignedTransactionBytes=00100cfb3c03a00510f09c34f225d425306e5be55a494690...& secretPhrase=SecretPhrase Response: { \"signatureHash\": \"3f4830bf28f105d5075f5e084c36e4582a156e713abfe0bc6ee51cbf8b20f2d2\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"24513e93029688100c5a04183ffddc49812fd7a137a15fb3a2545aa9a2bcb5004a3...\", \"feeNQT\": \"100000000\", \"type\": 0, \"fullHash\": \"c34af8f1509e3be79c4562e24125ff2a8f026871fdd1a0366ad315bf8fab76b9\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"15869644242181198665\", \"signatureHash\": \"3f4830bf28f105d5075f5e084c36e4582a156e713abfe0bc6ee51cbf8b20f2d2\", \"attachment\": { \"version.OrdinaryPayment\": 0 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 0, \"amountNQT\": \"1000000000\", \"sender\": \"15295723609781267838\", \"recipientRS\": \"BLX-BMUV-8QQR-47VK-CR7F3\", \"recipient\": \"11580081983047651163\", \"ecBlockHeight\": 382777, \"deadline\": 1440, \"transaction\": \"16662085316881435331\", \"timestamp\": 54328076, \"height\": 2147483647 }, \"verify\": true, \"requestProcessingTime\": 5, \"transactionBytes\": \"00100cfb3c03a00510f09c34f225d425306e5be55a4946908156072afbead4...\", \"fullHash\": \"c34af8f1509e3be79c4562e24125ff2a8f026871fdd1a0366ad315bf8fab76b9\", \"transaction\": \"16662085316881435331\" }","title":"Sign Transaction"},{"location":"api/API_Examples/#voting-system-operations","text":"","title":"Voting System Operations"},{"location":"api/API_Examples/#cast-vote","text":"Request: https://localhost:2022/nxt? requestType=castVote& poll=5916389507928675673& vote02=1& secretPhrase=secretPhrase& feeNQT=100000000& deadline=60 Response: { \"signatureHash\": \"54fb93860d0668477d34f7828d6a2c19be1c9229e7cb5adcebdc4962319ab22b\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"d48873e936e74069a56ba0eecdbfe3abe706bb7443e51d6651f59ef2500694087bd...\", \"feeNQT\": \"100000000\", \"type\": 1, \"fullHash\": \"ae7b714aadfe5efee0d690dfffac533dbf190827ed2f972d3dd552f4399ed648\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"1999174047197129566\", \"signatureHash\": \"54fb93860d0668477d34f7828d6a2c19be1c9229e7cb5adcebdc4962319ab22b\", \"attachment\": { \"version.VoteCasting\": 1, \"poll\": \"5916389507928675673\", \"vote\": [ -128, -128, 1 ] }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 3, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 256208, \"deadline\": 60, \"transaction\": \"18329367553676245934\", \"timestamp\": 43095711, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"01139f9691023c0010f09c34f225d425306e5be55a4946908156072a...\", \"broadcasted\": true, \"requestProcessingTime\": 99, \"transactionBytes\": \"01139f9691023c0010f09c34f225d425306e5be55a4946908156072afbead4d5...\", \"fullHash\": \"ae7b714aadfe5efee0d690dfffac533dbf190827ed2f972d3dd552f4399ed648\", \"transaction\": \"18329367553676245934\" }","title":"Cast Vote"},{"location":"api/API_Examples/#create-poll","text":"Request: https://localhost:2022/nxt? requestType=createPoll& name=Gender Poll& description=What is your gender?& minNumberOfOptions=1& maxNumberOfOptions=1& minRangeValue=0& maxRangeValue=1& minBalance=100000000000& minBalanceModel=1& option00=Male& option01=Female& secretPhrase=secretPhrase& feeNQT=1000000000& deadline=60 Response: { \"signatureHash\": \"c55ceb631d9d9e92b99a326e0323f24d80b7859a28ca43c82e1a03a6b05f02fe\", \"transactionJSON\": { \"senderPublicKey\": \"10f09c34f225d425306e5be55a4946908156072afbead4d574a512d7e086ef5c\", \"signature\": \"ffcd924f00e14c9e2cc14a04984f0d0c21bdf4551c3e332e1559c378b2975b0b9f8...\", \"feeNQT\": \"1000000000\", \"type\": 1, \"fullHash\": \"fc9e0c8014853b7e48b16e2c51ca28c4cc74939ba193e8c040c97e36a42b89c5\", \"version\": 1, \"phased\": false, \"ecBlockId\": \"11503767830531050607\", \"signatureHash\": \"c55ceb631d9d9e92b99a326e0323f24d80b7859a28ca43c82e1a03a6b05f02fe\", \"attachment\": { \"minRangeValue\": 0, \"votingModel\": 0, \"description\": \"What is your gender?\", \"minNumberOfOptions\": 1, \"holding\": \"0\", \"minBalance\": \"100000000000\", \"name\": \"Gender Poll\", \"finishHeight\": 256453, \"options\": [ \"Male\", \"Female\" ], \"maxNumberOfOptions\": 1, \"minBalanceModel\": 1, \"version.PollCreation\": 1, \"maxRangeValue\": 1 }, \"senderRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"subtype\": 2, \"amountNQT\": \"0\", \"sender\": \"15295723609781267838\", \"ecBlockHeight\": 256410, \"deadline\": 60, \"transaction\": \"9096010195498999548\", \"timestamp\": 43114026, \"height\": 2147483647 }, \"unsignedTransactionBytes\": \"01122ade91023c0010f09c34f225d425306e5be55a4946908156072afb...\", \"broadcasted\": true, \"requestProcessingTime\": 6, \"transactionBytes\": \"01122ade91023c0010f09c34f225d425306e5be55a4946908156072afbead4d574...\", \"fullHash\": \"fc9e0c8014853b7e48b16e2c51ca28c4cc74939ba193e8c040c97e36a42b89c5\", \"transaction\": \"9096010195498999548\" }","title":"Create Poll"},{"location":"api/API_Examples/#get-poll","text":"Request: https://localhost:2022/nxt? requestType=getPoll& poll=9096010195498999548 Response: { \"minRangeValue\": 0, \"votingModel\": 0, \"description\": \"What is your gender?\", \"finished\": true, \"poll\": \"9096010195498999548\", \"requestProcessingTime\": 1, \"minNumberOfOptions\": 1, \"minBalance\": \"100000000000\", \"accountRS\": \"BLX-4VDY-LNVT-LMAY-FMCKA\", \"name\": \"Gender Poll\", \"options\": [ \"Male\", \"Female\" ], \"finishHeight\": 256453, \"maxNumberOfOptions\": 1, \"minBalanceModel\": 1, \"account\": \"15295723609781267838\", \"maxRangeValue\": 1 }","title":"Get Poll"},{"location":"api/API_Examples/#get-poll-result","text":"Request: https://localhost:2022/nxt? requestType=getPollResult& poll=16742897359122764363 Response: { \"votingModel\": 0, \"minBalance\": \"0\", \"options\": [ \"Option 00\", \"Option 01\", \"Option 02\" ], \"finished\": true, \"poll\": \"16742897359122764363\", \"requestProcessingTime\": 2, \"minBalanceModel\": 0, \"results\": [ { \"result\": \"3\", \"weight\": \"1\" }, { \"result\": \"9\", \"weight\": \"2\" }, { \"result\": \"9\", \"weight\": \"2\" } ] }","title":"Get Poll Result"},{"location":"api/API_Examples/#get-poll-vote","text":"Request: https://localhost:2022/nxt? requestType=getPollVote& account=9096010195498999548 Response: { \"voterRS\": \"BLX-THLJ-CYAL-JQST-6FNS5\", \"votes\": [ \"1\", \"\" ], \"voter\": \"4747512364439223888\", \"requestProcessingTime\": 1, \"transaction\": \"6214591232702166122\" }","title":"Get Poll Vote"},{"location":"api/API_Examples/#get-poll-votes","text":"Request: https://localhost:2022/nxt? requestType=getPollVotes& poll=9096010195498999548& lastIndex=0 Response: { \"votes\": [ { \"voterRS\": \"BLX-THLJ-CYAL-JQST-6FNS5\", \"votes\": [ \"1\", \"\" ], \"voter\": \"4747512364439223888\", \"transaction\": \"6214591232702166122\" } ], \"requestProcessingTime\": 1 }","title":"Get Poll Votes"},{"location":"api/API_Examples/#get-polls","text":"Request: https://localhost:2022/nxt? requestType=getPolls& lastIndex=0 Response: { \"polls\": [ { \"minRangeValue\": 0, \"votingModel\": 3, \"description\": \"Should we start fully backing Credits with something tangible?\", \"finished\": false, \"poll\": \"10307833923604182368\", \"minNumberOfOptions\": 1, \"holding\": \"415923435949896799\", \"minBalance\": \"1000000000\", \"accountRS\": \"BLX-3BCV-8Q5G-9NP6-576DP\", \"name\": \"CRDTS owners poll\", \"options\": [ \"Yes\", \"No\", \"go for fractional reserve backing\" ], \"finishHeight\": 260218, \"maxNumberOfOptions\": 1, \"minBalanceModel\": 3, \"account\": \"4227900615136683355\", \"maxRangeValue\": 1 } ], \"requestProcessingTime\": 0 }","title":"Get Polls"},{"location":"api/API_Examples/#search-polls","text":"Request: https://localhost:2022/nxt? requestType=searchPolls& query=hello& includeFinished=true Response: { \"polls\": [ { \"minRangeValue\": 0, \"votingModel\": 1, \"description\": \"Hello World Poll\", \"finished\": true, \"poll\": \"3043888702585899321\", \"minNumberOfOptions\": 1, \"minBalance\": \"0\", \"accountRS\": \"BLX-XK4R-7VJU-6EQG-7R335\", \"name\": \"Poll1\", \"options\": [ \"Hello\", \"World\" ], \"finishHeight\": 255816, \"maxNumberOfOptions\": 1, \"minBalanceModel\": 1, \"account\": \"5873880488492319831\", \"maxRangeValue\": 1 } ], \"requestProcessingTime\": 3 }","title":"Search Polls"},{"location":"api/API_Examples/#utilities","text":"","title":"Utilities"},{"location":"api/API_Examples/#decode-qr-code","text":"Request: https://localhost:2022/nxt? requestType=decodeQRCode& qrCodeBase64=/9j/4AAQSkZJRgABAgAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRo... Response: { \"qrCodeData\": \"BLX-7A48-47JL-T7LD-D5FS3\", \"requestProcessingTime\": 15 }","title":"Decode QR Code"},{"location":"api/API_Examples/#detect-mime-type","text":"Request: https://localhost:2022/nxt? requestType=detectMimeType& data=/9j/4AAQSkZJRgABAgAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRo...& isText=false Response: { \"requestProcessingTime\": 348, \"type\": \"image/png\" }","title":"Detect Mime Type"},{"location":"api/API_Examples/#encode-qr-code","text":"Request: https://localhost:2022/nxt? requestType=encodeQRCode& qrCodeData=BLX-7A48-47JL-T7LD-D5FS3& width=100& height=100 Response: { \"qrCodeBase64\": \"/9j/4AAQSkZJRgABAgAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UH...\", \"requestProcessingTime\": 15 }","title":"Encode QR Code"},{"location":"api/API_Examples/#full-hash-to-id","text":"Request: https://localhost:2022/nxt? requestType=fullHashToId& fullHash=c34af8f1509e3be79c4562e24125ff2a8f026871fdd1a0366ad315bf8fab76b9 Response: { \"stringId\": \"16662085316881435331\", \"requestProcessingTime\": 0, \"longId\": \"-1784658756828116285\" }","title":"Full Hash To Id"},{"location":"api/API_Examples/#hash","text":"Request: https://localhost:2022/nxt? requestType=hash& hashAlgorithm=2& secret=74657374 **Note:** _74657374_ is the UTF-8 hex string for the secret phrase \"test\". Response: { \"requestProcessingTime\": 1, \"hash\": \"9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08\" }","title":"Hash"},{"location":"api/API_Examples/#hex-convert","text":"Request: https://localhost:2022/nxt? requestType=hexConvert& string=616263 Response: { \"binary\": \"363136323633\", \"text\": \"abc\", \"requestProcessingTime\": 1 }","title":"Hex Convert"},{"location":"api/API_Examples/#long-convert","text":"Request: https://localhost:2022/nxt? requestType=longConvert& id=15323192282528158131 Response: { \"stringId\": \"15323192282528158131\", \"requestProcessingTime\": 0, \"longId\": \"-3123551791181393485\" }","title":"Long Convert"},{"location":"api/API_Examples/#rs-convert","text":"Request: https://localhost:2022/nxt? requestType=rsConvert& account=BLX-L6FM-89WK-VK8P-FCRBB Response: { \"accountRS\": \"BLX-L6FM-89WK-VK8P-FCRBB\", \"requestProcessingTime\": 1, \"account\": \"15323192282528158131\" }","title":"RS Convert"},{"location":"api/API_Examples/#debug-operations","text":"","title":"Debug Operations"},{"location":"api/API_Examples/#clear-unconfirmed-transactions","text":"Request: https://localhost:2022/nxt? requestType=clearUnconfirmedTransactions Response: { \"requestProcessingTime\": 814, \"done\": true }","title":"Clear Unconfirmed Transactions"},{"location":"api/API_Examples/#dump-peers","text":"Request: https://localhost:2022/nxt? requestType=dumpPeers& version=1.5.11& connect=true Response: { \"peers\": \"198.105.122.160; 174.140.167.239; ...\", \"count\": 37, \"requestProcessingTime\": 176897 }","title":"Dump Peers"},{"location":"api/API_Examples/#full-reset","text":"Request: https://localhost:2022/nxt? requestType=fullReset Response: { \"requestProcessingTime\": 4378, \"done\": true }","title":"Full Reset"},{"location":"api/API_Examples/#get-all-broadcasted-transactions","text":"Request: https://localhost:2022/nxt? requestType=GetAllBroadcastedTransactions Response: { \"requestProcessingTime\": 1, \"transactions\": [] }","title":"Get All Broadcasted Transactions"},{"location":"api/API_Examples/#get-all-waiting-transactions","text":"Request: https://localhost:2022/nxt? requestType=getAllWaitingTransactions Response: { \"requestProcessingTime\": 1, \"transactions\": [] }","title":"Get All Waiting Transactions"},{"location":"api/API_Examples/#get-log","text":"Request: https://localhost:2022/nxt? requestType=getLog& count=3 Response: { \"messages\": [ \"2015-04-28 18:26:52 FINE: Known peers: 29\\\\n\", \"2015-04-28 18:27:12 FINE: Got 0 confirmations\\\\n\", \"2015-04-28 18:27:12 FINE: Downloaded 230 blocks\\\\n\" ], \"requestProcessingTime\": 0 }","title":"Get Log"},{"location":"api/API_Examples/#get-stack-traces","text":"Request: https://localhost:2022/nxt? requestType=getStackTrace Response: { \"threads\": [ \u22ee { \"trace\": [ \"java.lang.Object.wait(Native Method)\", \"java.lang.Object.wait(Object.java:502)\", \"java.lang.ref.Reference$ReferenceHandler.run(Reference.java:157)\" ], \"name\": \"Reference Handler\", \"id\": 2, \"state\": \"WAITING\" } ], \"requestProcessingTime\": 5, \"locks\": [] }","title":"Get Stack Traces"},{"location":"api/API_Examples/#lucene-reindex","text":"Request: https://localhost:2022/nxt? requestType=luceneReindex Response: { \"requestProcessingTime\": 4480, \"done\": true }","title":"Lucene Reindex"},{"location":"api/API_Examples/#pop-off","text":"Request: https://localhost:2022/nxt? requestType=popOff& numBlocks=1 Response: { \"blocks\": [ { \"previousBlockHash\": \"5dd57ec106d9ba4cb1442017586b9df23c2c31ec5f1cb46fd3206015a96fd057\", \"payloadLength\": 0, \"totalAmountNQT\": \"0\", \"generationSignature\": \"e23740a05b65aa01a890a9ba1c9766183a328455b6e347add727a823e151db99\", \"generator\": \"16120433118765388429\", \"generatorPublicKey\": \"f35600023d42e79cbf0518a174141bce1decb13332e397553c3f62df7261414a\", \"baseTarget\": \"268653798\", \"payloadHash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\", \"generatorRS\": \"BLX-A6NF-JE4R-XB6L-FAUFZ\", \"nextBlock\": \"12812496435932308379\", \"numberOfTransactions\": 0, \"blockSignature\": \"d9aba136c708e4f84b7ae1cf0415b25a75f9eefc8a47b1963b237ada9982a...\", \"transactions\": [], \"version\": 3, \"totalFeeNQT\": \"0\", \"previousBlock\": \"5528970115590051165\", \"block\": \"8125766982300698657\", \"height\": 212194, \"timestamp\": 23052841 } ], \"requestProcessingTime\": 109 }","title":"Pop Off"},{"location":"api/API_Examples/#rebroadcast-unconfirmed-transactions","text":"Request: https://localhost:2022/nxt? requestType=RebroadcastUnconfirmedTransactions Response: { \"requestProcessingTime\": 2, \"done\": true }","title":"Rebroadcast Unconfirmed Transactions"},{"location":"api/API_Examples/#requeue-unconfirmed-transactions","text":"Request: https://localhost:2022/nxt? requestType=requeueUnconfirmedTransactions Response: { \"requestProcessingTime\": 1, \"done\": true }","title":"Requeue Unconfirmed Transactions"},{"location":"api/API_Examples/#retrieve-pruned-data","text":"Request: https://localhost:2022/nxt? requestType=retrievePrunedData Response: { \"numberOfPrunedData\": 0, \"requestProcessingTime\": 4604, \"done\": true }","title":"Retrieve Pruned Data"},{"location":"api/API_Examples/#scan","text":"Request: https://localhost:2022/nxt? requestType=scan Response: { \"scanTime\": 8, \"requestProcessingTime\": 8445, \"done\": true }","title":"Scan"},{"location":"api/API_Examples/#set-logging","text":"Request: https://localhost:2022/nxt? requestType=setLogging Response: { \"loggingUpdated\": true }","title":"Set Logging"},{"location":"api/API_Examples/#shutdown","text":"Request: https://localhost:2022/nxt? requestType=shutdown Response: { \"requestProcessingTime\": 2, \"shutdown\": true }","title":"Shutdown"},{"location":"api/API_Examples/#trim-derived-tables","text":"Request: https://localhost:2022/nxt? requestType=trimDerivedTables Response: { \"requestProcessingTime\": 394, \"done\": true }","title":"Trim Derived Tables"},{"location":"api/account/","text":"Account Operations Delete Account Property Deletes an account property. POST only. Request: requestType is deleteAccountProperty property is the name of the property recipient is the account where a property should be removed (optional) setter is the account who did set the property (optional) Response: Refer to Create Transaction Response . Example: Refer to Delete Account Property example. Get Account Get account information given an account ID. Request: requestType is getAccount account is the account ID includeLessors is true to include lessors , lessorsRS and lessorsInfo (optional) includeAssets is true to include assetBalances and unconfirmedAssetBalances (optional) includeCurrencies is true to include accountCurrencies (optional) includeEffectiveBalance is true to include effectiveBalanceNXT and guaranteedBalanceNQT (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: unconfirmedBalanceNQT (S) is balanceNQT less unconfirmed outgoing transactions, the balance displayed in the client effectiveBalanceNXT (N) is the balance (in BLX) of the account available for forging: the unleased guaranteedBalance of this account plus the leased guaranteedBalance of all lessors to this account lessorsInfo (A) is an array of lessor objects including the fields: currentHeightTo (S) nextHeightFrom (S) effectiveBalanceNXT (S) nextLesseeRS (S) currentLesseeRS (S) currentHeightFrom (S) nextHeightTo (S) lessors (A) is an array of lessor account IDs currentLessee (S) is the account number of the lessee, if applicable currentLeasingHeightTo (N) is the block height when the lease completes, if applicable forgedBalanceNQT (S) is the balance (in NQT) that the account has forged balanceNQT (S) is the minimally confirmed basic balance (in NQT) of the account publicKey (S) is the public key of the account requestProcessingTime (N) is the API request processing time (in millisec) assetBalances (A) is an array of asset objects including the fields balanceQNT (S) and asset (S) ID guaranteedBalanceNQT (S) is the balance (in NQT) of the account with at least 1440 confirmations unconfirmedAssetBalances (A) is an array of asset objects including the fields unconfirmedBalanceQNT (S) and asset (S) ID currentLesseeRS (S) is the Reed-Solomon address of the lessee account accountRS (S) is the Reed-Solomon address of the account lessorsRS (A) is an array of Reed-Solomon lessor account addresses accountCurrencies (A) is an array of currency objects (refer to Get Account Currencies for details) name (S) is the name associated with the account, if applicable description (S) is the description of the account, if applicable account (S) is the account number currentLeasingHeightFrom (N) is the block height when the lease starts, if applicable lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) Example: Refer to Get Account example. Get Account Block Count Get the number of blocks forged by an account. Request: requestType is getAccountBlockCount account is an account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfBlocks (N) is the number of blocks forged by the account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Block Count example. Get Account Block Ids Get the block IDs of all blocks forged (generated) by an account in reverse block height order. Request: requestType is getAccountBlockIds account is the account ID timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first block ID to retrieve (optional) lastIndex is a zero-based index to the last block ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: blockIds (A) is an array of block IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Get Account Block Ids example. Get Account Blocks Get all blocks forged (generated) by an account in reverse block height order. Request: requestType is getAccountBlocks account is the account ID timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first block to retrieve (optional) lastIndex is a zero-based index to the last block to retrieve (optional) includeTransactions is true to retrieve transaction details, otherwise only transaction IDs are retrieved (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: blocks (A) is an array of blocks (refer to Get Block for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Blocks example. Get Account Id Get an account ID given a secret passphrase or public key. POST only. Request: requestType is getAccountId secretPhrase is the secret passphrase of the account (optional) publicKey is the public key of the account (optional if secretPhrase provided) Response: accountRS (S) is the Reed-Solomon address of the account publicKey (S) is the public key of the account requestProcessingTime (N) is the API request processing time (in millisec) account (S) is the account number Example: Refer to Get Account Id example. Get Account Ledger Get multiple account ledger entries. Request: requestType is getAccountLedger account is the account ID (optional) firstIndex is a zero-based index to the first block to retrieve (optional) lastIndex is a zero-based index to the last block to retrieve (optional) event is the event ID (optional) eventType is a string representing the event type (optional) holdingType is a string representing the holding type (optional) holding is the holding ID (optional) includeTransactions is true to retrieve transaction details, otherwise only transaction IDs are retrieved (optional) includeHoldingInfo is true to retrieve asset or currency info (optional) with each ledger entry. The default is false. requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: entries (A) is an array of ledger objects including the fields: change (S) is the change in the balance for the holding identified by 'holdingType' eventType (S) is the event type causing the account change ledgerId (S) is the ledger entry ID holding (S) is the item identifier for an asset or currency balance isTransactionEvent (B) is true if the event is associated with a transaction and false if it is associated with a block. balance (S) is the balance for the holding identified by 'holdingType' holdingType (S) is the item being changed (account balance, asset balance or currency balance) accountRS (S) is the Reed-Solomon address of the account block (S) is the block ID that created the ledger entry event (S) is the block or transaction associated with the event account (S) is the account number height (N) is the the block height associated with the event timestamp (N) is the the block timestamp associated with the event requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Ledger example. Get Account Ledger Entry Get a specific account ledger entry. Request: requestType is getAccountLedgerEntry ledgerId is the ledger ID includeTransactions is true to retrieve transaction details, otherwise only transaction IDs are retrieved (optional) includeHoldingInfo is true to retrieve asset or currency info (optional) with the ledger entry. The default is false. Response: change (S) is the change in the balance for the holding identified by 'holdingType' eventType (S) is the event type causing the account change ledgerId (S) is the ledger entry ID holding (S) is the item identifier for an asset or currency balance isTransactionEvent (B) is true if the event is associated with a transaction and false if it is associated with a block. balance (S) is the balance for the holding identified by 'holdingType' holdingType (S) is the item being changed (account balance, asset balance or currency balance) accountRS (S) is the Reed-Solomon address of the account block (S) is the block ID that created the ledger entry event (S) is the block or transaction associated with the event account (S) is the account number height (N) is the the block height associated with the event timestamp (N) is the the block timestamp associated with the event requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Ledger Entry example. Get Account Lessors Get the lessors to an account. Request: requestType is getAccountLessors account is the account ID height is the height of the blockchain to determine the lessors (optional, default is last block) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: accountRS (S) is the Reed-Solomon address of the account account (S) is the account number height (N) is the height of the blockchain lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) lessors (A) is an array of lessor objects including the fields: lessorRS (S) lessor (S) guaranteedBalanceNQT (S) Example: Refer to Get Account Lessors example. Get Account Properties Get the Account properties for a specific account or setter. Request: requestType is getAccountProperties recipient is the account ID to which the property is attached to setter is the account ID who set the property (optional if recipient provided) property is the property key (optional) firstIndex is a zero-based index to the first block to retrieve (optional) lastIndex is a zero-based index to the last block to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: setterRS : (S) is the Reed-Solomon address of the setter account (only if setter is defined in the request) recipientRS : (S) is the Reed-Solomon address of the recipient account (only if recipient is defined in the request) recipient : (S) is the account number of the recipient account (only if recipient is defined in the request) requestProcessingTime (N) is the API request processing time (in millisec) setter : (S) is the account number of the setter account (only if setter is defined in the request) properties : (A) is an array of properties including the fields: setterRS : (S) is the Reed-Solomon address of the setter account (only if setter is omitted in the request) recipientRS : (S) is the Reed-Solomon address of the recipient account (only if recipient is omitted in the request) recipient : (S) is the account number of the recipient account (only if recipient is omitted in the request) property : (S) property name setter : (S) is the account number of the setter account (only if setter is omitted in the request) value : (S) property value Example: Refer to Get Account Properties example. Get Account Public Key Get the public key associated with an account ID. Request: requestType is getAccountPublicKey account is the account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: publicKey (S) is the 32-byte public key associated with the account, returned as a hex string lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Public Key example. Get Balance Get the balance of an account. Request: requestType is getBalance account is an account ID includeEffectiveBalance is true to include effectiveBalanceNXT and guaranteedBalanceNQT (optional) height is the height to retrieve account balance for, if still available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: unconfirmedBalanceNQT (S) is balanceNQT less unconfirmed outgoing transactions, the balance displayed in the client guaranteedBalanceNQT (S) is the balance (in NQT) of the account with at least 1440 confirmations effectiveBalanceNXT (N) is the balance (in Blue0x) of the account available for forging: the unleased guaranteedBalance of this account plus the leased guaranteedBalance of all lessors to this account forgedBalanceNQT (S) is the balance (in NQT) that the account has forged balanceNQT (S) is the minimally confirmed basic balance (in NQT) of the account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Balance example. Get Blockchain Transactions Get the transactions associated with an account in reverse block timestamp order. Request: requestType is getBlockchainTransactions account is the account ID timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) type is the type of transactions to retrieve (optional) subtype is the subtype of transactions to retrieve (optional) firstIndex is a zero-based index to the first transaction to retrieve (optional) lastIndex is a zero-based index to the last transaction to retrieve (optional) numberOfConfirmations is the required number of confirmations per transaction (optional) withMessage is true to retrieve only only transactions having a message attachment, either non-encrypted or decryptable by the account (optional) phasedOnly is true to retrieve only phased transactions (optional unless nonPhasedOnly provided) nonPhasedOnly is true to retrieve only nonphased transactions (optional unless phasedOnly provided) includeExpiredPrunable is true' to retrieve pruned data if available (optional) includePhasingResult is true to retrieve execution status of each phased transaction (optional) executedOnly is true to exclude phased transactions that are not yet executed (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of transactions (refer to Get Transaction for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Blockchain Transactions example. Get Guaranteed Balance Get the balance of an account that is confirmed at least a specified number of times. Request: requestType is getGuaranteedBalance account is an account ID numberOfConfirmations is the minimum number of confirmations for a transaction to be included in the guaranteed balance (optional, if omitted or zero then minimally confirmed transactions are included) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: guaranteedBalanceNQT (S) is the balance (in NQT) of the account with at least numberOfConfirmations confirmations lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Guaranteed Balance example. Get Unconfirmed Transaction Ids Get a list of unconfirmed transaction IDs associated with an account. Request: requestType is getUnconfirmedTransactionIds account is one account ID (optional) account is one account ID (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) firstIndex is a zero-based index to the first transaction ID to retrieve (optional) lastIndex is a zero-based index to the last transaction ID to retrieve (optional) Response: unconfirmedTransactionIds (A) is an array of unconfirmed transaction IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Unconfirmed Transaction Ids example. Get Unconfirmed Transactions Get a list of unconfirmed transactions associated with an account. Request: requestType is getUnconfirmedTransactions account is one account ID (optional) account is one account ID (optional) \u22ee requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) firstIndex is a zero-based index to the first unconfirmed transaction to retrieve (optional) lastIndex is a zero-based index to the last unconfirmed transaction to retrieve (optional) Response: unconfirmedTransactions (A) is an array of unconfirmed transactions (refer to Get Transaction for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Unconfirmed Transactions example. Search Accounts Get accounts having a name or description that match a given query in reverse relevance order. Request: requestType is searchAccounts query is a full text query on the account fields name (S) and description (S) in the standard Lucene syntax firstIndex is a zero-based index to the first account to retrieve (optional) lastIndex is a zero-based index to the last account to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: accounts (A) is an array of account objects with the following fields: account (S) is the account number accountRS (S) is the Reed-Solomon address of the account name (S) is the name of the account description (S) is the description of the account (if applicable) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Accounts example. Send Money Send Blue0x to another account. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is sendMoney amountNQT is the amount (in NQT) in the transaction recipient is the account ID of the recipient recipientPublicKey is the public key of the receiving account (optional, enhances security of a new account) Response: Refer to Create Transaction Response . Example: Refer to Send Money example. Send BLX Refer to Send Money . Set Account Info Set account information. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is setAccountInfo name is a name to associate with the account (optional) description is a description to associate with the account (optional) messagePatternRegex is a regular expression pattern following the java.util.regex.Pattern specification; incoming transactions are only accepted if they contain a plain text message which matches this pattern (disabled indefinitely due to a security issue) messagePatternFlags is a bitmask of java.util.regex.Pattern flags, such as 2 (Pattern.CASE-iNSENSITIVE) Response: Refer to Create Transaction Response . Example: Refer to Set Account Info example. Set Account Property Set account property. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is setAccountProperty recipient is the account ID of the recipient. property is the property name. value is the property value. Response: Refer to Create Transaction Response . Example: Refer to Set Account Property example. Start Funding Monitor Starts a funding monitor that will transfer BLX, an ASSET or a CURRENCY from the funding account to a recipient account when the amount held by the recipient account drops below the threshold. The transfer will not be done until the current block height is greater than equal to the block height of the last transfer plus the interval. The funding account is identified by the secret phrase. The recipient accounts are identified by the specified account property (see Set Account Property ). Each account that has this property set by the funding account will be monitored for changes. The property value can be omitted or it can consist of a JSON string containing one or more values in the format: {\"amount\":long,\"threshold\":long,\"interval\":integer} . POST only. Request: requestType is startFundingMonitor property is the name of the account property amount is the amount to fund the recipient account with (in NQT or QNT) threshold is the threshold interval is the the number of blocks to wait after before funding the recipient secretPhrase is the secret phrase of the funding account holdingType is a string representing the holding type (optional) holding is the holding ID (optional) Response: started (B) is true if the monitor has been started requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Start Funding Monitor example. Stop Funding Monitor Stop a funding monitor. When the secret phrase is specified, a single monitor will be stopped. The monitor is identified by the secret phrase, holding and account property. The administrator password is not required and will be ignored. When the administrator password is specified, a single monitor can be stopped by specifying the funding account, holding and account property. If no account is specified, all monitors will be stopped. The holding type and account property name must be specified when the secret phrase or account is specified. Holding type codes are listed in getConstants. In addition, the holding identifier must be specified when the holding type is ASSET or CURRENCY. POST only. Request: requestType is stopFundingMonitor secretPhrase is the secret phrase of the funding account, used to stop a single monitor. (optional) adminPassword is the admin password, used to stop a single monitor or all monitors (optional if secretPhrase is provided) property is the name of the account property (optional) holdingType is a string representing the holding type (optional) holding is the holding ID (optional) account is the account ID (optional) Response: stopped (N) is the number of the monitors that have been stopped requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Stop Funding Monitor example. Account Control Operations Get All Phasing Only Controls Retrieve all accounts subject to phasing control with their respective restrictions. Request: requestType is getAllPhasingOnlyControls firstIndex is a zero-based index to the first block ID to retrieve (optional) lastIndex is a zero-based index to the last block ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: phasingOnlyControls (A) is an array with phasing only controls objects (Refer to Get Phasing Only Control for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Phasing Only Controls example. Get Phasing Only Control Retrieve phasing control with their respective restrictions for a specific account. Request: requestType is getPhasingOnlyControl account is the account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: account (S) is the account number accountRS (S) is the Reed-Solomon address of the account quorum (S) is the minimum number of votes needed to approve the transaction whitelist (A) is an array with the whitelisted accounts including the fields: whitelisted (S) is the account number whitelistedRS (S) is the Reed-Solomon address of the account maxFees (S) is the maximum fees the account can spend per block minDuration (N) is the minimum duration of the phasing period maxDuration (N) is the maximum duration of the phasing period votingModel (N) is an integer code for the method of approval minBalance (S) is the minimum balance (in NQT or QNT) required for voting minBalanceModel (N) is the minimum balance model holding (S) is the asset or currency ID (only included if holding != 0) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Phasing Only Control example. Set Phasing Only Control Sets (or removes) phasing control for a specific account. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is setPhasingOnlyControl controlVotingModel is the voting model or -1 to remove phasing control controlQuorum is the expected quorum (optional) controlMinBalance is the expected minimum balance (optional) controlMinBalanceModel is the expected minimum balance model (optional) controlHolding is the holding ID (optional) controlWhitelisted is the whitelisted accounts (optional, multiple values) controlWhitelisted is the whitelisted accounts (optional, multiple values) controlMaxFees is the maximum allowed accumulated total fees for not yet finished phased transactions (optional) controlMinDuration is the minimum duration in block height (optional) controlMaxDuration is the maximum phasing duration in block height (optional) Response: Refer to Create Transaction Response . Example: Refer to Set Phasing Only Control example.","title":"Account"},{"location":"api/account/#account-operations","text":"","title":"Account Operations"},{"location":"api/account/#delete-account-property","text":"Deletes an account property. POST only. Request: requestType is deleteAccountProperty property is the name of the property recipient is the account where a property should be removed (optional) setter is the account who did set the property (optional) Response: Refer to Create Transaction Response . Example: Refer to Delete Account Property example.","title":"Delete Account Property"},{"location":"api/account/#get-account","text":"Get account information given an account ID. Request: requestType is getAccount account is the account ID includeLessors is true to include lessors , lessorsRS and lessorsInfo (optional) includeAssets is true to include assetBalances and unconfirmedAssetBalances (optional) includeCurrencies is true to include accountCurrencies (optional) includeEffectiveBalance is true to include effectiveBalanceNXT and guaranteedBalanceNQT (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: unconfirmedBalanceNQT (S) is balanceNQT less unconfirmed outgoing transactions, the balance displayed in the client effectiveBalanceNXT (N) is the balance (in BLX) of the account available for forging: the unleased guaranteedBalance of this account plus the leased guaranteedBalance of all lessors to this account lessorsInfo (A) is an array of lessor objects including the fields: currentHeightTo (S) nextHeightFrom (S) effectiveBalanceNXT (S) nextLesseeRS (S) currentLesseeRS (S) currentHeightFrom (S) nextHeightTo (S) lessors (A) is an array of lessor account IDs currentLessee (S) is the account number of the lessee, if applicable currentLeasingHeightTo (N) is the block height when the lease completes, if applicable forgedBalanceNQT (S) is the balance (in NQT) that the account has forged balanceNQT (S) is the minimally confirmed basic balance (in NQT) of the account publicKey (S) is the public key of the account requestProcessingTime (N) is the API request processing time (in millisec) assetBalances (A) is an array of asset objects including the fields balanceQNT (S) and asset (S) ID guaranteedBalanceNQT (S) is the balance (in NQT) of the account with at least 1440 confirmations unconfirmedAssetBalances (A) is an array of asset objects including the fields unconfirmedBalanceQNT (S) and asset (S) ID currentLesseeRS (S) is the Reed-Solomon address of the lessee account accountRS (S) is the Reed-Solomon address of the account lessorsRS (A) is an array of Reed-Solomon lessor account addresses accountCurrencies (A) is an array of currency objects (refer to Get Account Currencies for details) name (S) is the name associated with the account, if applicable description (S) is the description of the account, if applicable account (S) is the account number currentLeasingHeightFrom (N) is the block height when the lease starts, if applicable lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) Example: Refer to Get Account example.","title":"Get Account"},{"location":"api/account/#get-account-block-count","text":"Get the number of blocks forged by an account. Request: requestType is getAccountBlockCount account is an account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfBlocks (N) is the number of blocks forged by the account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Block Count example.","title":"Get Account Block Count"},{"location":"api/account/#get-account-block-ids","text":"Get the block IDs of all blocks forged (generated) by an account in reverse block height order. Request: requestType is getAccountBlockIds account is the account ID timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first block ID to retrieve (optional) lastIndex is a zero-based index to the last block ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: blockIds (A) is an array of block IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Get Account Block Ids example.","title":"Get Account Block Ids"},{"location":"api/account/#get-account-blocks","text":"Get all blocks forged (generated) by an account in reverse block height order. Request: requestType is getAccountBlocks account is the account ID timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first block to retrieve (optional) lastIndex is a zero-based index to the last block to retrieve (optional) includeTransactions is true to retrieve transaction details, otherwise only transaction IDs are retrieved (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: blocks (A) is an array of blocks (refer to Get Block for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Blocks example.","title":"Get Account Blocks"},{"location":"api/account/#get-account-id","text":"Get an account ID given a secret passphrase or public key. POST only. Request: requestType is getAccountId secretPhrase is the secret passphrase of the account (optional) publicKey is the public key of the account (optional if secretPhrase provided) Response: accountRS (S) is the Reed-Solomon address of the account publicKey (S) is the public key of the account requestProcessingTime (N) is the API request processing time (in millisec) account (S) is the account number Example: Refer to Get Account Id example.","title":"Get Account Id"},{"location":"api/account/#get-account-ledger","text":"Get multiple account ledger entries. Request: requestType is getAccountLedger account is the account ID (optional) firstIndex is a zero-based index to the first block to retrieve (optional) lastIndex is a zero-based index to the last block to retrieve (optional) event is the event ID (optional) eventType is a string representing the event type (optional) holdingType is a string representing the holding type (optional) holding is the holding ID (optional) includeTransactions is true to retrieve transaction details, otherwise only transaction IDs are retrieved (optional) includeHoldingInfo is true to retrieve asset or currency info (optional) with each ledger entry. The default is false. requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: entries (A) is an array of ledger objects including the fields: change (S) is the change in the balance for the holding identified by 'holdingType' eventType (S) is the event type causing the account change ledgerId (S) is the ledger entry ID holding (S) is the item identifier for an asset or currency balance isTransactionEvent (B) is true if the event is associated with a transaction and false if it is associated with a block. balance (S) is the balance for the holding identified by 'holdingType' holdingType (S) is the item being changed (account balance, asset balance or currency balance) accountRS (S) is the Reed-Solomon address of the account block (S) is the block ID that created the ledger entry event (S) is the block or transaction associated with the event account (S) is the account number height (N) is the the block height associated with the event timestamp (N) is the the block timestamp associated with the event requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Ledger example.","title":"Get Account Ledger"},{"location":"api/account/#get-account-ledger-entry","text":"Get a specific account ledger entry. Request: requestType is getAccountLedgerEntry ledgerId is the ledger ID includeTransactions is true to retrieve transaction details, otherwise only transaction IDs are retrieved (optional) includeHoldingInfo is true to retrieve asset or currency info (optional) with the ledger entry. The default is false. Response: change (S) is the change in the balance for the holding identified by 'holdingType' eventType (S) is the event type causing the account change ledgerId (S) is the ledger entry ID holding (S) is the item identifier for an asset or currency balance isTransactionEvent (B) is true if the event is associated with a transaction and false if it is associated with a block. balance (S) is the balance for the holding identified by 'holdingType' holdingType (S) is the item being changed (account balance, asset balance or currency balance) accountRS (S) is the Reed-Solomon address of the account block (S) is the block ID that created the ledger entry event (S) is the block or transaction associated with the event account (S) is the account number height (N) is the the block height associated with the event timestamp (N) is the the block timestamp associated with the event requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Ledger Entry example.","title":"Get Account Ledger Entry"},{"location":"api/account/#get-account-lessors","text":"Get the lessors to an account. Request: requestType is getAccountLessors account is the account ID height is the height of the blockchain to determine the lessors (optional, default is last block) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: accountRS (S) is the Reed-Solomon address of the account account (S) is the account number height (N) is the height of the blockchain lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) lessors (A) is an array of lessor objects including the fields: lessorRS (S) lessor (S) guaranteedBalanceNQT (S) Example: Refer to Get Account Lessors example.","title":"Get Account Lessors"},{"location":"api/account/#get-account-properties","text":"Get the Account properties for a specific account or setter. Request: requestType is getAccountProperties recipient is the account ID to which the property is attached to setter is the account ID who set the property (optional if recipient provided) property is the property key (optional) firstIndex is a zero-based index to the first block to retrieve (optional) lastIndex is a zero-based index to the last block to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: setterRS : (S) is the Reed-Solomon address of the setter account (only if setter is defined in the request) recipientRS : (S) is the Reed-Solomon address of the recipient account (only if recipient is defined in the request) recipient : (S) is the account number of the recipient account (only if recipient is defined in the request) requestProcessingTime (N) is the API request processing time (in millisec) setter : (S) is the account number of the setter account (only if setter is defined in the request) properties : (A) is an array of properties including the fields: setterRS : (S) is the Reed-Solomon address of the setter account (only if setter is omitted in the request) recipientRS : (S) is the Reed-Solomon address of the recipient account (only if recipient is omitted in the request) recipient : (S) is the account number of the recipient account (only if recipient is omitted in the request) property : (S) property name setter : (S) is the account number of the setter account (only if setter is omitted in the request) value : (S) property value Example: Refer to Get Account Properties example.","title":"Get Account Properties"},{"location":"api/account/#get-account-public-key","text":"Get the public key associated with an account ID. Request: requestType is getAccountPublicKey account is the account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: publicKey (S) is the 32-byte public key associated with the account, returned as a hex string lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Public Key example.","title":"Get Account Public Key"},{"location":"api/account/#get-balance","text":"Get the balance of an account. Request: requestType is getBalance account is an account ID includeEffectiveBalance is true to include effectiveBalanceNXT and guaranteedBalanceNQT (optional) height is the height to retrieve account balance for, if still available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: unconfirmedBalanceNQT (S) is balanceNQT less unconfirmed outgoing transactions, the balance displayed in the client guaranteedBalanceNQT (S) is the balance (in NQT) of the account with at least 1440 confirmations effectiveBalanceNXT (N) is the balance (in Blue0x) of the account available for forging: the unleased guaranteedBalance of this account plus the leased guaranteedBalance of all lessors to this account forgedBalanceNQT (S) is the balance (in NQT) that the account has forged balanceNQT (S) is the minimally confirmed basic balance (in NQT) of the account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Balance example.","title":"Get Balance"},{"location":"api/account/#get-blockchain-transactions","text":"Get the transactions associated with an account in reverse block timestamp order. Request: requestType is getBlockchainTransactions account is the account ID timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) type is the type of transactions to retrieve (optional) subtype is the subtype of transactions to retrieve (optional) firstIndex is a zero-based index to the first transaction to retrieve (optional) lastIndex is a zero-based index to the last transaction to retrieve (optional) numberOfConfirmations is the required number of confirmations per transaction (optional) withMessage is true to retrieve only only transactions having a message attachment, either non-encrypted or decryptable by the account (optional) phasedOnly is true to retrieve only phased transactions (optional unless nonPhasedOnly provided) nonPhasedOnly is true to retrieve only nonphased transactions (optional unless phasedOnly provided) includeExpiredPrunable is true' to retrieve pruned data if available (optional) includePhasingResult is true to retrieve execution status of each phased transaction (optional) executedOnly is true to exclude phased transactions that are not yet executed (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of transactions (refer to Get Transaction for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Blockchain Transactions example.","title":"Get Blockchain Transactions"},{"location":"api/account/#get-guaranteed-balance","text":"Get the balance of an account that is confirmed at least a specified number of times. Request: requestType is getGuaranteedBalance account is an account ID numberOfConfirmations is the minimum number of confirmations for a transaction to be included in the guaranteed balance (optional, if omitted or zero then minimally confirmed transactions are included) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: guaranteedBalanceNQT (S) is the balance (in NQT) of the account with at least numberOfConfirmations confirmations lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Guaranteed Balance example.","title":"Get Guaranteed Balance"},{"location":"api/account/#get-unconfirmed-transaction-ids","text":"Get a list of unconfirmed transaction IDs associated with an account. Request: requestType is getUnconfirmedTransactionIds account is one account ID (optional) account is one account ID (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) firstIndex is a zero-based index to the first transaction ID to retrieve (optional) lastIndex is a zero-based index to the last transaction ID to retrieve (optional) Response: unconfirmedTransactionIds (A) is an array of unconfirmed transaction IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Unconfirmed Transaction Ids example.","title":"Get Unconfirmed Transaction Ids"},{"location":"api/account/#get-unconfirmed-transactions","text":"Get a list of unconfirmed transactions associated with an account. Request: requestType is getUnconfirmedTransactions account is one account ID (optional) account is one account ID (optional) \u22ee requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) firstIndex is a zero-based index to the first unconfirmed transaction to retrieve (optional) lastIndex is a zero-based index to the last unconfirmed transaction to retrieve (optional) Response: unconfirmedTransactions (A) is an array of unconfirmed transactions (refer to Get Transaction for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Unconfirmed Transactions example.","title":"Get Unconfirmed Transactions"},{"location":"api/account/#search-accounts","text":"Get accounts having a name or description that match a given query in reverse relevance order. Request: requestType is searchAccounts query is a full text query on the account fields name (S) and description (S) in the standard Lucene syntax firstIndex is a zero-based index to the first account to retrieve (optional) lastIndex is a zero-based index to the last account to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: accounts (A) is an array of account objects with the following fields: account (S) is the account number accountRS (S) is the Reed-Solomon address of the account name (S) is the name of the account description (S) is the description of the account (if applicable) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Accounts example.","title":"Search Accounts"},{"location":"api/account/#send-money","text":"Send Blue0x to another account. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is sendMoney amountNQT is the amount (in NQT) in the transaction recipient is the account ID of the recipient recipientPublicKey is the public key of the receiving account (optional, enhances security of a new account) Response: Refer to Create Transaction Response . Example: Refer to Send Money example.","title":"Send Money"},{"location":"api/account/#send-blx","text":"Refer to Send Money .","title":"Send BLX"},{"location":"api/account/#set-account-info","text":"Set account information. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is setAccountInfo name is a name to associate with the account (optional) description is a description to associate with the account (optional) messagePatternRegex is a regular expression pattern following the java.util.regex.Pattern specification; incoming transactions are only accepted if they contain a plain text message which matches this pattern (disabled indefinitely due to a security issue) messagePatternFlags is a bitmask of java.util.regex.Pattern flags, such as 2 (Pattern.CASE-iNSENSITIVE) Response: Refer to Create Transaction Response . Example: Refer to Set Account Info example.","title":"Set Account Info"},{"location":"api/account/#set-account-property","text":"Set account property. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is setAccountProperty recipient is the account ID of the recipient. property is the property name. value is the property value. Response: Refer to Create Transaction Response . Example: Refer to Set Account Property example.","title":"Set Account Property"},{"location":"api/account/#start-funding-monitor","text":"Starts a funding monitor that will transfer BLX, an ASSET or a CURRENCY from the funding account to a recipient account when the amount held by the recipient account drops below the threshold. The transfer will not be done until the current block height is greater than equal to the block height of the last transfer plus the interval. The funding account is identified by the secret phrase. The recipient accounts are identified by the specified account property (see Set Account Property ). Each account that has this property set by the funding account will be monitored for changes. The property value can be omitted or it can consist of a JSON string containing one or more values in the format: {\"amount\":long,\"threshold\":long,\"interval\":integer} . POST only. Request: requestType is startFundingMonitor property is the name of the account property amount is the amount to fund the recipient account with (in NQT or QNT) threshold is the threshold interval is the the number of blocks to wait after before funding the recipient secretPhrase is the secret phrase of the funding account holdingType is a string representing the holding type (optional) holding is the holding ID (optional) Response: started (B) is true if the monitor has been started requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Start Funding Monitor example.","title":"Start Funding Monitor"},{"location":"api/account/#stop-funding-monitor","text":"Stop a funding monitor. When the secret phrase is specified, a single monitor will be stopped. The monitor is identified by the secret phrase, holding and account property. The administrator password is not required and will be ignored. When the administrator password is specified, a single monitor can be stopped by specifying the funding account, holding and account property. If no account is specified, all monitors will be stopped. The holding type and account property name must be specified when the secret phrase or account is specified. Holding type codes are listed in getConstants. In addition, the holding identifier must be specified when the holding type is ASSET or CURRENCY. POST only. Request: requestType is stopFundingMonitor secretPhrase is the secret phrase of the funding account, used to stop a single monitor. (optional) adminPassword is the admin password, used to stop a single monitor or all monitors (optional if secretPhrase is provided) property is the name of the account property (optional) holdingType is a string representing the holding type (optional) holding is the holding ID (optional) account is the account ID (optional) Response: stopped (N) is the number of the monitors that have been stopped requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Stop Funding Monitor example.","title":"Stop Funding Monitor"},{"location":"api/account/#account-control-operations","text":"","title":"Account Control Operations"},{"location":"api/account/#get-all-phasing-only-controls","text":"Retrieve all accounts subject to phasing control with their respective restrictions. Request: requestType is getAllPhasingOnlyControls firstIndex is a zero-based index to the first block ID to retrieve (optional) lastIndex is a zero-based index to the last block ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: phasingOnlyControls (A) is an array with phasing only controls objects (Refer to Get Phasing Only Control for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Phasing Only Controls example.","title":"Get All Phasing Only Controls"},{"location":"api/account/#get-phasing-only-control","text":"Retrieve phasing control with their respective restrictions for a specific account. Request: requestType is getPhasingOnlyControl account is the account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: account (S) is the account number accountRS (S) is the Reed-Solomon address of the account quorum (S) is the minimum number of votes needed to approve the transaction whitelist (A) is an array with the whitelisted accounts including the fields: whitelisted (S) is the account number whitelistedRS (S) is the Reed-Solomon address of the account maxFees (S) is the maximum fees the account can spend per block minDuration (N) is the minimum duration of the phasing period maxDuration (N) is the maximum duration of the phasing period votingModel (N) is an integer code for the method of approval minBalance (S) is the minimum balance (in NQT or QNT) required for voting minBalanceModel (N) is the minimum balance model holding (S) is the asset or currency ID (only included if holding != 0) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Phasing Only Control example.","title":"Get Phasing Only Control"},{"location":"api/account/#set-phasing-only-control","text":"Sets (or removes) phasing control for a specific account. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is setPhasingOnlyControl controlVotingModel is the voting model or -1 to remove phasing control controlQuorum is the expected quorum (optional) controlMinBalance is the expected minimum balance (optional) controlMinBalanceModel is the expected minimum balance model (optional) controlHolding is the holding ID (optional) controlWhitelisted is the whitelisted accounts (optional, multiple values) controlWhitelisted is the whitelisted accounts (optional, multiple values) controlMaxFees is the maximum allowed accumulated total fees for not yet finished phased transactions (optional) controlMinDuration is the minimum duration in block height (optional) controlMaxDuration is the maximum phasing duration in block height (optional) Response: Refer to Create Transaction Response . Example: Refer to Set Phasing Only Control example.","title":"Set Phasing Only Control"},{"location":"api/alias/","text":"Alias Operations Buy / Sell Alias Buy or sell an alias. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is either buyAlias or sellAlias alias is the ID of the alias (optional) aliasName is the alias name (optional if alias provided) priceNQT is the asking price (in NQT) of the alias ( sellAlias only) amountNQT is the amount (in NQT) offered for an alias for sale ( buyAlias only) recipient is the account ID of the recipient (only required for sellAlias and only if there is a designated recipient) recipientPublicKey is the public key of the recipient account (only applicable if recipient provided; optional, enhances security of a new account) Note : An alias can be transferred rather than sold by setting priceNQT to zero. A pending sale can be canceled by selling again to self for a price of zero. Response: Refer to Create Transaction Response . Example: Refer to Buy / Sell Alias example. Buy Alias Refer to Buy / Sell Alias . Sell Alias Refer to Buy / Sell Alias . Set Alias Create and/or assign an alias. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is setAlias aliasName is the alias name aliasURI is the alias URI (e.g. https://www.google.com/ ) Response: Refer to Create Transaction Response . The transaction ID is also the alias ID. Example: Refer to Set Alias example. Delete Alias Delete an alias given an alias ID or name. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is deleteAlias alias is the alias ID (optional) aliasName is the alias name to be deleted (optional if alias provided) Response: Refer to Create Transaction Response . Example: Refer to Delete Alias example. Get Alias Get information about a given alias Request: requestType is getAlias alias is the alias ID (optional) aliasName is the name of the alias (optional if alias provided) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: timestamp (N) is the time (in seconds since the genesis block) when the alias was created or last transferred aliasName (S) is the name of the alias account (S) is the number of the account that owns the alias accountRS (S) is the Reed-Solomon address of the account that owns the alias aliasURI (S) is what the alias points to, in URI format alias (S) is the alias ID priceNQT (S) is the asking price (in NQT) of the alias if it is for sale buyer (S) is the account number of the buyer if the alias is for sale and a buyer is specified lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Alias example. Get Alias Count Get the number of aliases owned by an account given the account ID. Request: requestType is getAliasCount account is the account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfAliases (N) is the number of aliases owned by the account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Alias Count example. Get Aliases Get information on aliases owned by a given account in alias name order. Request: requestType is getAliases account is the ID of the account that owns the aliases timestamp is the earliest creation time (in seconds since the genesis block) of the aliases (optional) firstIndex is a zero-based index to the first alias to retrieve (optional) lastIndex is a zero-based index to the last alias to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: aliases (A) is an array of alias objects (refer to Get Alias for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Aliases example. Get Aliases Like Get all aliases starting with a given prefix in alias name order. Request: requestType is getAliasesLike aliasPrefix is the prefix (at least 2 characters long) of the aliasName firstIndex is a zero-based index to the first alias to retrieve (optional) lastIndex is a zero-based index to the last alias to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: aliases (A) is an array of alias objects (refer to Get Alias for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Aliases Like example.","title":"Alias"},{"location":"api/alias/#alias-operations","text":"","title":"Alias Operations"},{"location":"api/alias/#buy-sell-alias","text":"Buy or sell an alias. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is either buyAlias or sellAlias alias is the ID of the alias (optional) aliasName is the alias name (optional if alias provided) priceNQT is the asking price (in NQT) of the alias ( sellAlias only) amountNQT is the amount (in NQT) offered for an alias for sale ( buyAlias only) recipient is the account ID of the recipient (only required for sellAlias and only if there is a designated recipient) recipientPublicKey is the public key of the recipient account (only applicable if recipient provided; optional, enhances security of a new account) Note : An alias can be transferred rather than sold by setting priceNQT to zero. A pending sale can be canceled by selling again to self for a price of zero. Response: Refer to Create Transaction Response . Example: Refer to Buy / Sell Alias example.","title":"Buy / Sell Alias"},{"location":"api/alias/#buy-alias","text":"Refer to Buy / Sell Alias .","title":"Buy Alias"},{"location":"api/alias/#sell-alias","text":"Refer to Buy / Sell Alias .","title":"Sell Alias"},{"location":"api/alias/#set-alias","text":"Create and/or assign an alias. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is setAlias aliasName is the alias name aliasURI is the alias URI (e.g. https://www.google.com/ ) Response: Refer to Create Transaction Response . The transaction ID is also the alias ID. Example: Refer to Set Alias example.","title":"Set Alias"},{"location":"api/alias/#delete-alias","text":"Delete an alias given an alias ID or name. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is deleteAlias alias is the alias ID (optional) aliasName is the alias name to be deleted (optional if alias provided) Response: Refer to Create Transaction Response . Example: Refer to Delete Alias example.","title":"Delete Alias"},{"location":"api/alias/#get-alias","text":"Get information about a given alias Request: requestType is getAlias alias is the alias ID (optional) aliasName is the name of the alias (optional if alias provided) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: timestamp (N) is the time (in seconds since the genesis block) when the alias was created or last transferred aliasName (S) is the name of the alias account (S) is the number of the account that owns the alias accountRS (S) is the Reed-Solomon address of the account that owns the alias aliasURI (S) is what the alias points to, in URI format alias (S) is the alias ID priceNQT (S) is the asking price (in NQT) of the alias if it is for sale buyer (S) is the account number of the buyer if the alias is for sale and a buyer is specified lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Alias example.","title":"Get Alias"},{"location":"api/alias/#get-alias-count","text":"Get the number of aliases owned by an account given the account ID. Request: requestType is getAliasCount account is the account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfAliases (N) is the number of aliases owned by the account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Alias Count example.","title":"Get Alias Count"},{"location":"api/alias/#get-aliases","text":"Get information on aliases owned by a given account in alias name order. Request: requestType is getAliases account is the ID of the account that owns the aliases timestamp is the earliest creation time (in seconds since the genesis block) of the aliases (optional) firstIndex is a zero-based index to the first alias to retrieve (optional) lastIndex is a zero-based index to the last alias to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: aliases (A) is an array of alias objects (refer to Get Alias for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Aliases example.","title":"Get Aliases"},{"location":"api/alias/#get-aliases-like","text":"Get all aliases starting with a given prefix in alias name order. Request: requestType is getAliasesLike aliasPrefix is the prefix (at least 2 characters long) of the aliasName firstIndex is a zero-based index to the first alias to retrieve (optional) lastIndex is a zero-based index to the last alias to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: aliases (A) is an array of alias objects (refer to Get Alias for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Aliases Like example.","title":"Get Aliases Like"},{"location":"api/assets/","text":"Asset Exchange Operations Cancel Order Cancel an existing asset order. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is either cancelBidOrder or cancelAskOrder order is the order ID of the order being canceled Response: Refer to Create Transaction Response . Example: Refer to Cancel Order example. Cancel Ask Order Refer to Cancel Order . Cancel Bid Order Refer to Cancel Order . Delete Asset Shares Permanently deletes a specified quantity of owned asset shares. Request: Refer to Create Transaction Request for common parameters. requestType is deleteAssetShares asset is the asset ID quantityQNT is the quantity (in QNT) of the asset to be deleted Response: Refer to Create Transaction Response . Example: Refer to Delete Asset Shares example. Dividend Payment Pay dividend to all shareholders of an asset. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dividendPayment asset is the asset ID height is the blockchain height at which asset holders shares will be counted (must be less than 1440 blocks in the past) amountNQTPerQNT is dividend amount (in NQT per QNT of the asset) Response: Refer to Create Transaction Response . Example: Refer to Dividend Payment example. Get Account Asset Count Get the number of assets owned by an account given the account ID. Request: requestType is getAccountAssetCount account is the account ID height is the height of the blockchain to determine the asset count (optional, default is last block) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: numberOfAssets (N) is the number of assets owned by the account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Asset Count example. Get Account Assets Get the assets owned by a given account in reverse quantity order. Request: requestType is getAccountAssets account is the account ID asset is an asset ID filter (optional) height is the blockchain height at which to retrieve balances (optional, default is the last block in the blockchain) includeAssetInfo is true if asset information is to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: accountAssets (A) is an array of asset objects (unless the asset parameter is specified) with the following fields for each asset: quantityQNT (S) is the quantity (in QNT) of the asset unconfirmedQuantityQNT (S) is the unconfirmed quantity (in QNT) of the asset decimals (N) is the number of decimal places used by the asset (if includeAssetInfo is true ) name (S) is the asset name (if includeAssetInfo is true ) asset (S) is the asset ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Assets example. Get Account Current Order Ids Get current asset order IDs given an account ID in reverse block height order. Request: requestType is either getAccountCurrentBidOrderIds or getAccountCurrentAskOrderIds account is the account ID asset is an asset ID filter (optional) firstIndex is a zero-based index to the first order ID to retrieve (optional) lastIndex is a zero-based index to the last order ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: bidOrderIds or askOrderIds (A) is an array of order IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Current Order Ids example. Get Account Current Ask Order Ids Refer to Get Account Current Order Ids . Get Account Current Bid Order Ids Refer to Get Account Current Order Ids . Get Account Current Orders Get current asset orders given an account ID in reverse block height order. Request: requestType is either getAccountCurrentBidOrders or getAccountCurrentAskOrders account is the account ID asset is an asset ID filter (optional) firstIndex is a zero-based index to the first order to retrieve (optional) lastIndex is a zero-based index to the last order to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: bidOrders or askOrders (A) is an array of order objects (refer to Get Order for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Current Orders example. Get Account Current Ask Orders Refer to Get Account Current Orders . Get Account Current Bid Orders Refer to Get Account Current Orders . Get All Assets Get all assets in the exchange in reverse block height of creation order. Request: requestType is getAllAssets firstIndex is a zero-based index to the first asset to retrieve (optional) lastIndex is a zero-based index to the last asset to retrieve (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset objects (refer to Get Asset ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Assets example. Get All Open Orders Get all open bid/ask orders in reverse block height order. Request: requestType is either getAllOpenBidOrders or getAllOpenAskOrders firstIndex is a zero-based index to the first order to retrieve (optional) lastIndex is a zero-based index to the last order to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: openOrders (A) is an array of order objects (refer to Get Order for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Open Orders example. Get All Open Ask Orders Refer to Get All Open Orders . Get All Open Bid Orders Refer to Get All Open Orders . Get All Trades Get all trades since a given timestamp in reverse block height order. Request: requestType is getAllTrades timestamp is the timestamp (in seconds since the genesis block) to begin retrieving trades (optional, default 0) firstIndex is a zero-based index to the first trade to retrieve (optional) lastIndex is a zero-based index to the last trade to retrieve (optional) includeAssetInfo is true if asset information is to be included in the result (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If timestamp is omitted or zero, and no index is given, all trades in the entire blockchain will be retrieved, which may timeout or crash your system. Response: trades (A) is an array of trade objects (refer to Get Trades ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Trades example. Get Asset Get asset information given an asset ID. Request: requestType is getAsset asset is the asset ID includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: account (S) is the number of the account that issued the asset accountRS (S) is the Reed-Solomon address of the account that issued the asset name (S) is the asset name description (S) is the asset description quantityQNT (S) is the total asset quantity (in QNT) in existence asset (N) is the asset ID decimals (N) is the number of decimal places used by the asset numberOfAccounts (N) is the number of accounts that own the asset numberOfTrades (N) is the number of trades of this asset numberOfTransfers (N) is the number of transfers of this asset lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset example. Get Asset Account Count Get the number of accounts that own an asset given the asset ID. Request: requestType is getAssetAccountCount asset is the asset ID height is the height of the blockchain to determine the account count (optional, default is last block) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: numberOfAccounts (N) is the number of accounts that own the asset lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset Account Count example. Get Asset Accounts Get the accounts that own an asset given the asset ID in reverse quantity order. Request: requestType is getAssetAccounts asset is the asset ID height is the height of the blockchain to determine the accounts (optional, default is last block) firstIndex is a zero-based index to the first account to retrieve (optional) lastIndex is a zero-based index to the last account to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: accountAssets (A) is an array of asset objects with the following fields for each asset: quantityQNT (S) is the quantity (in QNT) of the asset accountRS (S) is the Reed-Solomon address of the account that owns the asset unconfirmedQuantityQNT (S) is the unconfirmed quantity (in QNT) of the asset asset (S) is the asset ID account (S) is the number of the account that owns the asset lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset Accounts example. Get Asset Deletes Get asset deletions for a specific asset or account. Request: requestType is getAssetDeletes asset is the asset ID (optional if account is provided) account is the account ID (optional if asset is provided) firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) timestamp is the earliest deletion (in seconds since the genesis block) to retrieve (optional) includeAssetInfo is true if asset information is to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: deletes (A) is an array of asset delete objects with following properties: quantityQNT (S) is the number of shares that was deleted assetDelete (S) is the transaction ID account (S) is the account ID accountRS (S) is the account Reed Solomon address asset (S) is the asset ID height (N) is the block height of the delete timestamp (N) is the block timestamp of the delete decimals (N) is the number of decimal places used by the asset (if includeAssetInfo is true ) name (S) is the asset name (if includeAssetInfo is true ) Example: Refer to Get Asset Deletes example. Get Asset Dividends Get the dividend payment history for a specific asset. Request: requestType is getAssetDividends asset is the asset ID firstIndex is a zero-based index to the first dividend payment to retrieve (optional) lastIndex is a zero-based index to the last dividend payment to retrieve (optional) timestamp is the earliest dividend payment (in seconds since the genesis block) to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: dividends (A) is an array of dividend transactions with the following properties: assetDividend (S) is the dividend payment transaction ID numberOfAccounts (N) is the number of accounts that received a dividend amountNQTPerQNT (S) is the amount of BLX (in NQT) paid per quantity (in QNT) of the asset totalDividend (S) is the total amount of BLX (in NQT) sent in the dividend payment dividendHeight (N) is the block height of the dividend calculation asset (S) is the asset ID height (N) is the block height of the dividend payment timestamp (N) is the block timestamp of the dividend payment Example: Refer to Get Asset Dividends example. Get Asset Ids Get the IDs of all assets in the exchange in reverse block height of creation order. Request: requestType is getAssetIds firstIndex is a zero-based index to the first asset ID to retrieve (optional) lastIndex is a zero-based index to the last asset ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset Ids example. Get Asset Transfers Get transfers associated with a given asset and/or account in reverse block height order (or in the expected order of execution for expected transfers). Request: requestType is either getAssetTransfers or getExpectedAssetTransfers , where expected transfers are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block asset is the asset ID (optional) account is the account ID (optional if asset provided) timestamp is the earliest transfer (in seconds since the genesis block) to retrieve (optional, does not apply to expected transfers) firstIndex is a zero-based index to the first transfer to retrieve (optional, does not apply to expected transfers) lastIndex is a zero-based index to the last transfer to retrieve (optional, does not apply to expected transfers) includeAssetInfo is true if the decimals and name fields are to be included (optional, does not apply to expected transfers) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transfers (A) is an array of transfer objects with the following fields for each transfer: quantityQNT (S) is the quantity (in QNT) of the asset traded senderRS (S) is the Reed-Solomon address of the sender assetTransfer (S) is the transaction ID of the asset transfer sender (S) is the account number of the sender recipientRS (S) is the Reed-Solomon address of the recipient decimals (N) is the number of decimal places used by the asset (if includeAssetInfo is true ) recipient (S) is the account number of the recipient name (S) is the name of the asset (if includeAssetInfo is true ) asset (S) is the asset ID height (N) is the height of the transfer block timestamp (N) is the timestamp (in seconds since the genesis block) of the transfer block, does not apply to an expected transfer phased (B) is true if the transaction is phased, false otherwise, applies only to an expected transfer lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset Transfers example. Get Expected Asset Transfers Refer to Get Asset Transfers . Get Assets Get asset information given multiple asset IDs Request: requestType is getAssets assets is one the multiple asset IDs assets is one the multiple asset IDs includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset objects (refer to Get Asset ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Assets example. Get Assets By Issuer Get asset information given multiple creation account IDs in reverse block height of creation order. Request: requestType is getAssetsByIssuer account is one of the multiple account IDs account is one of the multiple account IDs firstIndex is a zero-based index to the first asset to retrieve (optional) lastIndex is a zero-based index to the last asset to retrieve (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset objects (refer to Get Asset ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Assets By Issuer example. Get Expected Asset Deletes Gets asset deletes which are expected to be executed in the next block. Request: requestType is either getExpectedAssetDeletes asset is the asset ID (optional) account is the account ID (optional) firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) timestamp is the earliest deletion (in seconds since the genesis block) to retrieve (optional) includeAssetInfo is true if asset information is to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: deletes (A) is an array of expected asset delete objects with following properties: assetDelete (S) is the transaction ID asset (S) is the asset ID account (S) is the account ID accountRS (S) is the account Reed Solomon address quantityQNT (S) is the number of shares that will be deleted decimals (N) is the number of decimal places used by the asset (if includeAssetInfo is true ) name (S) is the asset name (if includeAssetInfo is true ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Expected Asset Deletes example. Get Order Get a bid/ask order given an order ID. Request: requestType is either getBidOrder or getAskOrder order is the Order ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: account (S) is the account number associated with the order accountRS (S) is the Reed-Solomon address of the account asset (S) is the ID of the asset being ordered quantityQNT (S) is the order quantity (in QNT) priceNQT (S) is the order price (in NQT) height (N) is the block height of the order transaction transactionHeight (N) is the transaction height transactionIndex (N) is a zero-based index giving the order of the transaction in its block order (S) is the ID of the order type (S) is the type of order ( bid or ask ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Order example. Get Ask Order Refer to Get Order . Get Bid Order Refer to Get Order . Get Order Ids Get bid/ask order IDs given an asset ID, in order of decreasing bid price or increasing ask price. Request: requestType is either getBidOrderIds or getAskOrderIds asset is the asset ID firstIndex is a zero-based index to the first order ID to retrieve (optional) lastIndex is a zero-based index to the last order ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: bidOrderIds or askOrderIds (A) is an array of order IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Order Ids example. Get Ask Order Ids Refer to Get Order Ids . Get Bid Order Ids Refer to Get Order Ids . Get Orders Get bid/ask orders given an asset ID, in order of decreasing bid price or increasing ask price (if sortByPrice is true for expected orders, otherwise in the expected order of execution). Request: requestType is one of getBidOrders , getAskOrders , getExpectedBidOrders or getExpectedAskOrders , where expected orders are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block asset is the asset ID sortByPrice is true to sort by price (optional, applies only to expected orders, which are returned in expected order of execution by default) showExpectedCancellations is true to include orders that are expected to be cancelled in the next block, based on the content of the unconfirmed transactions pool and the phased transactions expected to finish in the next block (optional, does not apply to expected orders) firstIndex is a zero-based index to the first order to retrieve (optional, does not apply to expected orders) lastIndex is a zero-based index to the last order to retrieve (optional, does not apply to expected orders) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: bidOrders or askOrders (A) is an array of order objects (refer to Get Order for details) with the following additional field only for an expected order: phased (B) is true if the order is phased, false otherwise lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Orders example. Get Ask Orders Refer to Get Orders . Get Bid Orders Refer to Get Orders . Get Expected Ask Orders Refer to Get Orders . Get Expected Bid Orders Refer to Get Orders . Get Expected Order Cancellations Get all expected order cancellations in the order in which they are expected to be executed. Request: requestType is getExpectedOrderCancellations , where expected cancellations are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: orderCancellations (A) is an array of order cancellation objects with the following fields for each transfer: account (S) is the cancelling account number accountRS (S) is the Reed-Solomon address of the account order (S) is the ID of the order to be cancelled height (N) is the block height of the order cancellation transaction phased (B) is true if the order cancellation transaction is phased lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Expected Order Cancellations example. Get Last Trades Get the last trade of each of multiple assets. Request: requestType is getLastTrades assets is one of multiple asset IDs assets is one of multiple asset IDs requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: trades (A) is an array of trade objects (refer to Get Trades without name and decimals for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Last Trades example. Get Order Trades Get all trades that were executed as a result of a given askOrder and/or bidOrder in reverse block height order. Request: requestType is getOrderTrades askOrder is an ask order ID (optional) bidOrder is a bid order ID (optional if askOrder provided) firstIndex is a zero-based index to the first trade to retrieve (optional) lastIndex is a zero-based index to the last trade to retrieve (optional) includeAssetInfo is true if the decimals and name fields are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Trades . Example: Refer to Get Order Trades example. Get Trades Get trades associated with a given asset and/or account in reverse block height order. Request: requestType is getTrades asset is the asset ID (optional) account is the account ID (optional if asset provided) firstIndex is a zero-based index to the first trade to retrieve (optional) lastIndex is a zero-based index to the last trade to retrieve (optional) timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) includeAssetInfo is true if the decimals and name fields are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: trades (A) is an array of trade objects with the following fields for each trade: seller (S) is the account number of the seller quantityQNT (S) is the quantity (in QNT) of the asset traded bidOrder (S) is the bid order ID sellerRS (S) is the Reed-Solomon address of the seller buyer (S) is the account number of the buyer priceNQT (S) is the trade price (in NQT, the ask price for a buy or the bid price for a sell) askOrder (S) is the ask order ID buyerRS (S) is the Reed-Solomon address of the buyer decimals (N) is the number of decimal places used by the asset name (S) is the name of the asset (if includeAssetInfo is true ) block (S) is the block ID of the trade (if includeAssetInfo is true ) asset (S) is the asset ID askOrderHeight (N) is the block height of the ask order bidOrderHeight (N) is the block height of the bid order tradeType (S) is the trade type ( sell or buy , where buy implies that the bid occurred after the ask, or if in the same block, has a greater order ID) timestamp (N) is the timestamp (in seconds since the genesis block) of the trade block height (N) is the height of the trade block lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Trades example. Issue Asset Create an asset on the exchange. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is issueAsset name is the name of the asset description is a url-encoded description of the asset in UTF-8 with a maximum length of 1000 bytes (optional) quantityQNT is the total amount (in QNT) of the asset in existence decimals is the number of decimal places used by the asset (optional, zero default) Response: Refer to Create Transaction Response . The transaction ID is also the asset ID. Example: Refer to Issue Asset example. Place Order Place an asset order. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is either placeBidOrder or placeAskOrder asset is the asset ID of the asset being ordered quantityQNT is the amount (in QNT) of the asset being ordered priceNQT is the bid/ask price (in NQT) Response: Refer to Create Transaction Response . The transaction ID is also the order ID. Example: Refer to Place Order example. Place Ask Order Refer to Place Order . Place Bid Order Refer to Place Order . Search Assets Get assets having a name or description that match a given query in reverse relevance order. Request: requestType is searchAssets query is a full text query on the asset fields name (S) and description (S) in the standard Lucene syntax firstIndex is a zero-based index to the first asset to retrieve (optional) lastIndex is a zero-based index to the last asset to retrieve (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset objects (refer to Get Asset ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Assets example. Transfer Asset Transfer a quantity of an asset from one account to another. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is transferAsset recipient is the recipient account ID recipientPublicKey is the public key of the recipient account (optional, enhances security of a new account) asset is the ID of the asset being transferred quantityQNT is the amount (in QNT) of the asset being transferred Response: Refer to Create Transaction Response . The transaction ID is also the transfered asset ID. Example: Refer to Transfer Asset example.","title":"Assets"},{"location":"api/assets/#asset-exchange-operations","text":"","title":"Asset Exchange Operations"},{"location":"api/assets/#cancel-order","text":"Cancel an existing asset order. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is either cancelBidOrder or cancelAskOrder order is the order ID of the order being canceled Response: Refer to Create Transaction Response . Example: Refer to Cancel Order example.","title":"Cancel Order"},{"location":"api/assets/#cancel-ask-order","text":"Refer to Cancel Order .","title":"Cancel Ask Order"},{"location":"api/assets/#cancel-bid-order","text":"Refer to Cancel Order .","title":"Cancel Bid Order"},{"location":"api/assets/#delete-asset-shares","text":"Permanently deletes a specified quantity of owned asset shares. Request: Refer to Create Transaction Request for common parameters. requestType is deleteAssetShares asset is the asset ID quantityQNT is the quantity (in QNT) of the asset to be deleted Response: Refer to Create Transaction Response . Example: Refer to Delete Asset Shares example.","title":"Delete Asset Shares"},{"location":"api/assets/#dividend-payment","text":"Pay dividend to all shareholders of an asset. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dividendPayment asset is the asset ID height is the blockchain height at which asset holders shares will be counted (must be less than 1440 blocks in the past) amountNQTPerQNT is dividend amount (in NQT per QNT of the asset) Response: Refer to Create Transaction Response . Example: Refer to Dividend Payment example.","title":"Dividend Payment"},{"location":"api/assets/#get-account-asset-count","text":"Get the number of assets owned by an account given the account ID. Request: requestType is getAccountAssetCount account is the account ID height is the height of the blockchain to determine the asset count (optional, default is last block) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: numberOfAssets (N) is the number of assets owned by the account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Asset Count example.","title":"Get Account Asset Count"},{"location":"api/assets/#get-account-assets","text":"Get the assets owned by a given account in reverse quantity order. Request: requestType is getAccountAssets account is the account ID asset is an asset ID filter (optional) height is the blockchain height at which to retrieve balances (optional, default is the last block in the blockchain) includeAssetInfo is true if asset information is to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: accountAssets (A) is an array of asset objects (unless the asset parameter is specified) with the following fields for each asset: quantityQNT (S) is the quantity (in QNT) of the asset unconfirmedQuantityQNT (S) is the unconfirmed quantity (in QNT) of the asset decimals (N) is the number of decimal places used by the asset (if includeAssetInfo is true ) name (S) is the asset name (if includeAssetInfo is true ) asset (S) is the asset ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Assets example.","title":"Get Account Assets"},{"location":"api/assets/#get-account-current-order-ids","text":"Get current asset order IDs given an account ID in reverse block height order. Request: requestType is either getAccountCurrentBidOrderIds or getAccountCurrentAskOrderIds account is the account ID asset is an asset ID filter (optional) firstIndex is a zero-based index to the first order ID to retrieve (optional) lastIndex is a zero-based index to the last order ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: bidOrderIds or askOrderIds (A) is an array of order IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Current Order Ids example.","title":"Get Account Current Order Ids"},{"location":"api/assets/#get-account-current-ask-order-ids","text":"Refer to Get Account Current Order Ids .","title":"Get Account Current Ask Order Ids"},{"location":"api/assets/#get-account-current-bid-order-ids","text":"Refer to Get Account Current Order Ids .","title":"Get Account Current Bid Order Ids"},{"location":"api/assets/#get-account-current-orders","text":"Get current asset orders given an account ID in reverse block height order. Request: requestType is either getAccountCurrentBidOrders or getAccountCurrentAskOrders account is the account ID asset is an asset ID filter (optional) firstIndex is a zero-based index to the first order to retrieve (optional) lastIndex is a zero-based index to the last order to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: bidOrders or askOrders (A) is an array of order objects (refer to Get Order for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Current Orders example.","title":"Get Account Current Orders"},{"location":"api/assets/#get-account-current-ask-orders","text":"Refer to Get Account Current Orders .","title":"Get Account Current Ask Orders"},{"location":"api/assets/#get-account-current-bid-orders","text":"Refer to Get Account Current Orders .","title":"Get Account Current Bid Orders"},{"location":"api/assets/#get-all-assets","text":"Get all assets in the exchange in reverse block height of creation order. Request: requestType is getAllAssets firstIndex is a zero-based index to the first asset to retrieve (optional) lastIndex is a zero-based index to the last asset to retrieve (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset objects (refer to Get Asset ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Assets example.","title":"Get All Assets"},{"location":"api/assets/#get-all-open-orders","text":"Get all open bid/ask orders in reverse block height order. Request: requestType is either getAllOpenBidOrders or getAllOpenAskOrders firstIndex is a zero-based index to the first order to retrieve (optional) lastIndex is a zero-based index to the last order to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: openOrders (A) is an array of order objects (refer to Get Order for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Open Orders example.","title":"Get All Open Orders"},{"location":"api/assets/#get-all-open-ask-orders","text":"Refer to Get All Open Orders .","title":"Get All Open Ask Orders"},{"location":"api/assets/#get-all-open-bid-orders","text":"Refer to Get All Open Orders .","title":"Get All Open Bid Orders"},{"location":"api/assets/#get-all-trades","text":"Get all trades since a given timestamp in reverse block height order. Request: requestType is getAllTrades timestamp is the timestamp (in seconds since the genesis block) to begin retrieving trades (optional, default 0) firstIndex is a zero-based index to the first trade to retrieve (optional) lastIndex is a zero-based index to the last trade to retrieve (optional) includeAssetInfo is true if asset information is to be included in the result (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If timestamp is omitted or zero, and no index is given, all trades in the entire blockchain will be retrieved, which may timeout or crash your system. Response: trades (A) is an array of trade objects (refer to Get Trades ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Trades example.","title":"Get All Trades"},{"location":"api/assets/#get-asset","text":"Get asset information given an asset ID. Request: requestType is getAsset asset is the asset ID includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: account (S) is the number of the account that issued the asset accountRS (S) is the Reed-Solomon address of the account that issued the asset name (S) is the asset name description (S) is the asset description quantityQNT (S) is the total asset quantity (in QNT) in existence asset (N) is the asset ID decimals (N) is the number of decimal places used by the asset numberOfAccounts (N) is the number of accounts that own the asset numberOfTrades (N) is the number of trades of this asset numberOfTransfers (N) is the number of transfers of this asset lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset example.","title":"Get Asset"},{"location":"api/assets/#get-asset-account-count","text":"Get the number of accounts that own an asset given the asset ID. Request: requestType is getAssetAccountCount asset is the asset ID height is the height of the blockchain to determine the account count (optional, default is last block) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: numberOfAccounts (N) is the number of accounts that own the asset lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset Account Count example.","title":"Get Asset Account Count"},{"location":"api/assets/#get-asset-accounts","text":"Get the accounts that own an asset given the asset ID in reverse quantity order. Request: requestType is getAssetAccounts asset is the asset ID height is the height of the blockchain to determine the accounts (optional, default is last block) firstIndex is a zero-based index to the first account to retrieve (optional) lastIndex is a zero-based index to the last account to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If table trimming is enabled (default), the height must be within 1440 blocks of the last block. Response: accountAssets (A) is an array of asset objects with the following fields for each asset: quantityQNT (S) is the quantity (in QNT) of the asset accountRS (S) is the Reed-Solomon address of the account that owns the asset unconfirmedQuantityQNT (S) is the unconfirmed quantity (in QNT) of the asset asset (S) is the asset ID account (S) is the number of the account that owns the asset lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset Accounts example.","title":"Get Asset Accounts"},{"location":"api/assets/#get-asset-deletes","text":"Get asset deletions for a specific asset or account. Request: requestType is getAssetDeletes asset is the asset ID (optional if account is provided) account is the account ID (optional if asset is provided) firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) timestamp is the earliest deletion (in seconds since the genesis block) to retrieve (optional) includeAssetInfo is true if asset information is to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: deletes (A) is an array of asset delete objects with following properties: quantityQNT (S) is the number of shares that was deleted assetDelete (S) is the transaction ID account (S) is the account ID accountRS (S) is the account Reed Solomon address asset (S) is the asset ID height (N) is the block height of the delete timestamp (N) is the block timestamp of the delete decimals (N) is the number of decimal places used by the asset (if includeAssetInfo is true ) name (S) is the asset name (if includeAssetInfo is true ) Example: Refer to Get Asset Deletes example.","title":"Get Asset Deletes"},{"location":"api/assets/#get-asset-dividends","text":"Get the dividend payment history for a specific asset. Request: requestType is getAssetDividends asset is the asset ID firstIndex is a zero-based index to the first dividend payment to retrieve (optional) lastIndex is a zero-based index to the last dividend payment to retrieve (optional) timestamp is the earliest dividend payment (in seconds since the genesis block) to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: dividends (A) is an array of dividend transactions with the following properties: assetDividend (S) is the dividend payment transaction ID numberOfAccounts (N) is the number of accounts that received a dividend amountNQTPerQNT (S) is the amount of BLX (in NQT) paid per quantity (in QNT) of the asset totalDividend (S) is the total amount of BLX (in NQT) sent in the dividend payment dividendHeight (N) is the block height of the dividend calculation asset (S) is the asset ID height (N) is the block height of the dividend payment timestamp (N) is the block timestamp of the dividend payment Example: Refer to Get Asset Dividends example.","title":"Get Asset Dividends"},{"location":"api/assets/#get-asset-ids","text":"Get the IDs of all assets in the exchange in reverse block height of creation order. Request: requestType is getAssetIds firstIndex is a zero-based index to the first asset ID to retrieve (optional) lastIndex is a zero-based index to the last asset ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset Ids example.","title":"Get Asset Ids"},{"location":"api/assets/#get-asset-transfers","text":"Get transfers associated with a given asset and/or account in reverse block height order (or in the expected order of execution for expected transfers). Request: requestType is either getAssetTransfers or getExpectedAssetTransfers , where expected transfers are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block asset is the asset ID (optional) account is the account ID (optional if asset provided) timestamp is the earliest transfer (in seconds since the genesis block) to retrieve (optional, does not apply to expected transfers) firstIndex is a zero-based index to the first transfer to retrieve (optional, does not apply to expected transfers) lastIndex is a zero-based index to the last transfer to retrieve (optional, does not apply to expected transfers) includeAssetInfo is true if the decimals and name fields are to be included (optional, does not apply to expected transfers) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transfers (A) is an array of transfer objects with the following fields for each transfer: quantityQNT (S) is the quantity (in QNT) of the asset traded senderRS (S) is the Reed-Solomon address of the sender assetTransfer (S) is the transaction ID of the asset transfer sender (S) is the account number of the sender recipientRS (S) is the Reed-Solomon address of the recipient decimals (N) is the number of decimal places used by the asset (if includeAssetInfo is true ) recipient (S) is the account number of the recipient name (S) is the name of the asset (if includeAssetInfo is true ) asset (S) is the asset ID height (N) is the height of the transfer block timestamp (N) is the timestamp (in seconds since the genesis block) of the transfer block, does not apply to an expected transfer phased (B) is true if the transaction is phased, false otherwise, applies only to an expected transfer lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Asset Transfers example.","title":"Get Asset Transfers"},{"location":"api/assets/#get-expected-asset-transfers","text":"Refer to Get Asset Transfers .","title":"Get Expected Asset Transfers"},{"location":"api/assets/#get-assets","text":"Get asset information given multiple asset IDs Request: requestType is getAssets assets is one the multiple asset IDs assets is one the multiple asset IDs includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset objects (refer to Get Asset ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Assets example.","title":"Get Assets"},{"location":"api/assets/#get-assets-by-issuer","text":"Get asset information given multiple creation account IDs in reverse block height of creation order. Request: requestType is getAssetsByIssuer account is one of the multiple account IDs account is one of the multiple account IDs firstIndex is a zero-based index to the first asset to retrieve (optional) lastIndex is a zero-based index to the last asset to retrieve (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset objects (refer to Get Asset ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Assets By Issuer example.","title":"Get Assets By Issuer"},{"location":"api/assets/#get-expected-asset-deletes","text":"Gets asset deletes which are expected to be executed in the next block. Request: requestType is either getExpectedAssetDeletes asset is the asset ID (optional) account is the account ID (optional) firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) timestamp is the earliest deletion (in seconds since the genesis block) to retrieve (optional) includeAssetInfo is true if asset information is to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: deletes (A) is an array of expected asset delete objects with following properties: assetDelete (S) is the transaction ID asset (S) is the asset ID account (S) is the account ID accountRS (S) is the account Reed Solomon address quantityQNT (S) is the number of shares that will be deleted decimals (N) is the number of decimal places used by the asset (if includeAssetInfo is true ) name (S) is the asset name (if includeAssetInfo is true ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Expected Asset Deletes example.","title":"Get Expected Asset Deletes"},{"location":"api/assets/#get-order","text":"Get a bid/ask order given an order ID. Request: requestType is either getBidOrder or getAskOrder order is the Order ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: account (S) is the account number associated with the order accountRS (S) is the Reed-Solomon address of the account asset (S) is the ID of the asset being ordered quantityQNT (S) is the order quantity (in QNT) priceNQT (S) is the order price (in NQT) height (N) is the block height of the order transaction transactionHeight (N) is the transaction height transactionIndex (N) is a zero-based index giving the order of the transaction in its block order (S) is the ID of the order type (S) is the type of order ( bid or ask ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Order example.","title":"Get Order"},{"location":"api/assets/#get-ask-order","text":"Refer to Get Order .","title":"Get Ask Order"},{"location":"api/assets/#get-bid-order","text":"Refer to Get Order .","title":"Get Bid Order"},{"location":"api/assets/#get-order-ids","text":"Get bid/ask order IDs given an asset ID, in order of decreasing bid price or increasing ask price. Request: requestType is either getBidOrderIds or getAskOrderIds asset is the asset ID firstIndex is a zero-based index to the first order ID to retrieve (optional) lastIndex is a zero-based index to the last order ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: bidOrderIds or askOrderIds (A) is an array of order IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Order Ids example.","title":"Get Order Ids"},{"location":"api/assets/#get-ask-order-ids","text":"Refer to Get Order Ids .","title":"Get Ask Order Ids"},{"location":"api/assets/#get-bid-order-ids","text":"Refer to Get Order Ids .","title":"Get Bid Order Ids"},{"location":"api/assets/#get-orders","text":"Get bid/ask orders given an asset ID, in order of decreasing bid price or increasing ask price (if sortByPrice is true for expected orders, otherwise in the expected order of execution). Request: requestType is one of getBidOrders , getAskOrders , getExpectedBidOrders or getExpectedAskOrders , where expected orders are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block asset is the asset ID sortByPrice is true to sort by price (optional, applies only to expected orders, which are returned in expected order of execution by default) showExpectedCancellations is true to include orders that are expected to be cancelled in the next block, based on the content of the unconfirmed transactions pool and the phased transactions expected to finish in the next block (optional, does not apply to expected orders) firstIndex is a zero-based index to the first order to retrieve (optional, does not apply to expected orders) lastIndex is a zero-based index to the last order to retrieve (optional, does not apply to expected orders) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: bidOrders or askOrders (A) is an array of order objects (refer to Get Order for details) with the following additional field only for an expected order: phased (B) is true if the order is phased, false otherwise lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Orders example.","title":"Get Orders"},{"location":"api/assets/#get-ask-orders","text":"Refer to Get Orders .","title":"Get Ask Orders"},{"location":"api/assets/#get-bid-orders","text":"Refer to Get Orders .","title":"Get Bid Orders"},{"location":"api/assets/#get-expected-ask-orders","text":"Refer to Get Orders .","title":"Get Expected Ask Orders"},{"location":"api/assets/#get-expected-bid-orders","text":"Refer to Get Orders .","title":"Get Expected Bid Orders"},{"location":"api/assets/#get-expected-order-cancellations","text":"Get all expected order cancellations in the order in which they are expected to be executed. Request: requestType is getExpectedOrderCancellations , where expected cancellations are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: orderCancellations (A) is an array of order cancellation objects with the following fields for each transfer: account (S) is the cancelling account number accountRS (S) is the Reed-Solomon address of the account order (S) is the ID of the order to be cancelled height (N) is the block height of the order cancellation transaction phased (B) is true if the order cancellation transaction is phased lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Expected Order Cancellations example.","title":"Get Expected Order Cancellations"},{"location":"api/assets/#get-last-trades","text":"Get the last trade of each of multiple assets. Request: requestType is getLastTrades assets is one of multiple asset IDs assets is one of multiple asset IDs requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: trades (A) is an array of trade objects (refer to Get Trades without name and decimals for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Last Trades example.","title":"Get Last Trades"},{"location":"api/assets/#get-order-trades","text":"Get all trades that were executed as a result of a given askOrder and/or bidOrder in reverse block height order. Request: requestType is getOrderTrades askOrder is an ask order ID (optional) bidOrder is a bid order ID (optional if askOrder provided) firstIndex is a zero-based index to the first trade to retrieve (optional) lastIndex is a zero-based index to the last trade to retrieve (optional) includeAssetInfo is true if the decimals and name fields are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Trades . Example: Refer to Get Order Trades example.","title":"Get Order Trades"},{"location":"api/assets/#get-trades","text":"Get trades associated with a given asset and/or account in reverse block height order. Request: requestType is getTrades asset is the asset ID (optional) account is the account ID (optional if asset provided) firstIndex is a zero-based index to the first trade to retrieve (optional) lastIndex is a zero-based index to the last trade to retrieve (optional) timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) includeAssetInfo is true if the decimals and name fields are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: trades (A) is an array of trade objects with the following fields for each trade: seller (S) is the account number of the seller quantityQNT (S) is the quantity (in QNT) of the asset traded bidOrder (S) is the bid order ID sellerRS (S) is the Reed-Solomon address of the seller buyer (S) is the account number of the buyer priceNQT (S) is the trade price (in NQT, the ask price for a buy or the bid price for a sell) askOrder (S) is the ask order ID buyerRS (S) is the Reed-Solomon address of the buyer decimals (N) is the number of decimal places used by the asset name (S) is the name of the asset (if includeAssetInfo is true ) block (S) is the block ID of the trade (if includeAssetInfo is true ) asset (S) is the asset ID askOrderHeight (N) is the block height of the ask order bidOrderHeight (N) is the block height of the bid order tradeType (S) is the trade type ( sell or buy , where buy implies that the bid occurred after the ask, or if in the same block, has a greater order ID) timestamp (N) is the timestamp (in seconds since the genesis block) of the trade block height (N) is the height of the trade block lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Trades example.","title":"Get Trades"},{"location":"api/assets/#issue-asset","text":"Create an asset on the exchange. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is issueAsset name is the name of the asset description is a url-encoded description of the asset in UTF-8 with a maximum length of 1000 bytes (optional) quantityQNT is the total amount (in QNT) of the asset in existence decimals is the number of decimal places used by the asset (optional, zero default) Response: Refer to Create Transaction Response . The transaction ID is also the asset ID. Example: Refer to Issue Asset example.","title":"Issue Asset"},{"location":"api/assets/#place-order","text":"Place an asset order. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is either placeBidOrder or placeAskOrder asset is the asset ID of the asset being ordered quantityQNT is the amount (in QNT) of the asset being ordered priceNQT is the bid/ask price (in NQT) Response: Refer to Create Transaction Response . The transaction ID is also the order ID. Example: Refer to Place Order example.","title":"Place Order"},{"location":"api/assets/#place-ask-order","text":"Refer to Place Order .","title":"Place Ask Order"},{"location":"api/assets/#place-bid-order","text":"Refer to Place Order .","title":"Place Bid Order"},{"location":"api/assets/#search-assets","text":"Get assets having a name or description that match a given query in reverse relevance order. Request: requestType is searchAssets query is a full text query on the asset fields name (S) and description (S) in the standard Lucene syntax firstIndex is a zero-based index to the first asset to retrieve (optional) lastIndex is a zero-based index to the last asset to retrieve (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: assets (A) is an array of asset objects (refer to Get Asset ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Assets example.","title":"Search Assets"},{"location":"api/assets/#transfer-asset","text":"Transfer a quantity of an asset from one account to another. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is transferAsset recipient is the recipient account ID recipientPublicKey is the public key of the recipient account (optional, enhances security of a new account) asset is the ID of the asset being transferred quantityQNT is the amount (in QNT) of the asset being transferred Response: Refer to Create Transaction Response . The transaction ID is also the transfered asset ID. Example: Refer to Transfer Asset example.","title":"Transfer Asset"},{"location":"api/blocks/","text":"Block Operations Get Block Get a block object given a block ID or block height. Request: requestType is getBlock block is the block ID (optional) height is the block height (optional if block provided) timestamp is the timestamp (in seconds since the genesis block) of the block (optional if height provided) includeTransactions is true to include transaction details (optional) includeExecutedPhased is true to include approved and executed phased transactions (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: block overrides height which overrides timestamp . Response: previousBlockHash (S) is the 32-byte hash of the previous block payloadLength (N) is the length (in bytes) of all transactions included in the block totalAmountNQT (S) is the total amount (in NQT) of the transactions in the block generationSignature (S) is the 32-byte generation signature of the generating account generator (S) is the generating account number generatorPublicKey (S) is the 32-byte public key of the generating account baseTarget (S) is the base target for the next block generation payloadHash (S) is the 32-byte hash of the payload (all transactions) generatorRS (S) is the Reed-Solomon address of the generating account nextBlock (S) is the next block ID numberOfTransactions (N) is the number of transactions in the block blockSignature (S) is the 64-byte block signature transactions (A) is an array of transaction IDs or transaction objects (if includeTransactions provided, refer to Get Transaction for details) executedPhasedTransactions (A) is an array of transaction IDs or transaction objects (if includeExecutedPhased provided, refer to Get Transaction for details) version (N) is the block version totalFeeNQT (S) is the total fee (in NQT) of the transactions in the block previousBlock (S) is the previous block ID cumulativeDifficulty (S) is the cumulative difficulty for the next block generation block (S) is the block ID height (N) is the zero-based block height timestamp (N) is the timestamp (in seconds since the genesis block) of the block lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Block example. Get Block Id Get a block ID given a block height. Request: requestType is getBlockId height is the block height requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: block (S) is the block ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Block Id example. Get Blocks Get blocks from the blockchain in reverse block height order. Request: requestType is getBlocks timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) firstIndex is first block to retrieve (optional, default is zero or the last block on the blockchain) lastIndex is the last block to retrieve (optional, default is firstIndex + 99) includeTransactions is true to include transaction details (optional) includeExecutedPhased is true to include approved and executed phased transactions (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: blocks (A) is an array of blocks retrieved (refer to Get Block for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Blocks example. Get EC Block Get Economic Cluster block data. Request: requestType is getECBlock timestamp is the timestamp (in seconds since the genesis block) of the EC block (optional, default (or zero) is the current timestamp) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If timestamp is more than 15 seconds before the timestamp of the last block on the blockchain, errorCode 4 is returned. Response: ecBlockHeight (N) is the EC block height ecBlockId (S) is the EC block ID timestamp (N) is the timestamp (in seconds since the genesis block) of the EC block lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get EC Block example.","title":"Blocks"},{"location":"api/blocks/#block-operations","text":"","title":"Block Operations"},{"location":"api/blocks/#get-block","text":"Get a block object given a block ID or block height. Request: requestType is getBlock block is the block ID (optional) height is the block height (optional if block provided) timestamp is the timestamp (in seconds since the genesis block) of the block (optional if height provided) includeTransactions is true to include transaction details (optional) includeExecutedPhased is true to include approved and executed phased transactions (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: block overrides height which overrides timestamp . Response: previousBlockHash (S) is the 32-byte hash of the previous block payloadLength (N) is the length (in bytes) of all transactions included in the block totalAmountNQT (S) is the total amount (in NQT) of the transactions in the block generationSignature (S) is the 32-byte generation signature of the generating account generator (S) is the generating account number generatorPublicKey (S) is the 32-byte public key of the generating account baseTarget (S) is the base target for the next block generation payloadHash (S) is the 32-byte hash of the payload (all transactions) generatorRS (S) is the Reed-Solomon address of the generating account nextBlock (S) is the next block ID numberOfTransactions (N) is the number of transactions in the block blockSignature (S) is the 64-byte block signature transactions (A) is an array of transaction IDs or transaction objects (if includeTransactions provided, refer to Get Transaction for details) executedPhasedTransactions (A) is an array of transaction IDs or transaction objects (if includeExecutedPhased provided, refer to Get Transaction for details) version (N) is the block version totalFeeNQT (S) is the total fee (in NQT) of the transactions in the block previousBlock (S) is the previous block ID cumulativeDifficulty (S) is the cumulative difficulty for the next block generation block (S) is the block ID height (N) is the zero-based block height timestamp (N) is the timestamp (in seconds since the genesis block) of the block lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Block example.","title":"Get Block"},{"location":"api/blocks/#get-block-id","text":"Get a block ID given a block height. Request: requestType is getBlockId height is the block height requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: block (S) is the block ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Block Id example.","title":"Get Block Id"},{"location":"api/blocks/#get-blocks","text":"Get blocks from the blockchain in reverse block height order. Request: requestType is getBlocks timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) firstIndex is first block to retrieve (optional, default is zero or the last block on the blockchain) lastIndex is the last block to retrieve (optional, default is firstIndex + 99) includeTransactions is true to include transaction details (optional) includeExecutedPhased is true to include approved and executed phased transactions (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: blocks (A) is an array of blocks retrieved (refer to Get Block for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Blocks example.","title":"Get Blocks"},{"location":"api/blocks/#get-ec-block","text":"Get Economic Cluster block data. Request: requestType is getECBlock timestamp is the timestamp (in seconds since the genesis block) of the EC block (optional, default (or zero) is the current timestamp) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If timestamp is more than 15 seconds before the timestamp of the last block on the blockchain, errorCode 4 is returned. Response: ecBlockHeight (N) is the EC block height ecBlockId (S) is the EC block ID timestamp (N) is the timestamp (in seconds since the genesis block) of the EC block lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get EC Block example.","title":"Get EC Block"},{"location":"api/debug/","text":"Debug Operations All debug utilities require an adminPassword request parameter. See Admin Password for more info. Clear Unconfirmed Transactions Empties the unconfirmed transaction pool. POST only. Request: requestType is clearUnconfirmedTransactions Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Clear Unconfirmed Transactions example. Dump Peers Get all active peers, optionally of a certain version or a minimum weight. Request: requestType is dumpPeers version is a version filter such as 1.5.11 (optional) weight is a minimum weight filter such as 1000 (optional) connect is true to force a connection attempt to each known peer first (optional); password protected like the Debug Operations if true Response: peers (S) is a string of peer IP addresses or DNS names, separated by semicolons count (N) is the number of peers in the peers string. requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Dump Peers example. Full Reset Deletes the entire blockchain. POST only. Request: requestType is fullReset Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Note: After successful completion of the reset, a new blockchain will automatically begin downloading. Example: Refer to Full Reset example. Get All Broadcasted Transactions Get unconfirmed transactions broadcasted from this node but not yet received back from a peer, if transaction rebroadcasting is enabled. Request: requestType is -getAllBroadcastedTransactions_ requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of broadcasted unconfirmed transactions not yet received back from a peer (S) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Broadcasted Transactions example. Get All Waiting Transactions Get unconfirmed transactions temporarily kept in memory during transaction processing. Request: requestType is getAllWaitingTransactions requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of unconfirmed transactions temporarily kept in memory (S) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Waiting Transactions example. Get Log Get up to 100 of the most recent log messages from a memory buffer. Request: requestType is getLog count is the number of messages to return (optional, default 100) Response: messages (A) is an array of log messages (S) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Log example. Get Stack Traces Get the stack traces of the currently running threads in reverse id order. Request: requestType is getStackTraces depth is the maximum trace depth to retrieve (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) -locks_ (A) is an array of lock objects threads (A) is an array of thread objects with the following fields: trace (A) is an array of traces (S) name (S) is the thread name id (N) is the thread ID state (S) is the thread state, one of WAITING , -tIMED_WAITING_ and -rUNNABLE_ -locks_ (A) is an array of lock objects with the following fields, if not empty: trace (S) depth (N) name (S) hash (N) Example: Refer to Get Stack Traces example. Lucene Reindex Forces a rebuild of the Lucene search index. POST only. Request: requestType is -luceneReindex_ Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Lucene Reindex example. Pop Off Removes specified number of blocks (and associated transactions) from the top of the blockchain. POST only. Request: requestType is popOff numBlocks is the number of blocks to pop off the blockchain (optional) height is the new height of the blockchain after popping (optional if numBlocks provided) Note: If table trimming is enabled (default), at most 1440 blocks can be popped off without triggering a full rescan. Response: blocks (A) is an array of the blocks popped off (refer to Get Block for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Pop Off example. Rebroadcast Unconfirmed Transactions Rebroadcast transactions in the unconfirmed pool to peers, until received back or found in the blockchain. Rebroadcasting can be disabled by setting the nxt.enableTransactionRebroadcasting property to false . POST only. Request: requestType is -rebroadcastUnconfirmedTransactions_ Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Rebroadcast Unconfirmed Transactions example. Requeue Unconfirmed Transactions Requeue unconfirmed transactions. POST only. Request: requestType is requeueUnconfirmedTransactions Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Requeue Unconfirmed Transactions example. Retrieve Pruned Data Initiates a task of requesting and restoring missing prunable data. POST only. Request: requestType is retrievePrunedData Response: done (B) is true if the operation completed successfully numberOfPrunedData (N) is the number of pruned data available pruned data transactions requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Retrieve Pruned Data example. Scan Scans the top of the blockchain. POST only. Request: requestType is scan numBlocks is the number of blocks to scan at the top of the blockchain (optional) height is the height above which blockchain is to be scanned (optional if numBlocks provided) validate is true if signatures are to be re-verified and blocks and transactions re-validated (optional) Note: The derived object tables are rolled back and rebuilt by rescanning the existing blockchain. A request to rescan more than 1440 blocks when table trimming is enabled will do a full rescan starting from height 0. Rescan status is saved in the database, so that if a rescan is interrupted or fails it will resume on restart. Response: scanTime (N) is the scan time done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Scan example. Set Logging Sets the log level and optionally specifies communication events to be logged, without restarting the server. POST only. Request: requestType is setLogging -logLevel_ is one of -eRROR_, WARN , -iNFO_ or -dEBUG_ with each level in the list including all of the previous levels (optional, default is -iNFO_) communicationEvent is one of multiple communication (HTTP) events to be logged, from the list: -eXCEPTION_, HTTP-eRROR , HTTP-OK (optional) communicationEvent is one of multiple communication events (optional) \u22ee Note: The initial log level is set by the nxt.level logging property, currently -fINE_ (equivalent to -dEBUG_). Response: -loggingUpdated_ (B) is true if the operation completed successfully Example: Refer to Set Logging example. Shutdown Shutdown the server. POST only. Request: requestType is shutdown scan is true to truncate the derived tables and schedule a full rescan with validation on the next start (optional) Response: shutdown (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Shutdown example. Trim Derived Tables Trigger a derived tables trim, and a prunable tables pruning. POST only. Request: requestType is trimDerivedTables Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Trim Derived Tables example.","title":"Debug"},{"location":"api/debug/#debug-operations","text":"All debug utilities require an adminPassword request parameter. See Admin Password for more info.","title":"Debug Operations"},{"location":"api/debug/#clear-unconfirmed-transactions","text":"Empties the unconfirmed transaction pool. POST only. Request: requestType is clearUnconfirmedTransactions Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Clear Unconfirmed Transactions example.","title":"Clear Unconfirmed Transactions"},{"location":"api/debug/#dump-peers","text":"Get all active peers, optionally of a certain version or a minimum weight. Request: requestType is dumpPeers version is a version filter such as 1.5.11 (optional) weight is a minimum weight filter such as 1000 (optional) connect is true to force a connection attempt to each known peer first (optional); password protected like the Debug Operations if true Response: peers (S) is a string of peer IP addresses or DNS names, separated by semicolons count (N) is the number of peers in the peers string. requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Dump Peers example.","title":"Dump Peers"},{"location":"api/debug/#full-reset","text":"Deletes the entire blockchain. POST only. Request: requestType is fullReset Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Note: After successful completion of the reset, a new blockchain will automatically begin downloading. Example: Refer to Full Reset example.","title":"Full Reset"},{"location":"api/debug/#get-all-broadcasted-transactions","text":"Get unconfirmed transactions broadcasted from this node but not yet received back from a peer, if transaction rebroadcasting is enabled. Request: requestType is -getAllBroadcastedTransactions_ requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of broadcasted unconfirmed transactions not yet received back from a peer (S) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Broadcasted Transactions example.","title":"Get All Broadcasted Transactions"},{"location":"api/debug/#get-all-waiting-transactions","text":"Get unconfirmed transactions temporarily kept in memory during transaction processing. Request: requestType is getAllWaitingTransactions requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of unconfirmed transactions temporarily kept in memory (S) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Waiting Transactions example.","title":"Get All Waiting Transactions"},{"location":"api/debug/#get-log","text":"Get up to 100 of the most recent log messages from a memory buffer. Request: requestType is getLog count is the number of messages to return (optional, default 100) Response: messages (A) is an array of log messages (S) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Log example.","title":"Get Log"},{"location":"api/debug/#get-stack-traces","text":"Get the stack traces of the currently running threads in reverse id order. Request: requestType is getStackTraces depth is the maximum trace depth to retrieve (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) -locks_ (A) is an array of lock objects threads (A) is an array of thread objects with the following fields: trace (A) is an array of traces (S) name (S) is the thread name id (N) is the thread ID state (S) is the thread state, one of WAITING , -tIMED_WAITING_ and -rUNNABLE_ -locks_ (A) is an array of lock objects with the following fields, if not empty: trace (S) depth (N) name (S) hash (N) Example: Refer to Get Stack Traces example.","title":"Get Stack Traces"},{"location":"api/debug/#lucene-reindex","text":"Forces a rebuild of the Lucene search index. POST only. Request: requestType is -luceneReindex_ Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Lucene Reindex example.","title":"Lucene Reindex"},{"location":"api/debug/#pop-off","text":"Removes specified number of blocks (and associated transactions) from the top of the blockchain. POST only. Request: requestType is popOff numBlocks is the number of blocks to pop off the blockchain (optional) height is the new height of the blockchain after popping (optional if numBlocks provided) Note: If table trimming is enabled (default), at most 1440 blocks can be popped off without triggering a full rescan. Response: blocks (A) is an array of the blocks popped off (refer to Get Block for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Pop Off example.","title":"Pop Off"},{"location":"api/debug/#rebroadcast-unconfirmed-transactions","text":"Rebroadcast transactions in the unconfirmed pool to peers, until received back or found in the blockchain. Rebroadcasting can be disabled by setting the nxt.enableTransactionRebroadcasting property to false . POST only. Request: requestType is -rebroadcastUnconfirmedTransactions_ Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Rebroadcast Unconfirmed Transactions example.","title":"Rebroadcast Unconfirmed Transactions"},{"location":"api/debug/#requeue-unconfirmed-transactions","text":"Requeue unconfirmed transactions. POST only. Request: requestType is requeueUnconfirmedTransactions Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Requeue Unconfirmed Transactions example.","title":"Requeue Unconfirmed Transactions"},{"location":"api/debug/#retrieve-pruned-data","text":"Initiates a task of requesting and restoring missing prunable data. POST only. Request: requestType is retrievePrunedData Response: done (B) is true if the operation completed successfully numberOfPrunedData (N) is the number of pruned data available pruned data transactions requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Retrieve Pruned Data example.","title":"Retrieve Pruned Data"},{"location":"api/debug/#scan","text":"Scans the top of the blockchain. POST only. Request: requestType is scan numBlocks is the number of blocks to scan at the top of the blockchain (optional) height is the height above which blockchain is to be scanned (optional if numBlocks provided) validate is true if signatures are to be re-verified and blocks and transactions re-validated (optional) Note: The derived object tables are rolled back and rebuilt by rescanning the existing blockchain. A request to rescan more than 1440 blocks when table trimming is enabled will do a full rescan starting from height 0. Rescan status is saved in the database, so that if a rescan is interrupted or fails it will resume on restart. Response: scanTime (N) is the scan time done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Scan example.","title":"Scan"},{"location":"api/debug/#set-logging","text":"Sets the log level and optionally specifies communication events to be logged, without restarting the server. POST only. Request: requestType is setLogging -logLevel_ is one of -eRROR_, WARN , -iNFO_ or -dEBUG_ with each level in the list including all of the previous levels (optional, default is -iNFO_) communicationEvent is one of multiple communication (HTTP) events to be logged, from the list: -eXCEPTION_, HTTP-eRROR , HTTP-OK (optional) communicationEvent is one of multiple communication events (optional) \u22ee Note: The initial log level is set by the nxt.level logging property, currently -fINE_ (equivalent to -dEBUG_). Response: -loggingUpdated_ (B) is true if the operation completed successfully Example: Refer to Set Logging example.","title":"Set Logging"},{"location":"api/debug/#shutdown","text":"Shutdown the server. POST only. Request: requestType is shutdown scan is true to truncate the derived tables and schedule a full rescan with validation on the next start (optional) Response: shutdown (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Shutdown example.","title":"Shutdown"},{"location":"api/debug/#trim-derived-tables","text":"Trigger a derived tables trim, and a prunable tables pruning. POST only. Request: requestType is trimDerivedTables Response: done (B) is true if the operation completed successfully requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Trim Derived Tables example.","title":"Trim Derived Tables"},{"location":"api/forging/","text":"Forging Operations Start / Stop / Get Forging Start or stop forging with an account, or check to see if an account is forging. POST only. Request: requestType is either startForging , stopForging or getForging secretPhrase is the secret passphrase of the account (optional for stopForging and getForging if password protected like the Debug Operations ) Response: deadline (N) is the estimated time (in seconds since the last block) until the account will forge a block ( startForging and getForging only) hitTime (N) is the estimated time (in seconds since the genesis block) when the account will forge a block ( startForging and getForging only) remaining (N) is the deadline less the elapsed time since the last block ( getForging only) foundAndStopped (B) is true if forging was stopped, false if forging was already stopped ( stopForging only) account (S) is the account number ( getForging only) accountRS (S) is the Reed-Solomon address of the account ( getForging only) requestProcessingTime (N) is the API request processing time (in millisec) Note: A getForging request returns errorCode 5 if the account is not forging. If the account has a zero effectiveBalance , forging can be started but deadline , remainingTime and hitTime will be set to zero. Example: Refer to Start / Stop / Get Forging example. Get Forging Refer to Start / Stop / Get Forging . Start Forging Refer to Start / Stop / Get Forging . Stop Forging Refer to Start / Stop / Get Forging . Lease Balance Lease the entire guaranteed balance of Blue0x to another account, after 1440 confirmations. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is leaseBalance period is the lease period (in number of blocks, 1440 minimum) recipient is the lessee (recipient) account recipientPublicKey is the public key of the lessee (recipient) account (optional, enhances security of a new account) Response: Refer to Create Transaction Response . Example: Refer to Lease Balance example. Get Next Block Generators Returns the next block generators ordered by hit time. The list of currently active forgers is first initialized using the block generators with at least 2 blocks generated within the previous 10,000 blocks, excluding accounts without a public key. The list is updated as new blocks are processed. The results are not 100% correct since previously active generators may no longer be running and new generators won't be known until they generate a block. Request: requestType is getNextBlockGenerators -limit_ (N) is the number of next block generators to display. Response: activeCount (N) is the number of active forging accounts lastBlock (S) is the last block ID on the blockchain generators (A) is an array containing the number of next block generators requested effectiveBalanceNXT (N) is the balance (in BLX) of the account available for forging: the unleased guaranteedBalance of this account plus the leased guaranteedBalance of all lessors to this account accountRS (S) is the Reed-Solomon address of the account deadline (N) is the estimated time (in seconds since the last block) until the account will forge a block account (S) is the account number hitTime (N) is the estimated time (in seconds since the genesis block) when the account will forge a block requestProcessingTime (N) is the API request processing time (in millisec) timestamp (N) is the timestamp (in seconds since the genesis block) when the request was executed height (N) is the height of the blockchain Example: Refer to Get Next Block Generators example.","title":"Forging"},{"location":"api/forging/#forging-operations","text":"","title":"Forging Operations"},{"location":"api/forging/#start-stop-get-forging","text":"Start or stop forging with an account, or check to see if an account is forging. POST only. Request: requestType is either startForging , stopForging or getForging secretPhrase is the secret passphrase of the account (optional for stopForging and getForging if password protected like the Debug Operations ) Response: deadline (N) is the estimated time (in seconds since the last block) until the account will forge a block ( startForging and getForging only) hitTime (N) is the estimated time (in seconds since the genesis block) when the account will forge a block ( startForging and getForging only) remaining (N) is the deadline less the elapsed time since the last block ( getForging only) foundAndStopped (B) is true if forging was stopped, false if forging was already stopped ( stopForging only) account (S) is the account number ( getForging only) accountRS (S) is the Reed-Solomon address of the account ( getForging only) requestProcessingTime (N) is the API request processing time (in millisec) Note: A getForging request returns errorCode 5 if the account is not forging. If the account has a zero effectiveBalance , forging can be started but deadline , remainingTime and hitTime will be set to zero. Example: Refer to Start / Stop / Get Forging example.","title":"Start / Stop / Get Forging"},{"location":"api/forging/#get-forging","text":"Refer to Start / Stop / Get Forging .","title":"Get Forging"},{"location":"api/forging/#start-forging","text":"Refer to Start / Stop / Get Forging .","title":"Start Forging"},{"location":"api/forging/#stop-forging","text":"Refer to Start / Stop / Get Forging .","title":"Stop Forging"},{"location":"api/forging/#lease-balance","text":"Lease the entire guaranteed balance of Blue0x to another account, after 1440 confirmations. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is leaseBalance period is the lease period (in number of blocks, 1440 minimum) recipient is the lessee (recipient) account recipientPublicKey is the public key of the lessee (recipient) account (optional, enhances security of a new account) Response: Refer to Create Transaction Response . Example: Refer to Lease Balance example.","title":"Lease Balance"},{"location":"api/forging/#get-next-block-generators","text":"Returns the next block generators ordered by hit time. The list of currently active forgers is first initialized using the block generators with at least 2 blocks generated within the previous 10,000 blocks, excluding accounts without a public key. The list is updated as new blocks are processed. The results are not 100% correct since previously active generators may no longer be running and new generators won't be known until they generate a block. Request: requestType is getNextBlockGenerators -limit_ (N) is the number of next block generators to display. Response: activeCount (N) is the number of active forging accounts lastBlock (S) is the last block ID on the blockchain generators (A) is an array containing the number of next block generators requested effectiveBalanceNXT (N) is the balance (in BLX) of the account available for forging: the unleased guaranteedBalance of this account plus the leased guaranteedBalance of all lessors to this account accountRS (S) is the Reed-Solomon address of the account deadline (N) is the estimated time (in seconds since the last block) until the account will forge a block account (S) is the account number hitTime (N) is the estimated time (in seconds since the genesis block) when the account will forge a block requestProcessingTime (N) is the API request processing time (in millisec) timestamp (N) is the timestamp (in seconds since the genesis block) when the request was executed height (N) is the height of the blockchain Example: Refer to Get Next Block Generators example.","title":"Get Next Block Generators"},{"location":"api/hallmark/","text":"Hallmark Operations Decode Hallmark Decode a node hallmark. Request: requestType is decodeHallmark hallmark is the hallmark value Response: valid (B) is true if host is less than 100 characters, weight > 0 and the embedded signature is verified weight (N) is the weight assigned to the hallmark host (S) is the IP address or domain name associated with the hallmark account (S) is the account number associated with the hallmark accountRS (S) is the Reed-Solomon address of the account date (S) is the date the hallmark was created, in YYYY-MM-DD format requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Decode Hallmark example. Mark Host Generates a node hallmark. POST only. Request: requestType is markHost secretPhrase is the secret passphrase for the account that will be hallmarked on the node host is the IP address or domain name of the node weight is the weight to assign to the node date is the current date in YYYY-MM-DD format Note: Refer to Create Hallmark for details. Response: hallmark (S) is the hallmark hex string requestProcessingTime (N) is the API request processing time (in millisec) Note: Refer to Create Hallmark for instructions for applying the hallmark to a public node. Example: Refer to Mark Host example. Generate Hallmark Refer to Mark Host .","title":"Hallmark"},{"location":"api/hallmark/#hallmark-operations","text":"","title":"Hallmark Operations"},{"location":"api/hallmark/#decode-hallmark","text":"Decode a node hallmark. Request: requestType is decodeHallmark hallmark is the hallmark value Response: valid (B) is true if host is less than 100 characters, weight > 0 and the embedded signature is verified weight (N) is the weight assigned to the hallmark host (S) is the IP address or domain name associated with the hallmark account (S) is the account number associated with the hallmark accountRS (S) is the Reed-Solomon address of the account date (S) is the date the hallmark was created, in YYYY-MM-DD format requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Decode Hallmark example.","title":"Decode Hallmark"},{"location":"api/hallmark/#mark-host","text":"Generates a node hallmark. POST only. Request: requestType is markHost secretPhrase is the secret passphrase for the account that will be hallmarked on the node host is the IP address or domain name of the node weight is the weight to assign to the node date is the current date in YYYY-MM-DD format Note: Refer to Create Hallmark for details. Response: hallmark (S) is the hallmark hex string requestProcessingTime (N) is the API request processing time (in millisec) Note: Refer to Create Hallmark for instructions for applying the hallmark to a public node. Example: Refer to Mark Host example.","title":"Mark Host"},{"location":"api/hallmark/#generate-hallmark","text":"Refer to Mark Host .","title":"Generate Hallmark"},{"location":"api/marketplace/","text":"Digital Goods Store Operations In the BLX client interface, the Digital Goods Store (DGS) is referred to as the 'Marketplace'. DGS Delisting Delist a listed product. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsDelisting goods is the goods ID Response: Refer to Create Transaction Response . Example: Refer to DGS Delisting example. DGS Delivery Deliver a product. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsDelivery purchase is the purchase order ID discountNQT is a discount (in NQT) off the selling price (optional, default is zero) goodsToEncrypt is the product, a text or a hex string to be encrypted (optional if goodsData provided) goodsIsText is false if goodsToEncrypt is a hex string (optional) goodsData is AES-encrypted (using Encrypt To ) goodsToEncrypt , up to 1000 bytes long (required only if secretPhrase is omitted) goodsNonce is the unique nonce associated with the encrypted data (required only if secretPhrase is omitted) Note: If the encrypted goods data is longer than 1000 bytes, use a prunable encrypted message to deliver the goods. Response: Refer to Create Transaction Response . Example: Refer to DGS Delivery example. DGS Feedback Give feedback about a purchased product after delivery. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsFeedback purchase is the purchase order ID message is unencrypted (public) feedback text up to 1000 bytes Note : The unencrypted message parameter is used for public feedback. Response: Refer to Create Transaction Response . Example: Refer to DGS Feedback example. DGS Listing List a product in the DGS by creating a listing transaction. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsListing name is the name of the product up to 100 characters in length description is a description of the product up to 1000 characters in length tags are up to three comma separated keywords describing the product up to 100 characters in length (optional) quantity is the quantity of the product for sale priceNQT is the price (in NQT) of the product Response: Refer to Create Transaction Response . The transaction ID is also the goods ID. Example: Refer to DGS Listing example. DGS Price Change Change the price of a listed product. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsPriceChange goods is the goods ID of the product priceNQT is the new price of the product Response: Refer to Create Transaction Response . Example: Refer to DGS Price Change example. DGS Purchase Purchase a product for sale. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsPurchase goods is the goods ID of the product priceNQT is the price of the product quantity is the quantity to be purchased deliveryDeadlineTimestamp is the timestamp (in seconds since the genesis block) by which delivery of the product must occur Response: Refer to Create Transaction Response . The transaction ID is also the purchase order ID. Example: Refer to DGS Purchase example. DGS Quantity Change Change the quantity of a listed product. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsQuantityChange goods is the goods ID of the product deltaQuantity is the change in the quantity of the product for sale (use negative numbers for a decrease in quantity) Response: Refer to Create Transaction Response . Example: Refer to DGS Quantity Change example. DGS Refund Refund a purchase. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsRefund purchase is the purchase order ID refundNQT is the amount (in NQT) of the refund Response: Refer to Create Transaction Response . Example: Refer to DGS Refund example. Get DGS Expired Purchases Get purchase orders which have expired without being delivered, given a seller ID, in reverse chronological order. Request: requestType is getDGSExpiredPurchases seller is the account ID of the product seller firstIndex is a zero-based index to the first purchase order to retrieve (optional) lastIndex is a zero-based index to the last purchase order to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: purchases (A) is an array of purchase orders (refer to Get DGS Purchase for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Expired Purchases example. Get DGS Good Get a DGS product given a goods ID. Request: requestType is getDGSGood goods is the goods ID of the product includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: seller (S) is the seller's account ID quantity (N) is the quantity of the product remaining for sale goods (S) is the ID of the product description (S) is the description of the product sellerRS (S) is the Reed-Solomon address of the seller's account requestProcessingTime (N) is the API request processing time (in millisec) delisted (B) is true if the product has been delisted, false otherwise parsedTags (A) is an array of up to three tag strings, parsed from the tags field tags (S) is the comma separated list of tags provided by the seller when the listing was created priceNQT (S) is the current price of the product numberOfPublicFeedbacks (N) is the number of public feedbacks given for the product name (S) is the name of the product numberOfPurchases (N) is the number of purchases of the product timestamp (N) is the timestamp (in seconds since the genesis block) of the creation of the product listing lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) Example: Refer to Get DGS Good example. Get DGS Goods Get DGS products for sale in reverse chronological listing creation order unless a seller is given, then in product name order. Request: requestType is getDGSGoods seller is the account ID of the product seller (optional) firstIndex is a zero-based index to the first product to retrieve (optional) lastIndex is a zero-based index to the last product to retrieve (optional) inStockOnly is false if out-of-stock products (zero quantity) are to be retrieved (optional) hideDelisted is true if delisted products are to be omitted (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If none of the optional parameters are specified, all in-stock products in the blockchain are retrieved at once, which may take a long time. Response: goods (A) is an array of goods (refer to Get DGS Good for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Goods example. Get DGS Goods Count Get the number of products for sale by a given seller or all sellers. Request: requestType is getDGSGoodsCount seller is the account ID of the seller (optional, default is all sellers combined) inStockOnly is false if out-of-stock (zero quantity) products are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfGoods (N) is the number of goods for sale by the seller lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: The numberOfGoods field refers to the number of distinct products for sale, regardless of the quantity of each. Example: Refer to Get DGS Goods Count example. Get DGS Goods Purchase Count Get the number of completed purchase orders given a goods ID. Request: requestType is getDGSGoodsPurchaseCount goods is the goods ID withPublicFeedbacksOnly is true if purchase orders without public feedback are to be omitted (optional) completed is true if only completed purchase orders are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfPurchases (N) is the number of completed purchase orders lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Goods Purchase Count example. Get DGS Goods Purchases Get completed purchase orders given a goods ID and optionally a buyer ID in reverse chronological order. Request: requestType is getDGSGoodsPurchases goods is the goods ID buyer is a buyer ID (optional) firstIndex is a zero-based index to the first purchase order to retrieve (optional) lastIndex is a zero-based index to the last purchase order to retrieve (optional) withPublicFeedbacksOnly is true if purchase orders without public feedback are to be omitted (optional) completed is true if only completed purchase orders are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: purchases (A) is an array of purchase orders (refer to Get DGS Purchase for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Goods Purchases example. Get DGS Pending Purchases Get pending purchase orders given a seller ID in reverse chronological order. Request: requestType is getDGSPendingPurchases seller is the account ID of the seller firstIndex is a zero-based index to the first purchase order to retrieve (optional) lastIndex is a zero-based index to the last purchase order to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: purchases (A) is an array of pending purchase orders (refer to Get DGS Purchase for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Pending Purchases example. Get DGS Purchase Get a purchase order given a purchase order ID. Request: requestType is getDGSPurchase purchase is the purchase order ID sharedKey is the shared key used to decrypt the message (optional) (see Get Shared Key ) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: seller (S) is the account number of the seller quantity (N) is the quantity of the product to be purchased feedbackNotes (A) is an array of AES-encrypted objects, each with data (S) and nonce (S) fields, in reverse chronological order, if applicable publicFeedbacks (A) is an array of feedback strings in reverse chronological order if applicable pending (B) is true if the deliveryDeadline has not passed, false otherwise purchase (S) is the purchase order ID goods (S) is the ID of the product sellerRS (S) is the Reed-Solomon address of the seller buyer (S) is the account number of the buyer priceNQT (S) is the price (in NQT) of the product deliveryDeadlineTimestamp (N) is the timestamp (in seconds since the genesis block) by which the product must be delivered goodsIsText (B) is false if the message is a hex string, otherwise the message is text (optional) buyerRS (S) is the Reed-Solomon address of the buyer refundNQT (S) is the amount (in NQT) refunded, if applicable name (S) is the name of the product goodsData (O) is an object with the two fields data (S) (the encrypted product hex string) and nonce (S), if the product has been delivered timestamp (N) is the timestamp (in seconds since the genesis block) of the purchase order lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Purchase example. Get DGS Purchase Count Get the number of purchase orders given a seller and/or buyer ID, or all orders combined. Request: requestType is getDGSPurchaseCount seller is the account ID of the seller (optional, default is all sellers) buyer is the account ID of the buyer (optional, default is all buyers) withPublicFeedbacksOnly is true if purchase orders without public feedback are to be omitted (optional) completed is true if only completed purchase orders are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfPurchases (N) is the number of purchase orders associated with the seller and/or buyer lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Purchase Count example. Get DGS Purchases Get purchase orders given a seller and/or buyer ID in reverse chronological order. Request: requestType is getDGSPurchases seller is the account ID of the seller (optional) buyer is the account ID of the buyer (optional if seller provided) firstIndex is a zero-based index to the purchase order to retrieve (optional) lastIndex is a zero-based index to the purchase order to retrieve (optional) withPublicFeedbacksOnly is true if purchase orders without public feedback are to be omitted (optional) completed is true if only completed purchase orders are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: purchases (A) is an array of purchase orders (refer to Get DGS Purchase for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Purchases example. Get DGS Tag Count Get the number of tags used by all sellers. Request: requestType is getDGSTagCount inStockOnly is false if tags with no associated in-stock products are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfTags (N) is the number of tags lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Tag Count example. Get DGS Tags Get tags used by all sellers in reverse inStockCount , reverse totalCount , tag order. Request: requestType is getDGSTags inStockOnly is false if out-of-stock tags are to be retrieved (optional) firstIndex is a zero-based index to the first tag to retrieve (optional) lastIndex is a zero-based index to the last tag to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: tags (A) is an array of tag objects with the following fields for each tag: inStockCount (N) is the number of products available for sale as tagged tag (S) is the tag word totalCount (N) is the total number of products as tagged lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: The ...Count fields refer to the number of distinct products tagged, regardless of the quantity of each. Example: Refer to Get DGS Tags example. Get DGS Tags Like Get all tags starting with a given prefix (at least 2 characters long) in reverse inStockCount , reverse totalCount , tag order. Request: requestType is getDGSTagsLike tagPrefix is the prefix (at least 2 characters long) of the tag inStockOnly is false if out-of-stock tags are to be retrieved (optional) firstIndex is a zero-based index to the first tag to retrieve (optional) lastIndex is a zero-based index to the last tag to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: tags (A) is an array of tag objects with the following fields for each tag: inStockCount (N) is the number of products available for sale as tagged tag (S) is the tag word totalCount (N) is the total number of products as tagged lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: The ...Count fields refer to the number of distinct products tagged, regardless of the quantity of each. Example: Refer to Get DGS Tags Like example. Search DGS Goods Get product listings that have a name or description that match a given query in reverse relevance order, then name order (given a seller), then reverse chronological order. Request: requestType is searchDGSGoods query is a full text query on the goods fields name and description in the standard Lucene syntax (optional) tag is a query on the good field tags in the standard Lucene syntax (optional) seller is the account ID of the product seller (optional) firstIndex is a zero-based index to the first product to retrieve (optional) lastIndex is a zero-based index to the last product to retrieve (optional) inStockOnly is false if out-of-stock products (zero quantity) are to be retrieved (optional) hideDelisted is true if delisted products are to be omitted (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: goods (A) is an array of goods objects (refer to Get DGS Good for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search DGS Goods example.","title":"Marketplace"},{"location":"api/marketplace/#digital-goods-store-operations","text":"In the BLX client interface, the Digital Goods Store (DGS) is referred to as the 'Marketplace'.","title":"Digital Goods Store Operations"},{"location":"api/marketplace/#dgs-delisting","text":"Delist a listed product. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsDelisting goods is the goods ID Response: Refer to Create Transaction Response . Example: Refer to DGS Delisting example.","title":"DGS Delisting"},{"location":"api/marketplace/#dgs-delivery","text":"Deliver a product. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsDelivery purchase is the purchase order ID discountNQT is a discount (in NQT) off the selling price (optional, default is zero) goodsToEncrypt is the product, a text or a hex string to be encrypted (optional if goodsData provided) goodsIsText is false if goodsToEncrypt is a hex string (optional) goodsData is AES-encrypted (using Encrypt To ) goodsToEncrypt , up to 1000 bytes long (required only if secretPhrase is omitted) goodsNonce is the unique nonce associated with the encrypted data (required only if secretPhrase is omitted) Note: If the encrypted goods data is longer than 1000 bytes, use a prunable encrypted message to deliver the goods. Response: Refer to Create Transaction Response . Example: Refer to DGS Delivery example.","title":"DGS Delivery"},{"location":"api/marketplace/#dgs-feedback","text":"Give feedback about a purchased product after delivery. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsFeedback purchase is the purchase order ID message is unencrypted (public) feedback text up to 1000 bytes Note : The unencrypted message parameter is used for public feedback. Response: Refer to Create Transaction Response . Example: Refer to DGS Feedback example.","title":"DGS Feedback"},{"location":"api/marketplace/#dgs-listing","text":"List a product in the DGS by creating a listing transaction. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsListing name is the name of the product up to 100 characters in length description is a description of the product up to 1000 characters in length tags are up to three comma separated keywords describing the product up to 100 characters in length (optional) quantity is the quantity of the product for sale priceNQT is the price (in NQT) of the product Response: Refer to Create Transaction Response . The transaction ID is also the goods ID. Example: Refer to DGS Listing example.","title":"DGS Listing"},{"location":"api/marketplace/#dgs-price-change","text":"Change the price of a listed product. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsPriceChange goods is the goods ID of the product priceNQT is the new price of the product Response: Refer to Create Transaction Response . Example: Refer to DGS Price Change example.","title":"DGS Price Change"},{"location":"api/marketplace/#dgs-purchase","text":"Purchase a product for sale. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsPurchase goods is the goods ID of the product priceNQT is the price of the product quantity is the quantity to be purchased deliveryDeadlineTimestamp is the timestamp (in seconds since the genesis block) by which delivery of the product must occur Response: Refer to Create Transaction Response . The transaction ID is also the purchase order ID. Example: Refer to DGS Purchase example.","title":"DGS Purchase"},{"location":"api/marketplace/#dgs-quantity-change","text":"Change the quantity of a listed product. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsQuantityChange goods is the goods ID of the product deltaQuantity is the change in the quantity of the product for sale (use negative numbers for a decrease in quantity) Response: Refer to Create Transaction Response . Example: Refer to DGS Quantity Change example.","title":"DGS Quantity Change"},{"location":"api/marketplace/#dgs-refund","text":"Refund a purchase. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is dgsRefund purchase is the purchase order ID refundNQT is the amount (in NQT) of the refund Response: Refer to Create Transaction Response . Example: Refer to DGS Refund example.","title":"DGS Refund"},{"location":"api/marketplace/#get-dgs-expired-purchases","text":"Get purchase orders which have expired without being delivered, given a seller ID, in reverse chronological order. Request: requestType is getDGSExpiredPurchases seller is the account ID of the product seller firstIndex is a zero-based index to the first purchase order to retrieve (optional) lastIndex is a zero-based index to the last purchase order to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: purchases (A) is an array of purchase orders (refer to Get DGS Purchase for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Expired Purchases example.","title":"Get DGS Expired Purchases"},{"location":"api/marketplace/#get-dgs-good","text":"Get a DGS product given a goods ID. Request: requestType is getDGSGood goods is the goods ID of the product includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: seller (S) is the seller's account ID quantity (N) is the quantity of the product remaining for sale goods (S) is the ID of the product description (S) is the description of the product sellerRS (S) is the Reed-Solomon address of the seller's account requestProcessingTime (N) is the API request processing time (in millisec) delisted (B) is true if the product has been delisted, false otherwise parsedTags (A) is an array of up to three tag strings, parsed from the tags field tags (S) is the comma separated list of tags provided by the seller when the listing was created priceNQT (S) is the current price of the product numberOfPublicFeedbacks (N) is the number of public feedbacks given for the product name (S) is the name of the product numberOfPurchases (N) is the number of purchases of the product timestamp (N) is the timestamp (in seconds since the genesis block) of the creation of the product listing lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) Example: Refer to Get DGS Good example.","title":"Get DGS Good"},{"location":"api/marketplace/#get-dgs-goods","text":"Get DGS products for sale in reverse chronological listing creation order unless a seller is given, then in product name order. Request: requestType is getDGSGoods seller is the account ID of the product seller (optional) firstIndex is a zero-based index to the first product to retrieve (optional) lastIndex is a zero-based index to the last product to retrieve (optional) inStockOnly is false if out-of-stock products (zero quantity) are to be retrieved (optional) hideDelisted is true if delisted products are to be omitted (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: If none of the optional parameters are specified, all in-stock products in the blockchain are retrieved at once, which may take a long time. Response: goods (A) is an array of goods (refer to Get DGS Good for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Goods example.","title":"Get DGS Goods"},{"location":"api/marketplace/#get-dgs-goods-count","text":"Get the number of products for sale by a given seller or all sellers. Request: requestType is getDGSGoodsCount seller is the account ID of the seller (optional, default is all sellers combined) inStockOnly is false if out-of-stock (zero quantity) products are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfGoods (N) is the number of goods for sale by the seller lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: The numberOfGoods field refers to the number of distinct products for sale, regardless of the quantity of each. Example: Refer to Get DGS Goods Count example.","title":"Get DGS Goods Count"},{"location":"api/marketplace/#get-dgs-goods-purchase-count","text":"Get the number of completed purchase orders given a goods ID. Request: requestType is getDGSGoodsPurchaseCount goods is the goods ID withPublicFeedbacksOnly is true if purchase orders without public feedback are to be omitted (optional) completed is true if only completed purchase orders are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfPurchases (N) is the number of completed purchase orders lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Goods Purchase Count example.","title":"Get DGS Goods Purchase Count"},{"location":"api/marketplace/#get-dgs-goods-purchases","text":"Get completed purchase orders given a goods ID and optionally a buyer ID in reverse chronological order. Request: requestType is getDGSGoodsPurchases goods is the goods ID buyer is a buyer ID (optional) firstIndex is a zero-based index to the first purchase order to retrieve (optional) lastIndex is a zero-based index to the last purchase order to retrieve (optional) withPublicFeedbacksOnly is true if purchase orders without public feedback are to be omitted (optional) completed is true if only completed purchase orders are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: purchases (A) is an array of purchase orders (refer to Get DGS Purchase for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Goods Purchases example.","title":"Get DGS Goods Purchases"},{"location":"api/marketplace/#get-dgs-pending-purchases","text":"Get pending purchase orders given a seller ID in reverse chronological order. Request: requestType is getDGSPendingPurchases seller is the account ID of the seller firstIndex is a zero-based index to the first purchase order to retrieve (optional) lastIndex is a zero-based index to the last purchase order to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: purchases (A) is an array of pending purchase orders (refer to Get DGS Purchase for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Pending Purchases example.","title":"Get DGS Pending Purchases"},{"location":"api/marketplace/#get-dgs-purchase","text":"Get a purchase order given a purchase order ID. Request: requestType is getDGSPurchase purchase is the purchase order ID sharedKey is the shared key used to decrypt the message (optional) (see Get Shared Key ) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: seller (S) is the account number of the seller quantity (N) is the quantity of the product to be purchased feedbackNotes (A) is an array of AES-encrypted objects, each with data (S) and nonce (S) fields, in reverse chronological order, if applicable publicFeedbacks (A) is an array of feedback strings in reverse chronological order if applicable pending (B) is true if the deliveryDeadline has not passed, false otherwise purchase (S) is the purchase order ID goods (S) is the ID of the product sellerRS (S) is the Reed-Solomon address of the seller buyer (S) is the account number of the buyer priceNQT (S) is the price (in NQT) of the product deliveryDeadlineTimestamp (N) is the timestamp (in seconds since the genesis block) by which the product must be delivered goodsIsText (B) is false if the message is a hex string, otherwise the message is text (optional) buyerRS (S) is the Reed-Solomon address of the buyer refundNQT (S) is the amount (in NQT) refunded, if applicable name (S) is the name of the product goodsData (O) is an object with the two fields data (S) (the encrypted product hex string) and nonce (S), if the product has been delivered timestamp (N) is the timestamp (in seconds since the genesis block) of the purchase order lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Purchase example.","title":"Get DGS Purchase"},{"location":"api/marketplace/#get-dgs-purchase-count","text":"Get the number of purchase orders given a seller and/or buyer ID, or all orders combined. Request: requestType is getDGSPurchaseCount seller is the account ID of the seller (optional, default is all sellers) buyer is the account ID of the buyer (optional, default is all buyers) withPublicFeedbacksOnly is true if purchase orders without public feedback are to be omitted (optional) completed is true if only completed purchase orders are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfPurchases (N) is the number of purchase orders associated with the seller and/or buyer lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Purchase Count example.","title":"Get DGS Purchase Count"},{"location":"api/marketplace/#get-dgs-purchases","text":"Get purchase orders given a seller and/or buyer ID in reverse chronological order. Request: requestType is getDGSPurchases seller is the account ID of the seller (optional) buyer is the account ID of the buyer (optional if seller provided) firstIndex is a zero-based index to the purchase order to retrieve (optional) lastIndex is a zero-based index to the purchase order to retrieve (optional) withPublicFeedbacksOnly is true if purchase orders without public feedback are to be omitted (optional) completed is true if only completed purchase orders are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: purchases (A) is an array of purchase orders (refer to Get DGS Purchase for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Purchases example.","title":"Get DGS Purchases"},{"location":"api/marketplace/#get-dgs-tag-count","text":"Get the number of tags used by all sellers. Request: requestType is getDGSTagCount inStockOnly is false if tags with no associated in-stock products are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfTags (N) is the number of tags lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get DGS Tag Count example.","title":"Get DGS Tag Count"},{"location":"api/marketplace/#get-dgs-tags","text":"Get tags used by all sellers in reverse inStockCount , reverse totalCount , tag order. Request: requestType is getDGSTags inStockOnly is false if out-of-stock tags are to be retrieved (optional) firstIndex is a zero-based index to the first tag to retrieve (optional) lastIndex is a zero-based index to the last tag to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: tags (A) is an array of tag objects with the following fields for each tag: inStockCount (N) is the number of products available for sale as tagged tag (S) is the tag word totalCount (N) is the total number of products as tagged lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: The ...Count fields refer to the number of distinct products tagged, regardless of the quantity of each. Example: Refer to Get DGS Tags example.","title":"Get DGS Tags"},{"location":"api/marketplace/#get-dgs-tags-like","text":"Get all tags starting with a given prefix (at least 2 characters long) in reverse inStockCount , reverse totalCount , tag order. Request: requestType is getDGSTagsLike tagPrefix is the prefix (at least 2 characters long) of the tag inStockOnly is false if out-of-stock tags are to be retrieved (optional) firstIndex is a zero-based index to the first tag to retrieve (optional) lastIndex is a zero-based index to the last tag to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: tags (A) is an array of tag objects with the following fields for each tag: inStockCount (N) is the number of products available for sale as tagged tag (S) is the tag word totalCount (N) is the total number of products as tagged lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: The ...Count fields refer to the number of distinct products tagged, regardless of the quantity of each. Example: Refer to Get DGS Tags Like example.","title":"Get DGS Tags Like"},{"location":"api/marketplace/#search-dgs-goods","text":"Get product listings that have a name or description that match a given query in reverse relevance order, then name order (given a seller), then reverse chronological order. Request: requestType is searchDGSGoods query is a full text query on the goods fields name and description in the standard Lucene syntax (optional) tag is a query on the good field tags in the standard Lucene syntax (optional) seller is the account ID of the product seller (optional) firstIndex is a zero-based index to the first product to retrieve (optional) lastIndex is a zero-based index to the last product to retrieve (optional) inStockOnly is false if out-of-stock products (zero quantity) are to be retrieved (optional) hideDelisted is true if delisted products are to be omitted (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: goods (A) is an array of goods objects (refer to Get DGS Good for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search DGS Goods example.","title":"Search DGS Goods"},{"location":"api/messaging/","text":"Arbitrary Message System Operations Decrypt From Decrypt an AES-encrypted message. Request: requestType is decryptFrom secretPhrase is the secret passphrase of the recipient account is the account ID of the recipient data is AES-encrypted data nonce is the unique nonce associated with the encrypted data decryptedMessageIsText is false if the decrypted message is a hex string, otherwise the decrypted message is text (optional) uncompressDecryptedMessage is false to prevent gzip uncompression after decryption (optional) Response: decryptedMessage (S) is the decrypted message requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Decrypt From example. Download Prunable Message Downloadins a prunable message attachments directly as binary data. An optional secretPhrase parameter is supported, to allow decryption and downloading of the encrypted part of the message instead of the plain text part. Request: requestType is downloadPrunableMessage transaction is the transaction ID secretPhrase is the secret passphrase used to decrypt the encrypted part of the message (optional) sharedKey is the shared key used to decrypt the message (optional) (see Get Shared Key ) retrieve is true to retrieve the message from achival node if needed (optional) requireBlock is theblock ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: The prunable data as a binary file. Example: Refer to Download Prunable Message example. Encrypt To Encrypt a message using AES without sending it. Request: requestType is encryptTo secretPhrase is the secret passphrase of the sender recipient is the account ID of the recipient messageToEncrypt is either UTF-8 text or a string of hex digits to be compressed and converted into a 1000 byte maximum bytecode then encrypted using AES messageToEncryptIsText is false if the message to encrypt is a hex string, otherwise the message to encrypt is text (optional) compressMessageToEncrypt is false to prevent gzip compression before encryption (optional) Response: data (S) is the AES-encrypted data nonce (S) is a 32-byte pseudorandom nonce requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Encrypt To example. Get All Prunable Messages Get all available prunable messages in reverse block timestamp order. Request: requestType is getAllPrunableMessages timestamp is the earliest message (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first prunable message to retrieve (optional) lastIndex is a zero-based index to the last prunable message to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: prunableMessages (A) is an array of prunable messages (refer to Get Prunable Message ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Get All Prunable Messages example. Get Prunable Message Get the prunable message given a transaction ID, optionally decrypting it if encrypted and if a secretPhrase is provided, if it is still available. Request: requestType is getPrunableMessage transaction is the transaction ID secretPhrase is the secret phrase needed for decryption (optional) sharedKey is the shared key used to decrypt the message (optional) (see Get Shared Key ) retrieve is true to retrieve pruned data from other nodes if not available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: sender (S) is the sender account number senderRS (S) is the Reed-Solomon address of the sender account recipient (S) is the recipient account number recipientRS (S) is the Reed-Solomon address of the recipient account message (S) is the plain message text messageIsText (B) is true if the plain message is text, false if it is a hex string encryptedMessage (O) is the encrypted message object, containing data (S) and nonce (S) fields encryptedMessageIsText (B) is true if the encrypted message is text, false if it is a hex string decryptedMessage (S) is the decrypted and decompressed (if necessary) encrypted message, if applicable and if secretPhrase is provided isCompressed (B) is true if the encrypted message was compressed before encryption, if applicable transaction (S) is the transaction ID transactionTimestamp (N) is the transaction timestamp (in seconds since the genesis block) blockTimestamp (N) is the block timestamp (in seconds since the genesis block) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Get Prunable Message example. Get Prunable Messages Get all still-available prunable messages given an account id, optionally limiting to only those with another account as recipient or sender, in reverse chronological order. Request: requestType is getPrunableMessages account is the account ID otherAccount is another account ID, either sender or recipient, to limit the response secretPhrase is the secret phrase needed for decryption (optional) timestamp is the earliest prunable message (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first prunable message to retrieve (optional) lastIndex is a zero-based index to the last prunable message to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: prunableMessages (A) is an array of prunable message objects (refer to Get Prunable Message for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Get Prunable Messages example. Get Shared Key Get the one-time shared key used for encryption of messages. Request: requestType is getSharedKey account is the recipient account ID secretPhrase is the secret phrase of the sender nonce is the 32-byte pseudorandom nonce Response: sharedKey (S) is shared key as a hexadecimal string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Shared Key example. Read Message Get a message given a transaction ID. Request: requestType is readMessage transaction is the transaction ID of the message secretPhrase is the secret passphrase of the account that received the message (optional) sharedKey is the shared key used to decrypt the message (optional) (see Get Shared Key ) retrieve is true to retrieve pruned data from archival nodes (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: messageIsPrunable (B) is true if there is a plain message and it is prunable, false if it is not prunable message (S) is the plain message, if applicable encryptedMessageIsPrunable (B) is true if there is an encrypted message and it is prunable, false if it is not prunable decryptedMessage (S) is the decrypted message, if applicable and only if the provided secretPhrase belongs to either the sender or receiver of the transaction decryptedMessageToSelf (S) is the decrypted message sent to self, if applicable and only if the provided secretPhrase belongs to the sender of transaction lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Read Message example. Send Message Create an Arbitrary Message transaction. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is sendMessage recipient is the account ID of the recipient (optional) recipientPublicKey is the public key of the receiving account (optional, enhances security of a new account) message is either UTF-8 text or a string of hex digits (perhaps previously encoded using an arbitrary algorithm) to be converted into a bytecode with a maximum length of one kilobyte, 42 kilobytes if prunable (optional) messageIsText is false if the message is a hex string, otherwise the message is text (optional) messageIsPrunable is true if the message is prunable (optional) messageToEncrypt is either UTF-8 text or a string of hex digits to be compressed (unless compressMessageToEncrypt is false ) and converted into a bytecode with a maximum length of one kilobyte, 42 kilobytes if prunable, then encrypted using AES (optional) messageToEncryptIsText is false if the message to encrypt is a hex string, otherwise the message to encrypt is text (optional) encryptedMessageData is already encrypted data which overrides messageToEncrypt if provided (optional) encryptedMessageNonce is a unique 32-byte number which cannot be reused (optional unless encryptedMessageData is provided) encryptedMessageIsPrunable is true if the encrypted message is prunable (optional) compressMessageToEncrypt is false to prevent gzip compression before encryption (optional) messageToEncryptToSelf is either UTF-8 text or a string of hex digits to be compressed (unless compressMessageToEncryptToSelf is false) and converted into a one kilobyte maximum bytecode then encrypted with AES, then sent to the sending account (optional) messageToEncryptToSelfIsText is false if the message to self-encrypt is a hex string, otherwise the message to encrypt is text (optional) encryptToSelfMessageData is already encrypted data which overrides messageToEncryptToSelf if provided (optional) encryptToSelfMessageNonce is a unique 32-byte number which cannot be reused (optional unless encryptToSelfMessageData is provided) compressMessageToEncryptToSelf is false to prevent gzip compression before encryption (optional) Note: Any combination (including none or all) of the three options plain message , messageToEncrypt , and messageToEncryptToSelf will be included in the transaction. However, one and only one prunable message may be included in a single transaction if there is not already a message of the same type (either plain or encrypted). Note: The encryptedMessageData-encryptedMessageNonce pair or the encryptToSelfMessageData-encryptToSelfMessageNonce pair can be the output of Encrypt To Response: Refer to Create Transaction Response . Example: Refer to Send Message example. Verify Prunable Message Verify that a prunable message obtained from any source, when hashed, matches the hash of the original prunable message. Request: Refer to Send Message for more details about the following request parameters. requestType is verifyPrunableMessage message is the plain message, if applicable (optional) messageIsText is false if the provided plain message is a hex string (optional) encryptedMessageData is the data part of the encrypted data-nonce pair (optional if message provided) encryptedMessageNonce is the nonce part of the encrypted data-nonce pair (required if encryptedMessageData provided) messageToEncryptIsText is false if the encrypted message was a hex string before encryption (optional) compressMessageToEncrypt is false if the encrypted message was not compressed before encryption (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: The hash is computed from the message itself plus its associated flag(s) isText and isCompressed (encrypted only); therefore the flag(s) must be provided for verification if different from the default(s). The original encryptedMessageData-encryptedMessageNonce pair used to compute the original hash must be provided again to recompute the hash for verification of a prunable encrypted message. Response: version.PrunablePlainMessage or version.PrunableEncryptedMessage (N) is 1 , the version number verify (B) is true if the original hash matches the hash computed from the provided values message (S) or encryptedMessage (O) is the prunable plain message or the prunable encrypted message object containing the fields: data (S) nonce (B) isText (B) isCompressed (B) messageIsText (B) is true if the plain message is text, false if it is a hex string, if applicable messageHash or encryptedMessageHash (S) is the hash lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Verify Prunable Message example.","title":"Messaging"},{"location":"api/messaging/#arbitrary-message-system-operations","text":"","title":"Arbitrary Message System Operations"},{"location":"api/messaging/#decrypt-from","text":"Decrypt an AES-encrypted message. Request: requestType is decryptFrom secretPhrase is the secret passphrase of the recipient account is the account ID of the recipient data is AES-encrypted data nonce is the unique nonce associated with the encrypted data decryptedMessageIsText is false if the decrypted message is a hex string, otherwise the decrypted message is text (optional) uncompressDecryptedMessage is false to prevent gzip uncompression after decryption (optional) Response: decryptedMessage (S) is the decrypted message requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Decrypt From example.","title":"Decrypt From"},{"location":"api/messaging/#download-prunable-message","text":"Downloadins a prunable message attachments directly as binary data. An optional secretPhrase parameter is supported, to allow decryption and downloading of the encrypted part of the message instead of the plain text part. Request: requestType is downloadPrunableMessage transaction is the transaction ID secretPhrase is the secret passphrase used to decrypt the encrypted part of the message (optional) sharedKey is the shared key used to decrypt the message (optional) (see Get Shared Key ) retrieve is true to retrieve the message from achival node if needed (optional) requireBlock is theblock ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: The prunable data as a binary file. Example: Refer to Download Prunable Message example.","title":"Download Prunable Message"},{"location":"api/messaging/#encrypt-to","text":"Encrypt a message using AES without sending it. Request: requestType is encryptTo secretPhrase is the secret passphrase of the sender recipient is the account ID of the recipient messageToEncrypt is either UTF-8 text or a string of hex digits to be compressed and converted into a 1000 byte maximum bytecode then encrypted using AES messageToEncryptIsText is false if the message to encrypt is a hex string, otherwise the message to encrypt is text (optional) compressMessageToEncrypt is false to prevent gzip compression before encryption (optional) Response: data (S) is the AES-encrypted data nonce (S) is a 32-byte pseudorandom nonce requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Encrypt To example.","title":"Encrypt To"},{"location":"api/messaging/#get-all-prunable-messages","text":"Get all available prunable messages in reverse block timestamp order. Request: requestType is getAllPrunableMessages timestamp is the earliest message (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first prunable message to retrieve (optional) lastIndex is a zero-based index to the last prunable message to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: prunableMessages (A) is an array of prunable messages (refer to Get Prunable Message ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Get All Prunable Messages example.","title":"Get All Prunable Messages"},{"location":"api/messaging/#get-prunable-message","text":"Get the prunable message given a transaction ID, optionally decrypting it if encrypted and if a secretPhrase is provided, if it is still available. Request: requestType is getPrunableMessage transaction is the transaction ID secretPhrase is the secret phrase needed for decryption (optional) sharedKey is the shared key used to decrypt the message (optional) (see Get Shared Key ) retrieve is true to retrieve pruned data from other nodes if not available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: sender (S) is the sender account number senderRS (S) is the Reed-Solomon address of the sender account recipient (S) is the recipient account number recipientRS (S) is the Reed-Solomon address of the recipient account message (S) is the plain message text messageIsText (B) is true if the plain message is text, false if it is a hex string encryptedMessage (O) is the encrypted message object, containing data (S) and nonce (S) fields encryptedMessageIsText (B) is true if the encrypted message is text, false if it is a hex string decryptedMessage (S) is the decrypted and decompressed (if necessary) encrypted message, if applicable and if secretPhrase is provided isCompressed (B) is true if the encrypted message was compressed before encryption, if applicable transaction (S) is the transaction ID transactionTimestamp (N) is the transaction timestamp (in seconds since the genesis block) blockTimestamp (N) is the block timestamp (in seconds since the genesis block) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Get Prunable Message example.","title":"Get Prunable Message"},{"location":"api/messaging/#get-prunable-messages","text":"Get all still-available prunable messages given an account id, optionally limiting to only those with another account as recipient or sender, in reverse chronological order. Request: requestType is getPrunableMessages account is the account ID otherAccount is another account ID, either sender or recipient, to limit the response secretPhrase is the secret phrase needed for decryption (optional) timestamp is the earliest prunable message (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first prunable message to retrieve (optional) lastIndex is a zero-based index to the last prunable message to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: prunableMessages (A) is an array of prunable message objects (refer to Get Prunable Message for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Get Prunable Messages example.","title":"Get Prunable Messages"},{"location":"api/messaging/#get-shared-key","text":"Get the one-time shared key used for encryption of messages. Request: requestType is getSharedKey account is the recipient account ID secretPhrase is the secret phrase of the sender nonce is the 32-byte pseudorandom nonce Response: sharedKey (S) is shared key as a hexadecimal string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Shared Key example.","title":"Get Shared Key"},{"location":"api/messaging/#read-message","text":"Get a message given a transaction ID. Request: requestType is readMessage transaction is the transaction ID of the message secretPhrase is the secret passphrase of the account that received the message (optional) sharedKey is the shared key used to decrypt the message (optional) (see Get Shared Key ) retrieve is true to retrieve pruned data from archival nodes (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: messageIsPrunable (B) is true if there is a plain message and it is prunable, false if it is not prunable message (S) is the plain message, if applicable encryptedMessageIsPrunable (B) is true if there is an encrypted message and it is prunable, false if it is not prunable decryptedMessage (S) is the decrypted message, if applicable and only if the provided secretPhrase belongs to either the sender or receiver of the transaction decryptedMessageToSelf (S) is the decrypted message sent to self, if applicable and only if the provided secretPhrase belongs to the sender of transaction lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Read Message example.","title":"Read Message"},{"location":"api/messaging/#send-message","text":"Create an Arbitrary Message transaction. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is sendMessage recipient is the account ID of the recipient (optional) recipientPublicKey is the public key of the receiving account (optional, enhances security of a new account) message is either UTF-8 text or a string of hex digits (perhaps previously encoded using an arbitrary algorithm) to be converted into a bytecode with a maximum length of one kilobyte, 42 kilobytes if prunable (optional) messageIsText is false if the message is a hex string, otherwise the message is text (optional) messageIsPrunable is true if the message is prunable (optional) messageToEncrypt is either UTF-8 text or a string of hex digits to be compressed (unless compressMessageToEncrypt is false ) and converted into a bytecode with a maximum length of one kilobyte, 42 kilobytes if prunable, then encrypted using AES (optional) messageToEncryptIsText is false if the message to encrypt is a hex string, otherwise the message to encrypt is text (optional) encryptedMessageData is already encrypted data which overrides messageToEncrypt if provided (optional) encryptedMessageNonce is a unique 32-byte number which cannot be reused (optional unless encryptedMessageData is provided) encryptedMessageIsPrunable is true if the encrypted message is prunable (optional) compressMessageToEncrypt is false to prevent gzip compression before encryption (optional) messageToEncryptToSelf is either UTF-8 text or a string of hex digits to be compressed (unless compressMessageToEncryptToSelf is false) and converted into a one kilobyte maximum bytecode then encrypted with AES, then sent to the sending account (optional) messageToEncryptToSelfIsText is false if the message to self-encrypt is a hex string, otherwise the message to encrypt is text (optional) encryptToSelfMessageData is already encrypted data which overrides messageToEncryptToSelf if provided (optional) encryptToSelfMessageNonce is a unique 32-byte number which cannot be reused (optional unless encryptToSelfMessageData is provided) compressMessageToEncryptToSelf is false to prevent gzip compression before encryption (optional) Note: Any combination (including none or all) of the three options plain message , messageToEncrypt , and messageToEncryptToSelf will be included in the transaction. However, one and only one prunable message may be included in a single transaction if there is not already a message of the same type (either plain or encrypted). Note: The encryptedMessageData-encryptedMessageNonce pair or the encryptToSelfMessageData-encryptToSelfMessageNonce pair can be the output of Encrypt To Response: Refer to Create Transaction Response . Example: Refer to Send Message example.","title":"Send Message"},{"location":"api/messaging/#verify-prunable-message","text":"Verify that a prunable message obtained from any source, when hashed, matches the hash of the original prunable message. Request: Refer to Send Message for more details about the following request parameters. requestType is verifyPrunableMessage message is the plain message, if applicable (optional) messageIsText is false if the provided plain message is a hex string (optional) encryptedMessageData is the data part of the encrypted data-nonce pair (optional if message provided) encryptedMessageNonce is the nonce part of the encrypted data-nonce pair (required if encryptedMessageData provided) messageToEncryptIsText is false if the encrypted message was a hex string before encryption (optional) compressMessageToEncrypt is false if the encrypted message was not compressed before encryption (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: The hash is computed from the message itself plus its associated flag(s) isText and isCompressed (encrypted only); therefore the flag(s) must be provided for verification if different from the default(s). The original encryptedMessageData-encryptedMessageNonce pair used to compute the original hash must be provided again to recompute the hash for verification of a prunable encrypted message. Response: version.PrunablePlainMessage or version.PrunableEncryptedMessage (N) is 1 , the version number verify (B) is true if the original hash matches the hash computed from the provided values message (S) or encryptedMessage (O) is the prunable plain message or the prunable encrypted message object containing the fields: data (S) nonce (B) isText (B) isCompressed (B) messageIsText (B) is true if the plain message is text, false if it is a hex string, if applicable messageHash or encryptedMessageHash (S) is the hash lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millsec) Example: Refer to Verify Prunable Message example.","title":"Verify Prunable Message"},{"location":"api/monetary_system/","text":"Monetary System Operations Can Delete Currency Determine if a currency can be deleted. Request: requestType is canDeleteCurrency account is the account ID currency is the currency ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: canDelete (B) is true if the currency can be deleted, false otherwise lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: a currency can be deleted only when all units of the currency are held by account . A reservable currency that has not yet been issued can be deleted by the issuer. A mintable currency that has not completed minting cannot be deleted by a non-issuer. Example: Refer to Can Delete Currency example. Currency Buy / Sell Make an exchange request to buy or sell an exchangeable currency. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is currencyBuy or currencySell currency is the currency ID rateNQT is the exchange rate (in NQT per QNT) units is the amount of the currency to buy or sell (in QNT) Note: An exchange request is immediately executed once accepted onto the blockchain based only on currently available offers (refer to Publish Exchange Offer ). The request then expires, regardless of the amount of currency exchanged; the request may be completely filled, partially filled, or expire without any exchange if no matching offers are found. Response: Refer to Create Transaction Response . Example: Refer to Currency Buy / Sell example. Currency Buy Refer to Currency Buy / Sell . Currency Sell Refer to Currency Buy / Sell . Currency Mint Submit a valid computed nonce to the blockchain in return for newly minted currency. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is currencyMint currency is the mintable currency ID nonce is the computed nonce units is the amount (in QNT) of currency to mint counter (N) is the counter associated with the minting account Note: The hash of nonce must be less than targetBytes provided by Get Minting Target for given units and counter . counter must be increased with each submission. Response: Refer to Create Transaction Response . Example: Refer to Currency Mint example. Currency Reserve Claim Claim currency reserve. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is currencyReserveClaim currency is the currency ID units is the amount (in QNT) of reserve currency to claim Note: Holders of a claimable currency may claim the locked NQT backing their units, thus reducing the supply of the currency. Response: Refer to Create Transaction Response . Example: Refer to Currency Reserve Claim example. Currency Reserve Increase Increase the currency reserve of an unissued reservable currency. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is currencyReserveIncrease currency is the currency ID amountPerUnitNQT is the additional amount (in NQT per QNT of reserveSupply ) to reserve (refer to Issue Currency ) Note: An additional amountPerUnitNQT * reserveSupply NQT (beyond what has previously been reserved) will be locked until the issuanceHeight is reached. Upon issuance, if the currency is claimable the NQT will remain locked until claimed; otherwise the NQT will transfer to the issuing account. Also upon issuance, a portion of the reserveSupply QNT will be transfered to each reserving account in proportion to the NQT that was contributed. Response: Refer to Create Transaction Response . Example: Refer to Currency Reserve Increase example. Delete Currency Delete a deletable currency (refer to Can Delete Currency ). POST only. Request: Refer to Create Transaction Request for common parameters. requestType is deleteCurrency currency is the currency ID Response: Refer to Create Transaction Response . Example: Refer to Delete Currency example. Get Account Currencies Get the currencies issued by a given account. Request: requestType is getAccountCurrencies account is the account ID currency is a currency ID filter (optional) height is the blockchain height at which the response applies (optional, default is the current height) includeCurrencyInfo is true if several currency information properties is to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: accountCurrencies (A) is an array of currency objects with the following fields: code (S) is the currency code unconfirmedUnits (S) is the amount of unconfirmed currency units (in QNT) decimals (N) is the number of currency decimal places name (S) is the currency name currency (S) is the currency ID units (S) is the amount of currency (in QNT) issuanceHeight (N) is the blockchain height of issuance for a reservable currency type (N) is the currency type bitmask (refer to Get Currency ) issuerAccountRS (S) is the Reed-Solomon address of the issuer account issuerAccount (S) is the issuer account ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Currencies example. Get Account Currency Count Get the number of currencies issued by a given account. Request: requestType is getAccountCurrencyCount account is the account ID height is the blockchain height at which the response applies (optional, default is the current height) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfCurrencies (N) is the number of currencies issued lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Currency Count example. Get Account Exchange Requests Get the exchange requests associated with a given account and/or currency in reverse chronological order (or in expected order of execution for expected requests). Request: requestType is either getAccountExchangeRequests or getExpectedExchangeRequests , where expected requests are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block account is the account ID (optional for expected requests) currency is the currency ID (optional for expected requests if account provided) includeCurrencyInfo is true to include the response fields code , decimals , name , issuanceHeight , type , timestamp , issuerAccountRS and issuerAccount (optional, applies only to expected requests) firstIndex is a zero-based index to the first request to retrieve (optional, does not apply to expected requests) lastIndex is a zero-based index to the last request to retrieve (optional, does not apply to expected requests) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchangeRequests (A) is an array of requests with the following fields for each request: code (S) is a currency code subtype (N) is 5 for buy and 6 for sell decimals (N) is the number of decimal places name (S) is the currency name units (S) is the number of currency units to buy or sell (in QNT) issuanceHeight (N) is the blockchain height of issuance for a reservable currency, zero otherwise type (N) is the currency type bitmask (refer to Get Currency ) transaction (S) is the transaction ID timestamp (N) is the timestamp (in seconds since the genesis block) of the block when the request was executed rateNQT (S) is the exchange rate (in NQT per QNT) issuerAccountRS (S) is the Reed-Solomon address of the issuer account issuerAccount (S) is the issuer account ID phased (B) is true if the transaction is phased (applies only to expected requests) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Exchange Requests example. Get Expected Exchange Requests Refer to Get Account Exchange Requests . Get Funding Monitor Get a funding monitor. Request: requestType is getFundingMonitor secretPhrase is the secret phrase of the funding account, used to get a single monitor. (optional) adminPassword is the admin password, used to get a single monitor or all monitors (optional if secretPhrase is provided) includeMonitoredAccounts is true to include account info of the monitored accounts (optional) property is the name of the account property (optional) holdingType is a string representing the holding type (optional) holding is the holding ID (optional) account is the account ID (optional) Response: monitors (A) is an array of monitor objects including the following fields: holding (S) is the holding ID amount (S) is the amount to fund the monitored accounts with (NQT or QNT) monitoredAccounts (A) is an array of monitored account objects including the following fields (only if includeMonitoredAccounts is true ): amount (S) is the amount to fund the monitored accounts with. Overrides amount in parent object. account (S) is the monitored account ID accountRS (S) is the monitored account Reed Solomon address threshold (S) is the threshold. Overrides threshold in parent object. interval (N) is the interval. Overrides interval in parent object. holdingType (N) is the holding type account (S) is the monitoring account ID accountRS (S) is the Reed Solomon address of the monitoring account property (S) is the account property threshold (S) is the threshold interval (N) is the interval requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Funding Monitor example. Get All Currencies Get all currencies in reverse creation order. Request: requestType is getAllCurrencies firstIndex is a zero-based index to the first currency to retrieve (optional) lastIndex is a zero-based index to the last currency to retrieve (optional) includeCounts is true to include numberOf... fields (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencies (A) is an array of currency objects (refer to Get Currency for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Currencies example. Get All Exchanges Get all currency exchanges in reverse chronological order. Request: requestType is getAllExchanges timestamp is the earliest timestamp to retrieve (optional) firstIndex is a zero-based index to the first exchange to retrieve (optional) lastIndex is a zero-based index to the last exchange to retrieve (optional) includeCurrencyInfo is true to include some currency details (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects (refer to Get Exchanges for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Exchanges example. Get Available To Buy Calculates the rate required in order to completely fill an exchange request. Request: requestType is getAvailableToBuy or getAvailableToSell currency is the currency ID units is the number of units to buy requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: amountNQT (S) is the total amount needed to fill the exchange request units (S) is the number of units rateNQT (S) is the rate for the currency units requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Available To Buy example. Get Available To Sell Refer to Get Available To Buy . Get Buy / Sell Offers Get currency buy or sell offers given a currency ID and/or an account ID in order of rate (if sortByRate is true for expected offers, otherwise in the expected order of execution). Request: requestType is one of getBuyOffers , getSellOffers , getExpectedBuyOffers or getExpectedSellOffers , where expected offers are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block currency is the currency ID (optional) account is the account ID (optional if currency provided) availableOnly is true to include only offers with non-zero supply and limit, but is ignored when both currency and account are given (optional, does not apply to expected offers) sortByRate is true to sort by rate (optional, applies only to expected offers, which are returned in expected order of execution by default) firstIndex is a zero-based index to the first offer to retrieve (optional, does not apply to expected offers) lastIndex is a zero-based index to the last offer to retrieve (optional, does not apply to expected offers) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: offers (A) is an array of buy or sell offer objects (refer to Get Offer for details) with the following additional field only for an expected offer: phased (B) is true if the offer is phased, false otherwise lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Buy / Sell Offers example. Get Buy Offers Refer to Get Buy / Sell Offers . Get Sell Offers Refer to Get Buy / Sell Offers . Get Expected Buy Offers Refer to Get Buy / Sell Offers . Get Expected Sell Offers Refer to Get Buy / Sell Offers . Get Currencies Get currencies given multiple currency IDs. Request: requestType is getCurrencies currencies is one of multiple currency IDs currencies is one of multiple currency IDs \u22ee includeCounts is true to include numberOf... fields (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencies (A) is an array of currency objects (refer to Get Currency for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currencies example. Get Currencies By Issuer Get currencies issued by multiple accounts in reverse creation order. Request: requestType is getCurrenciesByIssuer account is one of multiple account IDs account is one of multiple account IDs firstIndex is a zero-based index to the first currency to retrieve (optional) lastIndex is a zero-based index to the last currency to retrieve (optional) includeCounts is true if numberOf... fields are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencies (A) is an array of arrays of currency objects, where the outer array is indexed by the given account IDs (refer to Get Currency for details about the currency objects) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currencies By Issuer example. Get Currency Get the details of a currency. Request: requestType is getCurrency currency is the currency ID (optional) code is the currency code (optional if currency provided) includeCounts is true if numberOf... fields are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: initialSupply (S) is the initial currency supply (in QNT) currentReservePerUnitNQT (S) is the minimum currency reserve (in NQT per QNT) types (A) is an array of currency types, one or more of: EXCHANGEABLE CONTROLLABLE RESERVABLE CLAIMABLE MINTABLE NON-SHUFFLEABLE code (S) is the currency code creationHeight (N) is the blockchain height of the currency creation minDifficulty (N) is the minimum difficulty for a mintable currency numberOfTransfers (N) is the number of currency transfers description (S) is the currency description minReservePerUnitNQT (S) is the minimum currency reserve (in NQT per QNT) for a reservable currency currentSupply (S) is the current currency supply (in QNT) issuanceHeight (N) is the blockchain height of the currency issuance for a reservable currency requestProcessingTime (N) is the API request processing time (in millisec) type (N) is the currency type bitmask, from least to most significant bit: exchangeable, controllable, reservable, claimable, mintable, non-shuffleable reserveSupply (S) is the reserve currency supply (in NQT) for a reservable currency maxDifficulty (N) is the maximum difficulty for a mintable currency accountRS (S) is the Reed-Solomon address of the issuing account decimals (N) is the number of decimal places used by the currency name (S) is the name of the currency numberOfExchanges (N) is the number of currency exchanges currency (S) is the currency ID maxSupply (S) is the maximum currency supply (in QNT) account (S) is the account ID of the currency issuer algorithm (N) is the algorithm number for a mintable currency: 2 for SHA256, 3 for SHA3, 5 for Scrypt, 25 for Keccak25 lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) Example: Refer to Get Currency example. Get Currency Account Count Get the number of accounts that hold a given currency. Request: requestType is getCurrencyAccountCount currency is the currency ID height is the blockchain height at which the response applies (optional, default is the current height) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfAccounts (N) is the number of accounts that hold the currency lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Account Count example. Get Currency Accounts Get the accounts that hold a given currency in reverse units order. Request: requestType is getCurrencyAccounts currency is the currency ID height is the blockchain height at which the response applies (optional, default is current height) firstIndex is a zero-based index to the first account to retrieve (optional) lastIndex is a zero-based index to the last account to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: accountCurrencies (A) is an array of account objects with the following fields: unconfirmedUnits (S) is the amount of unconfirmed currency units (in QNT) accountRS (S) is the Reed-Solomon address of the account currency (S) is the currency ID units (S) is the amount of currency (in QNT) account (S) is the account number lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Accounts example. Get Currency Founders Get a reservable currency's founders. Request: requestType is getCurrencyFounders currency is the currency ID account is an account ID (optional) firstIndex is a zero-based index to the first founder to retrieve (optional) lastIndex is a zero-based index to the last founder to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: founders (A) is an array of founder objects each of which has the following fields: accountRS (S) is the Reed-Solomon address of the founding account amountPerUnitNQT (S) is the amount (in NQT per QNT of reserveSupply ) reserved by the founder currency (S) is the currency ID account (S) is the founding account number lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Founders example. Get Currency Ids Get all currency IDs in reverse chronological creation order. Request: requestType is getCurrencyIds firstIndex is a zero-based index to the first currency to retrieve (optional) lastIndex is a zero-based index to the last currency to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencyIds (A) is an array of currency IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Ids example. Get Currency Transfers Get currency transfers given a currency ID and/or an account ID in reverse block height order (or in expected order of execution for expected transfers). Request: requestType is either getCurrencyTransfers or getExpectedCurrencyTransfers , where expected transfers are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block currency is the currency ID (optional) account is the account ID (optional if currency provided) timestamp is the earliest transfer (in seconds since the genesis block) to retrieve (optional, does not apply to expected transfers) firstIndex is a zero-based index to the first transfer to retrieve (optional, does not apply to expected transfers) lastIndex is a zero-based index to the last transfer to retrieve (optional, does not apply to expected transfers) includeCurrencyInfo is true to include some currency fields (optional, does not apply to expected transfers) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transfers (A) is an array of transfer objects with the following fields for each transfer: code (S) is the currency code units (S) is the amount (in QNT) of the transfer issuanceHeight (N) is the blockchain height of the currency issuance for a reservable currency type (N) is the currency type bitmask (refer to Get Currency for details) issuerAccountRS (S) is the Reed-Solomon address of the issuer account transfer (S) is the transfer ID senderRS (S) is the Reed-Solomon address of the sender account sender (S) is the account number of the sender account recipientRS (S) is the Reed-Solomon address of the recipient account decimals (N) is the number of decimal places used by the currency recipient (S) is the account number of the recipient account name (S) is the currency name currency (S) is the currency ID issuerAccount (S) is the issuer account ID height (N) is the blockchain height of the transfer timestamp (N) is the timestamp (in seconds since the genesis block) of the transfer block, does not apply to an expected transfer phased (B) is true if the transaction is phased, false otherwise, applies only to an expected transfer issuerAccountRS (S) is the Reed-Solomon address of the issuer account issuerAccount (S) is the issuer account ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Transfers example. Get Expected Currency Transfers Refer to Get Currency Transfers . Get Exchanges Get currency exchanges given a currency and/or an account in reverse chronological order. Request: requestType is getExchanges currency is a currency ID (optional) account is an account ID (optional if currency provided) firstIndex is a zero-based index to the first currency exchange to retrieve (optional) lastIndex is a zero-based index to the last currency exchange to retrieve (optional) timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) includeCurrencyInfo is true to include several currency-related fields (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects with the following fields for each exchange: seller (S) is the seller account number code (S) is the currency code sellerRS (S) is the Reed-Solomon address of the seller account units (S) is the amount of currency exchanged (in QNT) issuanceHeight (N) is the blockchain height of currency issuance for a reservable currency type (N) is the currency type bitmask (refer to Get Currency for details) rateNQT (S) is the currency exchange rate (in NQT per QNT) buyer (S) is the account number of the buyer offer (S) is the offer ID buyerRS (S) is the Reed-Solomon address of the buyer account decimals (N) is the number of decimal places used by the currency name (S) is the currency name currency (S) is the currency ID block (S) is the block ID of the block containing the exchange transaction transaction (S) is the transaction ID of the exchange timestamp (N) is the timestamp (in seconds since the genesis block) of the exchange height is the blockchain height of the block containing the exchange transaction issuerAccountRS (S) is the Reed-Solomon address of the issuer account issuerAccount (S) is the issuer account ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Exchanges example. Get Exchanges By Exchange Request Get currency exchanges given an exchange request transaction ID in reverse chronological order. Request: requestType is getExchangesByExchangeRequest transaction is the transaction ID of the exchange request includeCurrencyInfo is true to include several currency-related fields (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects (refer to Get Exchanges for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Exchanges By Exchange Request example. Get Exchanges By Offer Get currency exchanges given a currency offer ID in reverse chronological order. Request: requestType is getExchangesByOffer offer (S) is a currency offer ID includeCurrencyInfo is true to include several currency-related fields (optional) firstIndex is a zero-based index to the first currency exchange to retrieve (optional) lastIndex is a zero-based index to the last currency exchange to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects (refer to Get Exchanges for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Exchanges By Offer example. Get Last Exchanges Get the last exchange of each of multiple currencies. Request: requestType is getLastExchanges currencies is one of multiple currency IDs currencies is one of multiple currency IDs \u22ee requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects (refer to Get Exchanges without name , decimals , code , issuanceHeight , type , issuerAccountRS and issuerAccount for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Last Exchanges example. Get Minting Target Get the current minting target of a mintable currency. Request: requestType is getMintingTarget currency is the mintable currency ID account is the minting account ID units is the amount (in QNT) of currency to mint requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: units cannot be greater than 1/10000 of the maxSupply (refer to Issue Currency ). Increasing units decreases targetBytes . Response: difficulty (S) is the current difficulty, an estimate of the number of hashes needed to meet the target targetBytes (S) is the 32-byte target (little endian), which must equal or exceed the computed hash of the nonce currency (S) is the currency ID counter (N) is the counter associated with the minting account, the value previously submitted to Currency Mint lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: If a nonce is found such that its hash is less than the target, it can be submitted to the blockchain along with counter + 1 using Currency Mint , which results in units NQT being credited to the minting account. difficulty is inversely related to the target, and so increases exponentially as maxSupply is approached because the target is defined as (2exp-1)/ units , where exp decreases linearly from 256- minDifficulty to 256- maxDifficulty . (Refer to Issue Currency for maxSupply , minDifficulty and maxDifficulty .) Example: Refer to Get Minting Target example. Get Offer Get offer details given an offer ID. Request: requestType is getOffer offer is the offer ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: sellOffer and buyOffer (O) are objects with the following fields: offer (S) is the offer ID expirationHeight (N) is the blockchain height of offer expiration accountRS (S) is the Reed-Solomon address of the offering account -limit_ (S) is the cumulative limit of currency buys or sells currency (S) is the currency ID supply (S) is the current currency supply account (S) is the offering account number height (N) is the blockchain height of offer creation rateNQT (S) is the currency exchange rate (in NQT per QNT) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Offer example. Issue Currency Issue a new currency or re-issue an existing currency with different properties. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is issueCurrency name is the currency name, 3 to 10 characters and longer than the currency code code is the uppercase currency code with the following fee structure: three letters 25000 BLX, four letters 1000 BLX, five letters 40 BLX, re-issue 40 BLX description is the currency description type is the currency type bitmask, from least to most significant bit: exchangeable, controllable, reservable, claimable, mintable, non-shuffleable initialSupply is the initial currency supply (in QNT) (must match maxSupply unless mintable or claimable, must be zero for claimable) reserveSupply is the reserve currency supply (in QNT) (must match maxSupply ) maxSupply is the maximum currency supply (in QNT) issuanceHeight is the blockchain height at which a reservable currency is issued if the reserve minimum is met minReservePerUnitNQT is the minimum currency reserve (in NQT per QNT of reserveSupply ) for issuance of a reservable currency minDifficulty is the minimum difficulty (minimum 1 ) for a mintable currency maxDifficulty is the maximum difficulty (maximum 255 and greater than minDifficulty ) for a mintable currency ruleset is for future use, always set to zero algorithm is an algorithm code for a mintable currency: 2 for SHA256, 3 for SHA3, 5 for Scrypt, 25 for Keccak25 decimals is the number of decimal places used by the currency (optional, default zero) Notes: Reservable requires exchangeable and/or claimable, as does controllable; but mintable requires exchangeable. Claimable requires reservable, non-mintable and zero initialSupply . Response: Refer to Create Transaction Response . The transaction ID is also the currency ID. Example: Refer to Issue Currency example. Publish Exchange Offer Publish an exchange offer for an exchangeable currency. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is publishExchangeOffer currency is the currency ID buyRateNQT is the offered buy rate (in NQT per QNT) sellRateNQT is the offered sell rate (in NQT per QNT) totalBuyLimit is the cumulative limit (in QNT) of currency buys totalSellLimit is the cumulative limit (in QNT) of currency sells initialBuySupply is the initial amount (in QNT) of currency offered to buy, cannot exceed totalBuyLimit initialSellSupply is the initial amount (in QNT) of currency offered to sell, cannot exceed totalSellLimit expirationHeight is the blockchain height for expiration of the offer Notes: Each time currency is bought in response to an exchange request to sell currency (refer to Currency Sell ), totalBuyLimit is reduced and the supply of currency offered to sell increases by the amount bought. When totalBuyLimit becomes zero, the buy offer is withdrawn. These same notes apply if buy and sell are interchanged. Only the most recent offer associated with an account is valid, even if an earlier offer by that account has not yet expired or reached its limits. Response: Refer to Create Transaction Response . The transaction ID is also the offer ID. Example: Refer to Publish Exchange Offer example. Search Currencies Get currencies having a code that matches a given query in reverse relevance order. Request: requestType is searchCurrencies query is a full text query on the currency field code in the standard Lucene syntax firstIndex is a zero-based index to the first currency to retrieve (optional) lastIndex is a zero-based index to the last currency to retrieve (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencies (A) is an array of currency objects (refer to Get Currency for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Currencies example. Transfer Currency Transfer currency to a given recipient. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is transferCurrency recipient is the account ID of the transfer recipient currency is the currency ID units is the amount (in QNT) of the transfer Response: Refer to Create Transaction Response . Example: Refer to Transfer Currency example.","title":"Monetary System"},{"location":"api/monetary_system/#monetary-system-operations","text":"","title":"Monetary System Operations"},{"location":"api/monetary_system/#can-delete-currency","text":"Determine if a currency can be deleted. Request: requestType is canDeleteCurrency account is the account ID currency is the currency ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: canDelete (B) is true if the currency can be deleted, false otherwise lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: a currency can be deleted only when all units of the currency are held by account . A reservable currency that has not yet been issued can be deleted by the issuer. A mintable currency that has not completed minting cannot be deleted by a non-issuer. Example: Refer to Can Delete Currency example.","title":"Can Delete Currency"},{"location":"api/monetary_system/#currency-buy-sell","text":"Make an exchange request to buy or sell an exchangeable currency. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is currencyBuy or currencySell currency is the currency ID rateNQT is the exchange rate (in NQT per QNT) units is the amount of the currency to buy or sell (in QNT) Note: An exchange request is immediately executed once accepted onto the blockchain based only on currently available offers (refer to Publish Exchange Offer ). The request then expires, regardless of the amount of currency exchanged; the request may be completely filled, partially filled, or expire without any exchange if no matching offers are found. Response: Refer to Create Transaction Response . Example: Refer to Currency Buy / Sell example.","title":"Currency Buy / Sell"},{"location":"api/monetary_system/#currency-buy","text":"Refer to Currency Buy / Sell .","title":"Currency Buy"},{"location":"api/monetary_system/#currency-sell","text":"Refer to Currency Buy / Sell .","title":"Currency Sell"},{"location":"api/monetary_system/#currency-mint","text":"Submit a valid computed nonce to the blockchain in return for newly minted currency. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is currencyMint currency is the mintable currency ID nonce is the computed nonce units is the amount (in QNT) of currency to mint counter (N) is the counter associated with the minting account Note: The hash of nonce must be less than targetBytes provided by Get Minting Target for given units and counter . counter must be increased with each submission. Response: Refer to Create Transaction Response . Example: Refer to Currency Mint example.","title":"Currency Mint"},{"location":"api/monetary_system/#currency-reserve-claim","text":"Claim currency reserve. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is currencyReserveClaim currency is the currency ID units is the amount (in QNT) of reserve currency to claim Note: Holders of a claimable currency may claim the locked NQT backing their units, thus reducing the supply of the currency. Response: Refer to Create Transaction Response . Example: Refer to Currency Reserve Claim example.","title":"Currency Reserve Claim"},{"location":"api/monetary_system/#currency-reserve-increase","text":"Increase the currency reserve of an unissued reservable currency. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is currencyReserveIncrease currency is the currency ID amountPerUnitNQT is the additional amount (in NQT per QNT of reserveSupply ) to reserve (refer to Issue Currency ) Note: An additional amountPerUnitNQT * reserveSupply NQT (beyond what has previously been reserved) will be locked until the issuanceHeight is reached. Upon issuance, if the currency is claimable the NQT will remain locked until claimed; otherwise the NQT will transfer to the issuing account. Also upon issuance, a portion of the reserveSupply QNT will be transfered to each reserving account in proportion to the NQT that was contributed. Response: Refer to Create Transaction Response . Example: Refer to Currency Reserve Increase example.","title":"Currency Reserve Increase"},{"location":"api/monetary_system/#delete-currency","text":"Delete a deletable currency (refer to Can Delete Currency ). POST only. Request: Refer to Create Transaction Request for common parameters. requestType is deleteCurrency currency is the currency ID Response: Refer to Create Transaction Response . Example: Refer to Delete Currency example.","title":"Delete Currency"},{"location":"api/monetary_system/#get-account-currencies","text":"Get the currencies issued by a given account. Request: requestType is getAccountCurrencies account is the account ID currency is a currency ID filter (optional) height is the blockchain height at which the response applies (optional, default is the current height) includeCurrencyInfo is true if several currency information properties is to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: accountCurrencies (A) is an array of currency objects with the following fields: code (S) is the currency code unconfirmedUnits (S) is the amount of unconfirmed currency units (in QNT) decimals (N) is the number of currency decimal places name (S) is the currency name currency (S) is the currency ID units (S) is the amount of currency (in QNT) issuanceHeight (N) is the blockchain height of issuance for a reservable currency type (N) is the currency type bitmask (refer to Get Currency ) issuerAccountRS (S) is the Reed-Solomon address of the issuer account issuerAccount (S) is the issuer account ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Currencies example.","title":"Get Account Currencies"},{"location":"api/monetary_system/#get-account-currency-count","text":"Get the number of currencies issued by a given account. Request: requestType is getAccountCurrencyCount account is the account ID height is the blockchain height at which the response applies (optional, default is the current height) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfCurrencies (N) is the number of currencies issued lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Currency Count example.","title":"Get Account Currency Count"},{"location":"api/monetary_system/#get-account-exchange-requests","text":"Get the exchange requests associated with a given account and/or currency in reverse chronological order (or in expected order of execution for expected requests). Request: requestType is either getAccountExchangeRequests or getExpectedExchangeRequests , where expected requests are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block account is the account ID (optional for expected requests) currency is the currency ID (optional for expected requests if account provided) includeCurrencyInfo is true to include the response fields code , decimals , name , issuanceHeight , type , timestamp , issuerAccountRS and issuerAccount (optional, applies only to expected requests) firstIndex is a zero-based index to the first request to retrieve (optional, does not apply to expected requests) lastIndex is a zero-based index to the last request to retrieve (optional, does not apply to expected requests) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchangeRequests (A) is an array of requests with the following fields for each request: code (S) is a currency code subtype (N) is 5 for buy and 6 for sell decimals (N) is the number of decimal places name (S) is the currency name units (S) is the number of currency units to buy or sell (in QNT) issuanceHeight (N) is the blockchain height of issuance for a reservable currency, zero otherwise type (N) is the currency type bitmask (refer to Get Currency ) transaction (S) is the transaction ID timestamp (N) is the timestamp (in seconds since the genesis block) of the block when the request was executed rateNQT (S) is the exchange rate (in NQT per QNT) issuerAccountRS (S) is the Reed-Solomon address of the issuer account issuerAccount (S) is the issuer account ID phased (B) is true if the transaction is phased (applies only to expected requests) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Exchange Requests example.","title":"Get Account Exchange Requests"},{"location":"api/monetary_system/#get-expected-exchange-requests","text":"Refer to Get Account Exchange Requests .","title":"Get Expected Exchange Requests"},{"location":"api/monetary_system/#get-funding-monitor","text":"Get a funding monitor. Request: requestType is getFundingMonitor secretPhrase is the secret phrase of the funding account, used to get a single monitor. (optional) adminPassword is the admin password, used to get a single monitor or all monitors (optional if secretPhrase is provided) includeMonitoredAccounts is true to include account info of the monitored accounts (optional) property is the name of the account property (optional) holdingType is a string representing the holding type (optional) holding is the holding ID (optional) account is the account ID (optional) Response: monitors (A) is an array of monitor objects including the following fields: holding (S) is the holding ID amount (S) is the amount to fund the monitored accounts with (NQT or QNT) monitoredAccounts (A) is an array of monitored account objects including the following fields (only if includeMonitoredAccounts is true ): amount (S) is the amount to fund the monitored accounts with. Overrides amount in parent object. account (S) is the monitored account ID accountRS (S) is the monitored account Reed Solomon address threshold (S) is the threshold. Overrides threshold in parent object. interval (N) is the interval. Overrides interval in parent object. holdingType (N) is the holding type account (S) is the monitoring account ID accountRS (S) is the Reed Solomon address of the monitoring account property (S) is the account property threshold (S) is the threshold interval (N) is the interval requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Funding Monitor example.","title":"Get Funding Monitor"},{"location":"api/monetary_system/#get-all-currencies","text":"Get all currencies in reverse creation order. Request: requestType is getAllCurrencies firstIndex is a zero-based index to the first currency to retrieve (optional) lastIndex is a zero-based index to the last currency to retrieve (optional) includeCounts is true to include numberOf... fields (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencies (A) is an array of currency objects (refer to Get Currency for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Currencies example.","title":"Get All Currencies"},{"location":"api/monetary_system/#get-all-exchanges","text":"Get all currency exchanges in reverse chronological order. Request: requestType is getAllExchanges timestamp is the earliest timestamp to retrieve (optional) firstIndex is a zero-based index to the first exchange to retrieve (optional) lastIndex is a zero-based index to the last exchange to retrieve (optional) includeCurrencyInfo is true to include some currency details (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects (refer to Get Exchanges for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Exchanges example.","title":"Get All Exchanges"},{"location":"api/monetary_system/#get-available-to-buy","text":"Calculates the rate required in order to completely fill an exchange request. Request: requestType is getAvailableToBuy or getAvailableToSell currency is the currency ID units is the number of units to buy requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: amountNQT (S) is the total amount needed to fill the exchange request units (S) is the number of units rateNQT (S) is the rate for the currency units requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Available To Buy example.","title":"Get Available To Buy"},{"location":"api/monetary_system/#get-available-to-sell","text":"Refer to Get Available To Buy .","title":"Get Available To Sell"},{"location":"api/monetary_system/#get-buy-sell-offers","text":"Get currency buy or sell offers given a currency ID and/or an account ID in order of rate (if sortByRate is true for expected offers, otherwise in the expected order of execution). Request: requestType is one of getBuyOffers , getSellOffers , getExpectedBuyOffers or getExpectedSellOffers , where expected offers are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block currency is the currency ID (optional) account is the account ID (optional if currency provided) availableOnly is true to include only offers with non-zero supply and limit, but is ignored when both currency and account are given (optional, does not apply to expected offers) sortByRate is true to sort by rate (optional, applies only to expected offers, which are returned in expected order of execution by default) firstIndex is a zero-based index to the first offer to retrieve (optional, does not apply to expected offers) lastIndex is a zero-based index to the last offer to retrieve (optional, does not apply to expected offers) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: offers (A) is an array of buy or sell offer objects (refer to Get Offer for details) with the following additional field only for an expected offer: phased (B) is true if the offer is phased, false otherwise lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Buy / Sell Offers example.","title":"Get Buy / Sell Offers"},{"location":"api/monetary_system/#get-buy-offers","text":"Refer to Get Buy / Sell Offers .","title":"Get Buy Offers"},{"location":"api/monetary_system/#get-sell-offers","text":"Refer to Get Buy / Sell Offers .","title":"Get Sell Offers"},{"location":"api/monetary_system/#get-expected-buy-offers","text":"Refer to Get Buy / Sell Offers .","title":"Get Expected Buy Offers"},{"location":"api/monetary_system/#get-expected-sell-offers","text":"Refer to Get Buy / Sell Offers .","title":"Get Expected Sell Offers"},{"location":"api/monetary_system/#get-currencies","text":"Get currencies given multiple currency IDs. Request: requestType is getCurrencies currencies is one of multiple currency IDs currencies is one of multiple currency IDs \u22ee includeCounts is true to include numberOf... fields (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencies (A) is an array of currency objects (refer to Get Currency for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currencies example.","title":"Get Currencies"},{"location":"api/monetary_system/#get-currencies-by-issuer","text":"Get currencies issued by multiple accounts in reverse creation order. Request: requestType is getCurrenciesByIssuer account is one of multiple account IDs account is one of multiple account IDs firstIndex is a zero-based index to the first currency to retrieve (optional) lastIndex is a zero-based index to the last currency to retrieve (optional) includeCounts is true if numberOf... fields are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencies (A) is an array of arrays of currency objects, where the outer array is indexed by the given account IDs (refer to Get Currency for details about the currency objects) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currencies By Issuer example.","title":"Get Currencies By Issuer"},{"location":"api/monetary_system/#get-currency","text":"Get the details of a currency. Request: requestType is getCurrency currency is the currency ID (optional) code is the currency code (optional if currency provided) includeCounts is true if numberOf... fields are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: initialSupply (S) is the initial currency supply (in QNT) currentReservePerUnitNQT (S) is the minimum currency reserve (in NQT per QNT) types (A) is an array of currency types, one or more of: EXCHANGEABLE CONTROLLABLE RESERVABLE CLAIMABLE MINTABLE NON-SHUFFLEABLE code (S) is the currency code creationHeight (N) is the blockchain height of the currency creation minDifficulty (N) is the minimum difficulty for a mintable currency numberOfTransfers (N) is the number of currency transfers description (S) is the currency description minReservePerUnitNQT (S) is the minimum currency reserve (in NQT per QNT) for a reservable currency currentSupply (S) is the current currency supply (in QNT) issuanceHeight (N) is the blockchain height of the currency issuance for a reservable currency requestProcessingTime (N) is the API request processing time (in millisec) type (N) is the currency type bitmask, from least to most significant bit: exchangeable, controllable, reservable, claimable, mintable, non-shuffleable reserveSupply (S) is the reserve currency supply (in NQT) for a reservable currency maxDifficulty (N) is the maximum difficulty for a mintable currency accountRS (S) is the Reed-Solomon address of the issuing account decimals (N) is the number of decimal places used by the currency name (S) is the name of the currency numberOfExchanges (N) is the number of currency exchanges currency (S) is the currency ID maxSupply (S) is the maximum currency supply (in QNT) account (S) is the account ID of the currency issuer algorithm (N) is the algorithm number for a mintable currency: 2 for SHA256, 3 for SHA3, 5 for Scrypt, 25 for Keccak25 lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) Example: Refer to Get Currency example.","title":"Get Currency"},{"location":"api/monetary_system/#get-currency-account-count","text":"Get the number of accounts that hold a given currency. Request: requestType is getCurrencyAccountCount currency is the currency ID height is the blockchain height at which the response applies (optional, default is the current height) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfAccounts (N) is the number of accounts that hold the currency lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Account Count example.","title":"Get Currency Account Count"},{"location":"api/monetary_system/#get-currency-accounts","text":"Get the accounts that hold a given currency in reverse units order. Request: requestType is getCurrencyAccounts currency is the currency ID height is the blockchain height at which the response applies (optional, default is current height) firstIndex is a zero-based index to the first account to retrieve (optional) lastIndex is a zero-based index to the last account to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: accountCurrencies (A) is an array of account objects with the following fields: unconfirmedUnits (S) is the amount of unconfirmed currency units (in QNT) accountRS (S) is the Reed-Solomon address of the account currency (S) is the currency ID units (S) is the amount of currency (in QNT) account (S) is the account number lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Accounts example.","title":"Get Currency Accounts"},{"location":"api/monetary_system/#get-currency-founders","text":"Get a reservable currency's founders. Request: requestType is getCurrencyFounders currency is the currency ID account is an account ID (optional) firstIndex is a zero-based index to the first founder to retrieve (optional) lastIndex is a zero-based index to the last founder to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: founders (A) is an array of founder objects each of which has the following fields: accountRS (S) is the Reed-Solomon address of the founding account amountPerUnitNQT (S) is the amount (in NQT per QNT of reserveSupply ) reserved by the founder currency (S) is the currency ID account (S) is the founding account number lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Founders example.","title":"Get Currency Founders"},{"location":"api/monetary_system/#get-currency-ids","text":"Get all currency IDs in reverse chronological creation order. Request: requestType is getCurrencyIds firstIndex is a zero-based index to the first currency to retrieve (optional) lastIndex is a zero-based index to the last currency to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencyIds (A) is an array of currency IDs lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Ids example.","title":"Get Currency Ids"},{"location":"api/monetary_system/#get-currency-transfers","text":"Get currency transfers given a currency ID and/or an account ID in reverse block height order (or in expected order of execution for expected transfers). Request: requestType is either getCurrencyTransfers or getExpectedCurrencyTransfers , where expected transfers are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block currency is the currency ID (optional) account is the account ID (optional if currency provided) timestamp is the earliest transfer (in seconds since the genesis block) to retrieve (optional, does not apply to expected transfers) firstIndex is a zero-based index to the first transfer to retrieve (optional, does not apply to expected transfers) lastIndex is a zero-based index to the last transfer to retrieve (optional, does not apply to expected transfers) includeCurrencyInfo is true to include some currency fields (optional, does not apply to expected transfers) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transfers (A) is an array of transfer objects with the following fields for each transfer: code (S) is the currency code units (S) is the amount (in QNT) of the transfer issuanceHeight (N) is the blockchain height of the currency issuance for a reservable currency type (N) is the currency type bitmask (refer to Get Currency for details) issuerAccountRS (S) is the Reed-Solomon address of the issuer account transfer (S) is the transfer ID senderRS (S) is the Reed-Solomon address of the sender account sender (S) is the account number of the sender account recipientRS (S) is the Reed-Solomon address of the recipient account decimals (N) is the number of decimal places used by the currency recipient (S) is the account number of the recipient account name (S) is the currency name currency (S) is the currency ID issuerAccount (S) is the issuer account ID height (N) is the blockchain height of the transfer timestamp (N) is the timestamp (in seconds since the genesis block) of the transfer block, does not apply to an expected transfer phased (B) is true if the transaction is phased, false otherwise, applies only to an expected transfer issuerAccountRS (S) is the Reed-Solomon address of the issuer account issuerAccount (S) is the issuer account ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Currency Transfers example.","title":"Get Currency Transfers"},{"location":"api/monetary_system/#get-expected-currency-transfers","text":"Refer to Get Currency Transfers .","title":"Get Expected Currency Transfers"},{"location":"api/monetary_system/#get-exchanges","text":"Get currency exchanges given a currency and/or an account in reverse chronological order. Request: requestType is getExchanges currency is a currency ID (optional) account is an account ID (optional if currency provided) firstIndex is a zero-based index to the first currency exchange to retrieve (optional) lastIndex is a zero-based index to the last currency exchange to retrieve (optional) timestamp is the earliest block (in seconds since the genesis block) to retrieve (optional) includeCurrencyInfo is true to include several currency-related fields (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects with the following fields for each exchange: seller (S) is the seller account number code (S) is the currency code sellerRS (S) is the Reed-Solomon address of the seller account units (S) is the amount of currency exchanged (in QNT) issuanceHeight (N) is the blockchain height of currency issuance for a reservable currency type (N) is the currency type bitmask (refer to Get Currency for details) rateNQT (S) is the currency exchange rate (in NQT per QNT) buyer (S) is the account number of the buyer offer (S) is the offer ID buyerRS (S) is the Reed-Solomon address of the buyer account decimals (N) is the number of decimal places used by the currency name (S) is the currency name currency (S) is the currency ID block (S) is the block ID of the block containing the exchange transaction transaction (S) is the transaction ID of the exchange timestamp (N) is the timestamp (in seconds since the genesis block) of the exchange height is the blockchain height of the block containing the exchange transaction issuerAccountRS (S) is the Reed-Solomon address of the issuer account issuerAccount (S) is the issuer account ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Exchanges example.","title":"Get Exchanges"},{"location":"api/monetary_system/#get-exchanges-by-exchange-request","text":"Get currency exchanges given an exchange request transaction ID in reverse chronological order. Request: requestType is getExchangesByExchangeRequest transaction is the transaction ID of the exchange request includeCurrencyInfo is true to include several currency-related fields (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects (refer to Get Exchanges for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Exchanges By Exchange Request example.","title":"Get Exchanges By Exchange Request"},{"location":"api/monetary_system/#get-exchanges-by-offer","text":"Get currency exchanges given a currency offer ID in reverse chronological order. Request: requestType is getExchangesByOffer offer (S) is a currency offer ID includeCurrencyInfo is true to include several currency-related fields (optional) firstIndex is a zero-based index to the first currency exchange to retrieve (optional) lastIndex is a zero-based index to the last currency exchange to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects (refer to Get Exchanges for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Exchanges By Offer example.","title":"Get Exchanges By Offer"},{"location":"api/monetary_system/#get-last-exchanges","text":"Get the last exchange of each of multiple currencies. Request: requestType is getLastExchanges currencies is one of multiple currency IDs currencies is one of multiple currency IDs \u22ee requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: exchanges (A) is an array of exchange objects (refer to Get Exchanges without name , decimals , code , issuanceHeight , type , issuerAccountRS and issuerAccount for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Last Exchanges example.","title":"Get Last Exchanges"},{"location":"api/monetary_system/#get-minting-target","text":"Get the current minting target of a mintable currency. Request: requestType is getMintingTarget currency is the mintable currency ID account is the minting account ID units is the amount (in QNT) of currency to mint requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: units cannot be greater than 1/10000 of the maxSupply (refer to Issue Currency ). Increasing units decreases targetBytes . Response: difficulty (S) is the current difficulty, an estimate of the number of hashes needed to meet the target targetBytes (S) is the 32-byte target (little endian), which must equal or exceed the computed hash of the nonce currency (S) is the currency ID counter (N) is the counter associated with the minting account, the value previously submitted to Currency Mint lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: If a nonce is found such that its hash is less than the target, it can be submitted to the blockchain along with counter + 1 using Currency Mint , which results in units NQT being credited to the minting account. difficulty is inversely related to the target, and so increases exponentially as maxSupply is approached because the target is defined as (2exp-1)/ units , where exp decreases linearly from 256- minDifficulty to 256- maxDifficulty . (Refer to Issue Currency for maxSupply , minDifficulty and maxDifficulty .) Example: Refer to Get Minting Target example.","title":"Get Minting Target"},{"location":"api/monetary_system/#get-offer","text":"Get offer details given an offer ID. Request: requestType is getOffer offer is the offer ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: sellOffer and buyOffer (O) are objects with the following fields: offer (S) is the offer ID expirationHeight (N) is the blockchain height of offer expiration accountRS (S) is the Reed-Solomon address of the offering account -limit_ (S) is the cumulative limit of currency buys or sells currency (S) is the currency ID supply (S) is the current currency supply account (S) is the offering account number height (N) is the blockchain height of offer creation rateNQT (S) is the currency exchange rate (in NQT per QNT) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Offer example.","title":"Get Offer"},{"location":"api/monetary_system/#issue-currency","text":"Issue a new currency or re-issue an existing currency with different properties. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is issueCurrency name is the currency name, 3 to 10 characters and longer than the currency code code is the uppercase currency code with the following fee structure: three letters 25000 BLX, four letters 1000 BLX, five letters 40 BLX, re-issue 40 BLX description is the currency description type is the currency type bitmask, from least to most significant bit: exchangeable, controllable, reservable, claimable, mintable, non-shuffleable initialSupply is the initial currency supply (in QNT) (must match maxSupply unless mintable or claimable, must be zero for claimable) reserveSupply is the reserve currency supply (in QNT) (must match maxSupply ) maxSupply is the maximum currency supply (in QNT) issuanceHeight is the blockchain height at which a reservable currency is issued if the reserve minimum is met minReservePerUnitNQT is the minimum currency reserve (in NQT per QNT of reserveSupply ) for issuance of a reservable currency minDifficulty is the minimum difficulty (minimum 1 ) for a mintable currency maxDifficulty is the maximum difficulty (maximum 255 and greater than minDifficulty ) for a mintable currency ruleset is for future use, always set to zero algorithm is an algorithm code for a mintable currency: 2 for SHA256, 3 for SHA3, 5 for Scrypt, 25 for Keccak25 decimals is the number of decimal places used by the currency (optional, default zero) Notes: Reservable requires exchangeable and/or claimable, as does controllable; but mintable requires exchangeable. Claimable requires reservable, non-mintable and zero initialSupply . Response: Refer to Create Transaction Response . The transaction ID is also the currency ID. Example: Refer to Issue Currency example.","title":"Issue Currency"},{"location":"api/monetary_system/#publish-exchange-offer","text":"Publish an exchange offer for an exchangeable currency. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is publishExchangeOffer currency is the currency ID buyRateNQT is the offered buy rate (in NQT per QNT) sellRateNQT is the offered sell rate (in NQT per QNT) totalBuyLimit is the cumulative limit (in QNT) of currency buys totalSellLimit is the cumulative limit (in QNT) of currency sells initialBuySupply is the initial amount (in QNT) of currency offered to buy, cannot exceed totalBuyLimit initialSellSupply is the initial amount (in QNT) of currency offered to sell, cannot exceed totalSellLimit expirationHeight is the blockchain height for expiration of the offer Notes: Each time currency is bought in response to an exchange request to sell currency (refer to Currency Sell ), totalBuyLimit is reduced and the supply of currency offered to sell increases by the amount bought. When totalBuyLimit becomes zero, the buy offer is withdrawn. These same notes apply if buy and sell are interchanged. Only the most recent offer associated with an account is valid, even if an earlier offer by that account has not yet expired or reached its limits. Response: Refer to Create Transaction Response . The transaction ID is also the offer ID. Example: Refer to Publish Exchange Offer example.","title":"Publish Exchange Offer"},{"location":"api/monetary_system/#search-currencies","text":"Get currencies having a code that matches a given query in reverse relevance order. Request: requestType is searchCurrencies query is a full text query on the currency field code in the standard Lucene syntax firstIndex is a zero-based index to the first currency to retrieve (optional) lastIndex is a zero-based index to the last currency to retrieve (optional) includeCounts is true if the fields beginning with numberOf... are to be included (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: currencies (A) is an array of currency objects (refer to Get Currency for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Currencies example.","title":"Search Currencies"},{"location":"api/monetary_system/#transfer-currency","text":"Transfer currency to a given recipient. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is transferCurrency recipient is the account ID of the transfer recipient currency is the currency ID units is the amount (in QNT) of the transfer Response: Refer to Create Transaction Response . Example: Refer to Transfer Currency example.","title":"Transfer Currency"},{"location":"api/networking/","text":"Networking Operations Add Peer Add a peer to the list of known peers and attempt to connect to it. Password protected like the Debug Operations . POST only. Request: requestType is addPeer peer is the IP address or domain name of the peer (plus optional port) Response: refer to Get Peer isNewlyAdded is true if the peer was not already known, omitted otherwise Example: Refer to Add Peer example. Blacklist API Proxy Peer Blacklist a remote node from the UI, so it won't be used when in roaming and light client modes. POST only. Request: requestType is blacklistAPIProxyPeer peer is the IP address or domain name of the peer (plus optional port) adminPassword is a string with the admin password (optional) Response: done (B) is true if the peer is blacklisted requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Blacklist API Proxy Peer example. Blacklist Peer Blacklist a peer for the default blacklisting period. Password protected like the Debug Operations . POST only. Request: requestType is blacklistPeer peer is the IP address or domain name of the peer (plus optional port) Response: done (B) is true if the peer is blacklisted requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Blacklist Peer example. Get Inbound Peers Get all peers that have sent a request to this peer in the last 30 minutes. Request: requestType is getInboundPeers includePeerInfo is true to include peer information, otherwise include only the address (optional) Response: peers (A) is an array of peer addresses or peer objects (refer to Get Peer for details) depending on includePeerInfo requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Inbound Peers example. Get My Info Get hostname and address of the requesting node. Request: requestType is getMyInfo Response: host (S) is the node hostname address (S) is the node address requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get My Info example. Get Peer Get information about a given peer. Request: requestType is getPeer peer is the IP address or domain name of the peer (plus optional port) Response: hallmark (S) is the hex string of the peer's hallmark, if it is defined downloadedVolume (N) is the number of bytes downloaded by the peer address (S) the IP address or DNS name of the peer weight (N) is the peer's weight value uploadedVolume (N) is the number of bytes uploaded by the peer version (S) is the version of the software running on the peer platform (S) is a string representing the peer's platform lastUpdated (N) is the timestamp (in seconds since the genesis block) of the last peer status update blacklisted (B) is true if the peer is blacklisted services (A) is an array of strings with the services the node provides blacklistingCause (S) is the cause of blacklisting (if blacklisted is true ) announcedAddress (S) is the name that the peer announced to the network (could be a DNS name, IP address, or any other string) application (S) is the name of the software application, typically NRS state (N) defines the state of the peer: 0 for NON-cONNECTED, 1 for CONNECTED, or 2 for DISCONNECTED shareAddress (B) is true if the address is allowed to be shared with other peers inbound (B) is true if the peer has made a request to this node inboundWebSocket (B) is true if an inbound websocket has been established from this node outboundWebSocket (B) is true if an outbound websocket has been established to this node lastConnectAttempt (B) is the timestamp (in seconds since the genesis block) of the last connection attempt to the peer requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Peer example. Get Peers Get a list of peer IP addresses. Request: requestType is getPeers active is true for active (not NON-cONNECTED) peers only (optional, if true overrides state ) state is the state of the peers, one of NON-cONNECTED , -cONNECTED_, or -dISCONNECTED_ (optional) includePeerInfo is true to include peer detail as in Get Peer service to filter on a specific service Note: If neither active nor state is specified, all known peers are retrieved. Response: peers (A) is an array of peer addresses requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Peers example. Set API Proxy Peer Set the remote node to use when in roaming and light client modes. POST only. Request: requestType is setAPIProxyPeer peer is the IP address or domain name of the peer (plus optional port) adminPassword is a string with the admin password (optional) Response: downloadedVolume (N) is the number of bytes downloaded by the peer address (S) the IP address or DNS name of the peer weight (N) is the peer's weight value uploadedVolume (N) is the number of bytes uploaded by the peer version (S) is the version of the software running on the peer platform (S) is a string representing the peer's platform blockchainState (S) is a string describing the state of the blockchain in the peer lastUpdated (N) is the timestamp (in seconds since the genesis block) of the last peer status update blacklisted (B) is true if the peer is blacklisted services (A) is an array of strings with the services the node provides apiPort (N) is the API access port of the peer apiSSLPort (N) is the SSL API access port of the peer blacklistingCause (S) is the cause of blacklisting (if blacklisted is true ) announcedAddress (S) is the name that the peer announced to the network (could be a DNS name, IP address, or any other string) application (S) is the name of the software application, typically NRS state (N) defines the state of the peer: 0 for NON-CONNECTED, 1 for CONNECTED, or 2 for DISCONNECTED shareAddress (B) is true if the address is allowed to be shared with other peers inbound (B) is true if the peer has made a request to this node inboundWebSocket (B) is true if an inbound websocket has been established from this node outboundWebSocket (B) is true if an outbound websocket has been established to this node lastConnectAttempt (B) is the timestamp (in seconds since the genesis block) of the last connection attempt to the peer requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Set API Proxy Peer example.","title":"Networking"},{"location":"api/networking/#networking-operations","text":"","title":"Networking Operations"},{"location":"api/networking/#add-peer","text":"Add a peer to the list of known peers and attempt to connect to it. Password protected like the Debug Operations . POST only. Request: requestType is addPeer peer is the IP address or domain name of the peer (plus optional port) Response: refer to Get Peer isNewlyAdded is true if the peer was not already known, omitted otherwise Example: Refer to Add Peer example.","title":"Add Peer"},{"location":"api/networking/#blacklist-api-proxy-peer","text":"Blacklist a remote node from the UI, so it won't be used when in roaming and light client modes. POST only. Request: requestType is blacklistAPIProxyPeer peer is the IP address or domain name of the peer (plus optional port) adminPassword is a string with the admin password (optional) Response: done (B) is true if the peer is blacklisted requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Blacklist API Proxy Peer example.","title":"Blacklist API Proxy Peer"},{"location":"api/networking/#blacklist-peer","text":"Blacklist a peer for the default blacklisting period. Password protected like the Debug Operations . POST only. Request: requestType is blacklistPeer peer is the IP address or domain name of the peer (plus optional port) Response: done (B) is true if the peer is blacklisted requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Blacklist Peer example.","title":"Blacklist Peer"},{"location":"api/networking/#get-inbound-peers","text":"Get all peers that have sent a request to this peer in the last 30 minutes. Request: requestType is getInboundPeers includePeerInfo is true to include peer information, otherwise include only the address (optional) Response: peers (A) is an array of peer addresses or peer objects (refer to Get Peer for details) depending on includePeerInfo requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Inbound Peers example.","title":"Get Inbound Peers"},{"location":"api/networking/#get-my-info","text":"Get hostname and address of the requesting node. Request: requestType is getMyInfo Response: host (S) is the node hostname address (S) is the node address requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get My Info example.","title":"Get My Info"},{"location":"api/networking/#get-peer","text":"Get information about a given peer. Request: requestType is getPeer peer is the IP address or domain name of the peer (plus optional port) Response: hallmark (S) is the hex string of the peer's hallmark, if it is defined downloadedVolume (N) is the number of bytes downloaded by the peer address (S) the IP address or DNS name of the peer weight (N) is the peer's weight value uploadedVolume (N) is the number of bytes uploaded by the peer version (S) is the version of the software running on the peer platform (S) is a string representing the peer's platform lastUpdated (N) is the timestamp (in seconds since the genesis block) of the last peer status update blacklisted (B) is true if the peer is blacklisted services (A) is an array of strings with the services the node provides blacklistingCause (S) is the cause of blacklisting (if blacklisted is true ) announcedAddress (S) is the name that the peer announced to the network (could be a DNS name, IP address, or any other string) application (S) is the name of the software application, typically NRS state (N) defines the state of the peer: 0 for NON-cONNECTED, 1 for CONNECTED, or 2 for DISCONNECTED shareAddress (B) is true if the address is allowed to be shared with other peers inbound (B) is true if the peer has made a request to this node inboundWebSocket (B) is true if an inbound websocket has been established from this node outboundWebSocket (B) is true if an outbound websocket has been established to this node lastConnectAttempt (B) is the timestamp (in seconds since the genesis block) of the last connection attempt to the peer requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Peer example.","title":"Get Peer"},{"location":"api/networking/#get-peers","text":"Get a list of peer IP addresses. Request: requestType is getPeers active is true for active (not NON-cONNECTED) peers only (optional, if true overrides state ) state is the state of the peers, one of NON-cONNECTED , -cONNECTED_, or -dISCONNECTED_ (optional) includePeerInfo is true to include peer detail as in Get Peer service to filter on a specific service Note: If neither active nor state is specified, all known peers are retrieved. Response: peers (A) is an array of peer addresses requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Peers example.","title":"Get Peers"},{"location":"api/networking/#set-api-proxy-peer","text":"Set the remote node to use when in roaming and light client modes. POST only. Request: requestType is setAPIProxyPeer peer is the IP address or domain name of the peer (plus optional port) adminPassword is a string with the admin password (optional) Response: downloadedVolume (N) is the number of bytes downloaded by the peer address (S) the IP address or DNS name of the peer weight (N) is the peer's weight value uploadedVolume (N) is the number of bytes uploaded by the peer version (S) is the version of the software running on the peer platform (S) is a string representing the peer's platform blockchainState (S) is a string describing the state of the blockchain in the peer lastUpdated (N) is the timestamp (in seconds since the genesis block) of the last peer status update blacklisted (B) is true if the peer is blacklisted services (A) is an array of strings with the services the node provides apiPort (N) is the API access port of the peer apiSSLPort (N) is the SSL API access port of the peer blacklistingCause (S) is the cause of blacklisting (if blacklisted is true ) announcedAddress (S) is the name that the peer announced to the network (could be a DNS name, IP address, or any other string) application (S) is the name of the software application, typically NRS state (N) defines the state of the peer: 0 for NON-CONNECTED, 1 for CONNECTED, or 2 for DISCONNECTED shareAddress (B) is true if the address is allowed to be shared with other peers inbound (B) is true if the peer has made a request to this node inboundWebSocket (B) is true if an inbound websocket has been established from this node outboundWebSocket (B) is true if an outbound websocket has been established to this node lastConnectAttempt (B) is the timestamp (in seconds since the genesis block) of the last connection attempt to the peer requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Set API Proxy Peer example.","title":"Set API Proxy Peer"},{"location":"api/overview/","text":"General Notes Genesis Block Many API requests make reference to the genesis block. FYI, the genesis block's ID is 4777664216118977193 . Sending messages, selling aliases, and leasing balances to the Genesis account are not allowed. Flexible Account IDs All API requests that require an account ID accept either an account number or the corresponding Reed-Solomon address . Quantity Units BLX, NQT and QNT The Blue0x token, BLX, is used to quantify value within the network and a certain amount of BLX is required, as a fee, for each transaction within the network. This fee goes to the node that forges (generates) the new block containing the transaction that is then accepted into the blockchain. One billion BLX were created in the Genesis Block , and 100,000 BLX were then distributed to NXT owners as per the Jelurida license agreement. The Blue0x (BLX) blockchain was created on May 7, 2021 at 12:34:00. The Blue0x system can be thought of as a network owned by all who posses BLX. In this sense, BLX quantifies ownership of or stake in the system. Stakeholders are entitled to forge blocks and collect transaction fees in proportion to the amount of BLX they possess. Seperate assets and currencies, such as USDX, are created within the Blue0x network. The amount of these assets and currencies are represented as integers in units of QNT, and are priced in NQT per QNT. Creating Unsigned Transactions All API requests that create a new transaction will accept either a secretPhrase or a publicKey parameter: If secretPhrase is supplied, a transaction is created, signed at the server, and broadcast by the server as usual. If only a publicKey parameter is supplied as a 64-digit (32-byte) hex string, the transaction will be prepared by the server and returned in the JSON response as transactionJSON without a signature. This JSON object along with secretPhrase can then be supplied to Sign Transaction as unsignedTransactionJSON and the resulting signed transactionJSON can then be supplied to Broadcast Transaction . This sequence allows for offline signing of transactions so that secretPhrase never needs to be exposed. unsignedTransactionBytes may be used instead of unsigned transactionJSON when there is no encrypted message. Messages to be encrypted require the secretPhrase for encryption and so cannot be included in unsignedTransactionBytes . Escrow Operations All API requests that create a new transaction will accept an optional referencedTransactionFullHash parameter which creates a chained transaction, meaning that the new transaction cannot be confirmed unless the referenced transaction is also confirmed. This feature allows a simple way of transaction escrow: Alice prepares and signs a transaction A, but doesn't broadcast it by setting the broadcast parameter to false . She sends to Bob the unsignedTransactionBytes , the fullHash of the transaction, and the signatureHash . All of those are included in the JSON returned by the API request. (Warning: make sure not to send the signed transactionBytes , or the signature itself, as then Bob can just broadcast transaction A himself). Bob prepares, signs and broadcasts transaction B, setting the referencedTransactionFullHash parameter to the fullHash of A provided by Alice. He can verify that this hash indeed belongs to the transaction he expects from Alice, by using Calculate Full Hash , which takes unsignedTransactionBytes and signatureHash (both of which Alice has also sent to Bob). He can also use Parse Transaction to decode the unsigned bytes and inspect all transaction fields. Transaction B is accepted in the unconfirmed transaction pool, but as long as A is still missing, B will not be confirmed, i.e. will not be included in the blockchain. If A is never submitted, B will eventually expire -- so Bob should make sure to set a long enough deadline, such as the maximum of 32767 minutes. Once in the unconfirmed transactions pool, Bob has no way of recalling B back. So now Alice can safely submit her transaction A, by just broadcasting the signedTransactionBytes she got in the first step. Transaction A will get included in the blockchain first, and in the next block Bob's transaction B will also be included. Note that while the above scheme is good enough for a simple escrow, the blockchain does not enforce that if A is included, B will also be included. It may happen due to forks and blockchain reorganization, that B never gets a chance to be included and expires unconfirmed, while A still remains in the blockchain. However, it is not practically possible for Bob to intentionally cause such chain of events and to prevent B from being confirmed. Prunable Data Prunable data can be removed from the blockchain without affecting the integrity of the blockchain. When a transaction containing prunable data is created, only the 32-byte sha256 hash of the prunable data is included in the transactionBytes , not the prunable data itself. The non-prunable signed transactionBytes are used to verify the signature and to generate the transaction's fullHash and ID; when the prunable part of the transaction is removed at a later time, none of these operations are affected. Prunable data has a predetermined minimum lifetime of two weeks (24 hours on the Testnet) from the timestamp of the transaction. Transactions and blocks received from peer nodes are not accepted if prunable data is missing before this time has elapsed. After this time has elapsed, prunable data is no longer included with transactions and blocks transmitted to peer nodes, and is no longer included in the transaction JSON returned by general-purpose API calls such as Get Transaction; the only way to retrieve it, if still available, is through special-purpose API calls such as Get Prunable Message. Expired prunable data remains stored in the blockchain until removed at the same time derived tables are trimmed, which occurs automatically every 1000 blocks by default. Use Trim Derived Tables to remove expired prunable data immediately. Prunable data can be preserved on a node beyond the predetermined minimum lifetime by setting the nxt.maxPrunableLifetime property to a larger value than two weeks or to -1 to preserve it indefinitely. To force the node to include such preserved prunable data when transactions and blocks are transmitted to peer nodes, set the nxt.includeExpiredPrunables property to true , thus making it an archival node. Currently, there are two varieties of prunable data in the Blue0x system: prunable Arbitrary Messages and Tagged Data . Both varities have a maximum prunable data length of 42 kilobytes. Properties Files The behavior of some API calls is affected by property settings loaded from files in the nxt/conf directory during Blue0x server intialization. This directory contains the nxt-default.properties and logging-default.properties files, both of which contain default property settings along with documentation. It is recommended not to modify default properties files because they can be overwritten during software updates. Instead, properties in the default files can be overridden by including them in optional nxt.properties and logging.properties files in the same directory. For example, a nxt.properties file can be created with the contents: nxt.isTestnet=true This causes the Blue0x server to connect to the Testnet instead of the Mainnet. Admin Password Some API functions take an adminPassword parameter, which must match the nxt.adminPassword property unless the nxt.disableAdminPassword property is set to true or the API server only listens on the localhost interface (when the nxt.apiServerHost property is set to 127.0.0.1). All Debug Operations require adminPassword since they require some kind of privilege. On some functions adminPassword is used so you can override maximum allowed value for lastIndex parameter, which is set to 100 by default by the nxt.maxAPIRecords property. Giving you the option to retrieve more than objects per request. Roaming and Light Client Modes The remote node to use when in roaming and light client modes is selected randomly, but can be changed manually in the UI, or using the Set API Proxy Peer API, or forced to a specific peer using the nxt.forceAPIProxyServerURL property. Remote nodes can be blacklisted from the UI, or using the Blacklist API Proxy Peer API. This blacklisting is independent from peer blacklisting. The API proxy blacklisting period can be set using the nxt.apiProxyBlacklistingPeriod property (default 1800000 milliseconds). API requests that require sending the secret phrase, shared key, or admin password to the server, for features like forging, shuffling, or running a funding monitor, are disabled when in roaming or light client mode.","title":"OVERVIEW"},{"location":"api/overview/#general-notes","text":"","title":"General Notes"},{"location":"api/overview/#genesis-block","text":"Many API requests make reference to the genesis block. FYI, the genesis block's ID is 4777664216118977193 . Sending messages, selling aliases, and leasing balances to the Genesis account are not allowed.","title":"Genesis Block"},{"location":"api/overview/#flexible-account-ids","text":"All API requests that require an account ID accept either an account number or the corresponding Reed-Solomon address .","title":"Flexible Account IDs"},{"location":"api/overview/#quantity-units-blx-nqt-and-qnt","text":"The Blue0x token, BLX, is used to quantify value within the network and a certain amount of BLX is required, as a fee, for each transaction within the network. This fee goes to the node that forges (generates) the new block containing the transaction that is then accepted into the blockchain. One billion BLX were created in the Genesis Block , and 100,000 BLX were then distributed to NXT owners as per the Jelurida license agreement. The Blue0x (BLX) blockchain was created on May 7, 2021 at 12:34:00. The Blue0x system can be thought of as a network owned by all who posses BLX. In this sense, BLX quantifies ownership of or stake in the system. Stakeholders are entitled to forge blocks and collect transaction fees in proportion to the amount of BLX they possess. Seperate assets and currencies, such as USDX, are created within the Blue0x network. The amount of these assets and currencies are represented as integers in units of QNT, and are priced in NQT per QNT.","title":"Quantity Units BLX, NQT and QNT"},{"location":"api/overview/#creating-unsigned-transactions","text":"All API requests that create a new transaction will accept either a secretPhrase or a publicKey parameter: If secretPhrase is supplied, a transaction is created, signed at the server, and broadcast by the server as usual. If only a publicKey parameter is supplied as a 64-digit (32-byte) hex string, the transaction will be prepared by the server and returned in the JSON response as transactionJSON without a signature. This JSON object along with secretPhrase can then be supplied to Sign Transaction as unsignedTransactionJSON and the resulting signed transactionJSON can then be supplied to Broadcast Transaction . This sequence allows for offline signing of transactions so that secretPhrase never needs to be exposed. unsignedTransactionBytes may be used instead of unsigned transactionJSON when there is no encrypted message. Messages to be encrypted require the secretPhrase for encryption and so cannot be included in unsignedTransactionBytes .","title":"Creating Unsigned Transactions"},{"location":"api/overview/#escrow-operations","text":"All API requests that create a new transaction will accept an optional referencedTransactionFullHash parameter which creates a chained transaction, meaning that the new transaction cannot be confirmed unless the referenced transaction is also confirmed. This feature allows a simple way of transaction escrow: Alice prepares and signs a transaction A, but doesn't broadcast it by setting the broadcast parameter to false . She sends to Bob the unsignedTransactionBytes , the fullHash of the transaction, and the signatureHash . All of those are included in the JSON returned by the API request. (Warning: make sure not to send the signed transactionBytes , or the signature itself, as then Bob can just broadcast transaction A himself). Bob prepares, signs and broadcasts transaction B, setting the referencedTransactionFullHash parameter to the fullHash of A provided by Alice. He can verify that this hash indeed belongs to the transaction he expects from Alice, by using Calculate Full Hash , which takes unsignedTransactionBytes and signatureHash (both of which Alice has also sent to Bob). He can also use Parse Transaction to decode the unsigned bytes and inspect all transaction fields. Transaction B is accepted in the unconfirmed transaction pool, but as long as A is still missing, B will not be confirmed, i.e. will not be included in the blockchain. If A is never submitted, B will eventually expire -- so Bob should make sure to set a long enough deadline, such as the maximum of 32767 minutes. Once in the unconfirmed transactions pool, Bob has no way of recalling B back. So now Alice can safely submit her transaction A, by just broadcasting the signedTransactionBytes she got in the first step. Transaction A will get included in the blockchain first, and in the next block Bob's transaction B will also be included. Note that while the above scheme is good enough for a simple escrow, the blockchain does not enforce that if A is included, B will also be included. It may happen due to forks and blockchain reorganization, that B never gets a chance to be included and expires unconfirmed, while A still remains in the blockchain. However, it is not practically possible for Bob to intentionally cause such chain of events and to prevent B from being confirmed.","title":"Escrow Operations"},{"location":"api/overview/#prunable-data","text":"Prunable data can be removed from the blockchain without affecting the integrity of the blockchain. When a transaction containing prunable data is created, only the 32-byte sha256 hash of the prunable data is included in the transactionBytes , not the prunable data itself. The non-prunable signed transactionBytes are used to verify the signature and to generate the transaction's fullHash and ID; when the prunable part of the transaction is removed at a later time, none of these operations are affected. Prunable data has a predetermined minimum lifetime of two weeks (24 hours on the Testnet) from the timestamp of the transaction. Transactions and blocks received from peer nodes are not accepted if prunable data is missing before this time has elapsed. After this time has elapsed, prunable data is no longer included with transactions and blocks transmitted to peer nodes, and is no longer included in the transaction JSON returned by general-purpose API calls such as Get Transaction; the only way to retrieve it, if still available, is through special-purpose API calls such as Get Prunable Message. Expired prunable data remains stored in the blockchain until removed at the same time derived tables are trimmed, which occurs automatically every 1000 blocks by default. Use Trim Derived Tables to remove expired prunable data immediately. Prunable data can be preserved on a node beyond the predetermined minimum lifetime by setting the nxt.maxPrunableLifetime property to a larger value than two weeks or to -1 to preserve it indefinitely. To force the node to include such preserved prunable data when transactions and blocks are transmitted to peer nodes, set the nxt.includeExpiredPrunables property to true , thus making it an archival node. Currently, there are two varieties of prunable data in the Blue0x system: prunable Arbitrary Messages and Tagged Data . Both varities have a maximum prunable data length of 42 kilobytes.","title":"Prunable Data"},{"location":"api/overview/#properties-files","text":"The behavior of some API calls is affected by property settings loaded from files in the nxt/conf directory during Blue0x server intialization. This directory contains the nxt-default.properties and logging-default.properties files, both of which contain default property settings along with documentation. It is recommended not to modify default properties files because they can be overwritten during software updates. Instead, properties in the default files can be overridden by including them in optional nxt.properties and logging.properties files in the same directory. For example, a nxt.properties file can be created with the contents: nxt.isTestnet=true This causes the Blue0x server to connect to the Testnet instead of the Mainnet.","title":"Properties Files"},{"location":"api/overview/#admin-password","text":"Some API functions take an adminPassword parameter, which must match the nxt.adminPassword property unless the nxt.disableAdminPassword property is set to true or the API server only listens on the localhost interface (when the nxt.apiServerHost property is set to 127.0.0.1). All Debug Operations require adminPassword since they require some kind of privilege. On some functions adminPassword is used so you can override maximum allowed value for lastIndex parameter, which is set to 100 by default by the nxt.maxAPIRecords property. Giving you the option to retrieve more than objects per request.","title":"Admin Password"},{"location":"api/overview/#roaming-and-light-client-modes","text":"The remote node to use when in roaming and light client modes is selected randomly, but can be changed manually in the UI, or using the Set API Proxy Peer API, or forced to a specific peer using the nxt.forceAPIProxyServerURL property. Remote nodes can be blacklisted from the UI, or using the Blacklist API Proxy Peer API. This blacklisting is independent from peer blacklisting. The API proxy blacklisting period can be set using the nxt.apiProxyBlacklistingPeriod property (default 1800000 milliseconds). API requests that require sending the secret phrase, shared key, or admin password to the server, for features like forging, shuffling, or running a funding monitor, are disabled when in roaming or light client mode.","title":"Roaming and Light Client Modes"},{"location":"api/phasing/","text":"Phasing Operations Approve Transaction Approve (vote for) a phased transaction. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is approveTransaction transactionFullHash is the full hash of the transaction to be approved (may be used up to 10 times per API request) revealedSecret is the secret phrase (required only for phasingVotingModel 5 , refer to Create Phasing Poll ) revealedSecretIsText is a way of specifying whether revealedSecret is text or binary. Note: This transaction will be accepted in the blockchain only if all phased transactions it is voting for are already in it. Response: Refer to Create Transaction Response . Example: Refer to Approve Transaction example. Create Phasing Poll Create a phased transaction with conditional deferred execution based on the result of a vote, on a list of linked transactions or on the revelation of a secret; or simply with unconditional deferred execution. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is any type from the Create Transaction list which is phasing-safe, indicated with italics such as -send Money_ phased is true to create a phased transaction (optional but required for all of the following parameters, which are all optional for unphased transactions) phasingFinishHeight is the block height at which the poll will finish; the transaction will be executed at this block height only if all conditions (if any) have been met, otherwise the transaction will never be executed phasingVotingModel is an integer code for the method of approval: -1 for None 0 for Vote By Account 1 for Vote By Account Balance 2 for Vote By Asset Balance 3 for Vote By Currency Balance 4 for -by Linked Transactions_ 5 for -by Secret_ phasingQuorum is the number of \"votes\" needed for transaction approval (required if phasingVotingModel >= 0 , default 0 ): 0 for voting model -1 the number of accounts for model 0 total NQT for model 1 total QNT for models 2 and 3 the number of transactions for model 4 1 for model 5 phasingMinBalance is the minimum balance (in NQT or QNT) required for voting (optional, default 0 ) phasingMinBalanceModel is (required if phasingMinBalance > 0 , must match phasingVotingModel when phasingVotingModel = 1 , 2 or 3 ): 1 for BLX balance 2 for an asset balance 3 for a currency balance phasingHolding is the asset or currency ID (required if phasingMinBalanceModel = 2 or 3 ) phasingWhitelisted is the account ID of an account allowed to vote for the transaction; once used, only whitelisted accounts are allowed to vote (optional, may be used up to ten times per API request) phasingLinkedFullHash is the full hash of a transaction that must be in the blockchain at the phasingFinishHeight ; transactions already in the blockchain before the acceptance of the phased transaction can also be linked, as long as they are not more than 60 days old, or themselves phased transactions (required only for voting model 4 , may be used up to ten times per API request) phasingHashedSecret is the hash of a secret phrase (up to 100 bytes long) required for approval (required only for voting model 5 ) phasingHashedSecretAlgorithm is the hash function used: 2 for SHA256, 6 for RIPEMD160 and 62 for SHA256 followed by RIPEMD160, according to Get Constants (required for a phasingHashedSecret ) Note: When a balance affects the poll result, the result depends only on the balance (including pending outgoing phased transfers) computed just prior to the finish height. Response: Refer to Create Transaction Response . Example: Refer to Create Phasing Poll example. Get Account Phased Transaction Count Get the number of pending phased transactions associated with an account given the account ID. Request: requestType is getAccountPhasedTransactionCount account is the account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfPhasedTransactions (N) is the number of pending phased transactions lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Phased Transaction Count example. Get Account Phased Transactions Get pending phased transactions associated with an account given the account ID in reverse chronological creation order. Request: requestType is getAccountPhasedTransactions account is the account ID firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for details. Example: Refer to Get Account Phased Transactions example. Get Asset Phased Transactions Get pending phased transactions based on an asset in reverse chronological creation order. These transactions can be considered transaction approval requests. Request: requestType is getAssetPhasedTransactions asset is the asset ID account is an account ID of the account that created the phased transactions (optional) withoutWhitelist is true to omit phased transactions that include a whitelist (optional) firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for details. Example: Refer to Get Asset Phased Transactions example. Get Currency Phased Transactions Get pending phased transactions based on a currency in reverse chronological creation order. These transactions can be considered transaction approval requests. Request: requestType is getCurrencyPhasedTransactions currency is the currency ID account is an account ID of the account that created the phased transactions (optional) withoutWhitelist is true to omit phased transactions that include a whitelist (optional) firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for details. Example: Refer to Get Currency Phased Transactions example. Get Linked Phased Transactions Gets the phased transactions with by-transaction voting model for a given linkedFullHash, regardless of their phasing status (pending, approved or rejected). Since the corresponding table is trimmed after finish height however, the result will not include those transactions that finished before the last trimming height. Request: requestType is getLinkedPhasedTransactions -linkedFullHash_ is the full hash of the transaction transaction requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of transactions (refer to Get Transaction for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Linked Phased Transactions example. Get Phasing Poll Get the details of a phasing poll. Request: requestType is getPhasingPoll transaction is the transaction ID of the phasing poll countVotes is true to compute the poll result while the votes are still available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transaction (S) is the transaction ID of the phasing poll account (S) is the number of the account that created the phasing poll accountRS (S) is the Reed-Solomon address of the account that created the phasing poll finishHeight (N) is the block height at which the poll finished or will finish votingModel (N) is the voting model (refer to Create Transaction Request ) quorum (S) is the minimum number of votes needed to approve the poll transactionFullHash (S) is the full hash of the phasing poll transaction finished (B) is true if the poll is finished, false otherwise (omitted if finished is false ) result (S) is the sum of the result of each account that approved (voted for) the transaction; an account's result is 1 if the voting model is 0 , 4 or 5 ; it is the NQT, asset QNT or currency QNT balance of the account if the voting model is 1 , 2 or 3 respectively; however, the result is 0 if minBalance is not met approved (B) is true if the poll was approved, false otherwise minBalance (S) is the required minimum balance of voting accounts to be eligible to vote minBalanceModel (N) is the minimum balance model (refer to Create Transaction Request ) hashedSecret (S) is the hash of a secret that must be included in each approval (vote) transaction for the approval to be accepted (refer to Create Transaction Request ) -linkedFullHashes_ (A) is an array of full hashes of linked transactions (omitted if votingModel != 4 ) whitelist (A) is an array of whitelist objects containing the following two fields (omitted if votingModel != 5 ): whitelisted (S) is the number of the whitelisted account whitelistedRS (S) is the Reed-Solomon address of the whitelisted account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Phasing Poll example. Get Phasing Poll Vote Get a cast phasing poll vote given a phased transaction ID and an account ID of a voter, if it is still available. Request: requestType is getPhasingPollVote transaction is the phased transaction ID account is the account ID of a voter in the poll requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: voter (S) is the account ID of the voter in the poll voterRS (S) is the Reed-Solomon address of the voter transaction (S) is the phased transaction ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Phasing Poll Vote example. Get Phasing Poll Votes Get all cast phasing poll votes in a phasing poll given a phased transaction ID, if they are still available. Request: requestType is getPhasingPollVotes transaction is the phased transaction ID firstIndex is a zero-based index to the first vote to retrieve (optional) lastIndex is a zero-based index to the last vote to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Phasing Poll Vote Example: Refer to Get Phasing Poll Votes example. Get Phasing Polls Get phasing poll details given multiple phased transaction IDs. Request: requestType is getPhasingPolls transaction is one of the multiple phased transaction IDs transaction is one of the multiple phased transaction IDs \u22ee countVotes is true to compute the poll result while the votes are still available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Phasing Poll . Example: Refer to Get Phasing Polls example. Get Voter Phased Transactions Get pending phased transactions which include a whitelist in reverse chronological creation order. These transactions can be considered transaction approval requests. Request: requestType is getVoterPhasedTransactions account is a whitelisted account ID included in the phased transactions firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for details. Example: Refer to Get Voter Phased Transactions example.","title":"Phasing"},{"location":"api/phasing/#phasing-operations","text":"","title":"Phasing Operations"},{"location":"api/phasing/#approve-transaction","text":"Approve (vote for) a phased transaction. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is approveTransaction transactionFullHash is the full hash of the transaction to be approved (may be used up to 10 times per API request) revealedSecret is the secret phrase (required only for phasingVotingModel 5 , refer to Create Phasing Poll ) revealedSecretIsText is a way of specifying whether revealedSecret is text or binary. Note: This transaction will be accepted in the blockchain only if all phased transactions it is voting for are already in it. Response: Refer to Create Transaction Response . Example: Refer to Approve Transaction example.","title":"Approve Transaction"},{"location":"api/phasing/#create-phasing-poll","text":"Create a phased transaction with conditional deferred execution based on the result of a vote, on a list of linked transactions or on the revelation of a secret; or simply with unconditional deferred execution. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is any type from the Create Transaction list which is phasing-safe, indicated with italics such as -send Money_ phased is true to create a phased transaction (optional but required for all of the following parameters, which are all optional for unphased transactions) phasingFinishHeight is the block height at which the poll will finish; the transaction will be executed at this block height only if all conditions (if any) have been met, otherwise the transaction will never be executed phasingVotingModel is an integer code for the method of approval: -1 for None 0 for Vote By Account 1 for Vote By Account Balance 2 for Vote By Asset Balance 3 for Vote By Currency Balance 4 for -by Linked Transactions_ 5 for -by Secret_ phasingQuorum is the number of \"votes\" needed for transaction approval (required if phasingVotingModel >= 0 , default 0 ): 0 for voting model -1 the number of accounts for model 0 total NQT for model 1 total QNT for models 2 and 3 the number of transactions for model 4 1 for model 5 phasingMinBalance is the minimum balance (in NQT or QNT) required for voting (optional, default 0 ) phasingMinBalanceModel is (required if phasingMinBalance > 0 , must match phasingVotingModel when phasingVotingModel = 1 , 2 or 3 ): 1 for BLX balance 2 for an asset balance 3 for a currency balance phasingHolding is the asset or currency ID (required if phasingMinBalanceModel = 2 or 3 ) phasingWhitelisted is the account ID of an account allowed to vote for the transaction; once used, only whitelisted accounts are allowed to vote (optional, may be used up to ten times per API request) phasingLinkedFullHash is the full hash of a transaction that must be in the blockchain at the phasingFinishHeight ; transactions already in the blockchain before the acceptance of the phased transaction can also be linked, as long as they are not more than 60 days old, or themselves phased transactions (required only for voting model 4 , may be used up to ten times per API request) phasingHashedSecret is the hash of a secret phrase (up to 100 bytes long) required for approval (required only for voting model 5 ) phasingHashedSecretAlgorithm is the hash function used: 2 for SHA256, 6 for RIPEMD160 and 62 for SHA256 followed by RIPEMD160, according to Get Constants (required for a phasingHashedSecret ) Note: When a balance affects the poll result, the result depends only on the balance (including pending outgoing phased transfers) computed just prior to the finish height. Response: Refer to Create Transaction Response . Example: Refer to Create Phasing Poll example.","title":"Create Phasing Poll"},{"location":"api/phasing/#get-account-phased-transaction-count","text":"Get the number of pending phased transactions associated with an account given the account ID. Request: requestType is getAccountPhasedTransactionCount account is the account ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfPhasedTransactions (N) is the number of pending phased transactions lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Phased Transaction Count example.","title":"Get Account Phased Transaction Count"},{"location":"api/phasing/#get-account-phased-transactions","text":"Get pending phased transactions associated with an account given the account ID in reverse chronological creation order. Request: requestType is getAccountPhasedTransactions account is the account ID firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for details. Example: Refer to Get Account Phased Transactions example.","title":"Get Account Phased Transactions"},{"location":"api/phasing/#get-asset-phased-transactions","text":"Get pending phased transactions based on an asset in reverse chronological creation order. These transactions can be considered transaction approval requests. Request: requestType is getAssetPhasedTransactions asset is the asset ID account is an account ID of the account that created the phased transactions (optional) withoutWhitelist is true to omit phased transactions that include a whitelist (optional) firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for details. Example: Refer to Get Asset Phased Transactions example.","title":"Get Asset Phased Transactions"},{"location":"api/phasing/#get-currency-phased-transactions","text":"Get pending phased transactions based on a currency in reverse chronological creation order. These transactions can be considered transaction approval requests. Request: requestType is getCurrencyPhasedTransactions currency is the currency ID account is an account ID of the account that created the phased transactions (optional) withoutWhitelist is true to omit phased transactions that include a whitelist (optional) firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for details. Example: Refer to Get Currency Phased Transactions example.","title":"Get Currency Phased Transactions"},{"location":"api/phasing/#get-linked-phased-transactions","text":"Gets the phased transactions with by-transaction voting model for a given linkedFullHash, regardless of their phasing status (pending, approved or rejected). Since the corresponding table is trimmed after finish height however, the result will not include those transactions that finished before the last trimming height. Request: requestType is getLinkedPhasedTransactions -linkedFullHash_ is the full hash of the transaction transaction requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of transactions (refer to Get Transaction for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Linked Phased Transactions example.","title":"Get Linked Phased Transactions"},{"location":"api/phasing/#get-phasing-poll","text":"Get the details of a phasing poll. Request: requestType is getPhasingPoll transaction is the transaction ID of the phasing poll countVotes is true to compute the poll result while the votes are still available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transaction (S) is the transaction ID of the phasing poll account (S) is the number of the account that created the phasing poll accountRS (S) is the Reed-Solomon address of the account that created the phasing poll finishHeight (N) is the block height at which the poll finished or will finish votingModel (N) is the voting model (refer to Create Transaction Request ) quorum (S) is the minimum number of votes needed to approve the poll transactionFullHash (S) is the full hash of the phasing poll transaction finished (B) is true if the poll is finished, false otherwise (omitted if finished is false ) result (S) is the sum of the result of each account that approved (voted for) the transaction; an account's result is 1 if the voting model is 0 , 4 or 5 ; it is the NQT, asset QNT or currency QNT balance of the account if the voting model is 1 , 2 or 3 respectively; however, the result is 0 if minBalance is not met approved (B) is true if the poll was approved, false otherwise minBalance (S) is the required minimum balance of voting accounts to be eligible to vote minBalanceModel (N) is the minimum balance model (refer to Create Transaction Request ) hashedSecret (S) is the hash of a secret that must be included in each approval (vote) transaction for the approval to be accepted (refer to Create Transaction Request ) -linkedFullHashes_ (A) is an array of full hashes of linked transactions (omitted if votingModel != 4 ) whitelist (A) is an array of whitelist objects containing the following two fields (omitted if votingModel != 5 ): whitelisted (S) is the number of the whitelisted account whitelistedRS (S) is the Reed-Solomon address of the whitelisted account lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Phasing Poll example.","title":"Get Phasing Poll"},{"location":"api/phasing/#get-phasing-poll-vote","text":"Get a cast phasing poll vote given a phased transaction ID and an account ID of a voter, if it is still available. Request: requestType is getPhasingPollVote transaction is the phased transaction ID account is the account ID of a voter in the poll requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: voter (S) is the account ID of the voter in the poll voterRS (S) is the Reed-Solomon address of the voter transaction (S) is the phased transaction ID lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Phasing Poll Vote example.","title":"Get Phasing Poll Vote"},{"location":"api/phasing/#get-phasing-poll-votes","text":"Get all cast phasing poll votes in a phasing poll given a phased transaction ID, if they are still available. Request: requestType is getPhasingPollVotes transaction is the phased transaction ID firstIndex is a zero-based index to the first vote to retrieve (optional) lastIndex is a zero-based index to the last vote to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Phasing Poll Vote Example: Refer to Get Phasing Poll Votes example.","title":"Get Phasing Poll Votes"},{"location":"api/phasing/#get-phasing-polls","text":"Get phasing poll details given multiple phased transaction IDs. Request: requestType is getPhasingPolls transaction is one of the multiple phased transaction IDs transaction is one of the multiple phased transaction IDs \u22ee countVotes is true to compute the poll result while the votes are still available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Phasing Poll . Example: Refer to Get Phasing Polls example.","title":"Get Phasing Polls"},{"location":"api/phasing/#get-voter-phased-transactions","text":"Get pending phased transactions which include a whitelist in reverse chronological creation order. These transactions can be considered transaction approval requests. Request: requestType is getVoterPhasedTransactions account is a whitelisted account ID included in the phased transactions firstIndex is a zero-based index to the first phased transaction to retrieve (optional) lastIndex is a zero-based index to the last phased transaction to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for details. Example: Refer to Get Voter Phased Transactions example.","title":"Get Voter Phased Transactions"},{"location":"api/server/","text":"Server Information Operations Event Register Create, modify or remove an event listener which can report server events via Event Wait . POST only. Request: requestType is eventRegister event is one of multiple server events from the following list of event names: (optional, default is all possible events) Block.BLOCK-GENERATED Block.BLOCK-POPPED Block.BLOCK-PUSHED Peer.ADD-INBOUND Peer.ADDED-ACTIVE-PEER Peer.BLACKLIST Peer.CHANGED-ACTIVE-PEER Peer.DEACTIVATE Peer.NEW-PEER Peer.REMOVE Peer.REMOVE-INBOUND Peer.UNBLACKLIST Transaction.ADDED-CONFIRMED-TRANSACTIONS Transaction.ADDED-UNCONFIRMED-TRANSACTIONS Transaction.REJECT-PHASED-TRANSACTION Transaction.RELEASE-PHASED-TRANSACTION Transaction.REMOVE-UNCONFIRMED-TRANSACTIONS event is one of multiple server events (optional) add is true to add events to an existing listener (optional, omit if remove is true ) remove is true to remove events from an existing listener (optional, omit if add is true ) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: To create a new event listener, omit both add and remove . To remove an existing event listener, set remove to true and omit event ; all registered events will be removed, any outstanding Event Wait will be completed and the listener will be deactivated. Note: An event listener is automatically deactivated whenever all registered events are removed or if Event Wait is not called frequently enough, according to the nxt.apiEventTimeout property. The timeout is not precise; the removal process runs every nxt.apiEventTimeout / 2 seconds, so that many extra seconds may elapse before removal; the first Event Wait call should be made immediately after registration to avoid deactivation. Note: Each API user (with a unique address) can create only one event listener. When a new one is created, it will replace an existing one. The maximum number of unique users is controlled by the nxt.maxEventUsers property. Response: registered is true if the operation completed successfully lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Event Register example. Event Wait Wait for events registered with Event Register . POST only. Request: requestType is eventWait timeout is the amount of time (in seconds) to wait for an event before the call returns (optional, default and maximum is the nxt.apiEventTimeout property) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Notes: The call returns immediately if one or more events have occurred since the last call; multiple events are all returned together. If a new call is made before the last one returns, the timeout timer resets to the new value. Event registration expires if wait calls are not made frequently enough, according to the nxt.apiEventTimeout property. Response: events (A) is an array of event objects each of which has the following fields: name (S) is the name of the event (refer to Event Register for the list of event names) ids (A) is an array of identifiers, depending on the type of event: block string identifier (S) for a block event peer network address (S) for a peer event transaction string identifier (S) for a transaction event lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Event Wait example. Get Blockchain Status Get the blockchain status. Request: requestType is getBlockchainStatus Response: currentMinRollbackHeight (N) is the current minimum rollback height numberOfBlocks (N) is the number of blocks in the blockchain (height + 1) isTestnet (B) is true if the node is connected to testnet, false otherwise includeExpiredPrunable (B) is the value of the nxt.includeExpiredPrunable property requestProcessingTime (N) is the API request processing time (in millisec) version (S) is the application version maxRollback (N) is the value of the nxt.maxRollback property lastBlock (S) is the last block ID on the blockchain application (S) is application name, typically NRS isScanning (B) is true if the blockchain is being scanned by the application, false otherwise isDownloading (B) is true if a download is in progress, false otherwise; true when a batch of more than 10 blocks at once has been downloaded from a peer, reset to false when an attempt to download more blocks from a peer does not result in any new blocks cumulativeDifficulty (S) is the cumulative difficulty lastBlockchainFeederHeight (N) is the height of the last blockchain of greatest cumulative difficulty obtained from a peer maxPrunableLifetime (N) is the maximum prunable lifetime (in seconds) time (N) is the current timestamp (in seconds since the genesis block) lastBlockchainFeeder (S) is the address or announced address of the peer providing the last blockchain of greatest cumulative difficulty blockchainState (S) Current state of this node's blockchain (UP-TO-DATE or DOWNLOADING) Example: Refer to Get Blockchain Status example. Get Constants Get all defined constants. Request: requestType is getConstants Response: maxBlockPayloadLength (N) is the maximum block payload length (in bytes) maxArbitraryMessageLength (N) is the maximum length (in bytes) of an arbitrary message maxPrunableMessageLength (N) is the maximum length (in bytes) of a prunable message maxTaggedDataDataLength (N) is the maximum length (in bytes) of tagged data maxPhasingDuration (N) is the maximum allowed phasing duration in block height epochBeginning (N) is the time in milliseconds when genesis block was created genesisAccountId (S) is the genesis account number genesisBlockId (S) is the genesis block ID transactionTypes (A) is an array of defined transaction types and subtypes (refer to the example below) transactionSubTypes (A) is an array of defined transaction subtypes and subtypes (refer to the example below) peerStates (A) is an array of defined peer states (refer to the example below) currencyTypes (A) is an array of defined currency types (refer to the example below) disabledAPIs (A) is an array of configured disabled apis (refer to the example below) apiTags (A) is an array of defined api tags (refer to the example below) disabledAPITags (A) is an array of configured disabled api tags (refer to the example below) votingModels (A) is an array of defined voting models (refer to the example below) holdingTypes (A) is an array of defined holding types (refer to the example below) minBalanceModels (A) is an array of defined minimum balance models (refer to the example below) shufflingStages (A) is an array of defined shuffling stages (refer to the example below) shufflingParticipantStates (A) is an array of defined shuffling participant states (refer to the example below) hashAlgorithms (A) is an array of defined hash algorithms (refer to the example below) mintingHashAlgorithms (A) is an array of defined minting hash algorithms (refer to the example below) phasingHashAlgorithms (A) is an array of defined phasing hash algorithms (refer to the example below) requestTypes (A) is an array of decined request types (refer to the example below) Get Plugins Get a list of all installed plugins on the server. Request: requestType is getPlugins Response: plugins (A) is an array of plugin names (S) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Plugins example. Get State Get the state of the server node and network. Request: requestType is getState includeCounts is true if the fields beginning with numberOf... are to be included (optional); password protected like the Debug Operations if true . Response: numberOfPeers (N) is the number of known peers on the network numberOfGoods (N) is the number of DGS goods in the blockchain numberOfPolls (N) is the number of polls in the blockchain numberOfUnlockedAccounts (N) is the number of unlocked accounts on this node numberOfTransfers (N) is the number of AE transfers in the blockchain includeExpiredPrunable (B) is the value of the nxt.includeExpiredPrunable property numberOfOrders (N) is the number of AE orders in the blockchain numberOfTransactions (N) is the number of transactions in the blockchain maxMemory (N) is the maximum amount of memory the node may use (in Bytes) maxRollback (N) is the value of the nxt.maxRollback property numberOfOffers (N) is the number of buy currency offers in the blockchain isDownloading (B) is true if a download is in progress, false otherwise; true when a batch of more than 10 blocks at once has been downloaded from a peer, reset to false when an attempt to download more blocks from a peer does not result in any new blocks isScanning (B) is true if this node is scanning the blockchain, false otherwise cumulativeDifficulty (S) is the current cumulative forging difficulty numberOfCurrencies (N) is the number of currencies in the blockchain numberOfAssets (N) is the number of AE assets in the blockchain numberOfPrunableMessages (N) is the number of prunable messages in the blockchain freeMemory (N) is the amount of free memory on this node (in Bytes) peerPort (N) is the port used for connecting to peers numberOfVotes (N) is the number of votes in the blockchain availableProcessors (N) is the number of processors on this node numberOfTaggedData (N) is the number of tagged data in the blockchain numberOfActiveAccountLeases (N) is the number of active account leases in the blockchain numberOfAccountLeases (N) is the total number of account leases including scheduled leases (first scheduled lease only) in the blockchain numberOfAccounts (N) is the number of accounts in the blockchain numberOfDataTags (N) is the number of data tags in the blockchain needsAdminPassword (B) is true if the nxt.disableAdminPassword property is false currentMinRollbackHeight (N) is the current minimum rollback height numberOfBlocks (N) is the number of blocks (height + 1) in the blockchain isTestnet (B) is true if the node is connected to testnet, false otherwise numberOfCurrencyTransfers (N) is the number of currency transfers in the blockchain requestProcessingTime (N) is the API request processing time (in millisec) numberOfPhasedTransactions (N) is the number of phased transactions in the blockchain version (S) is the software version on this node numberOfBidOrders (N) is the number of AE bid orders in the blockchain lastBlock (S) is the last block address totalMemory (N) is the amount of memory this node is using (in Bytes) application (S) is the name of the software running on this node (typically NRS ) numberOfAliases (N) is the number of aliases in the blockchain numberOfActivePeers (N) is the number of active peers on the network lastBlockchainFeederHeight (N) is the height of the last blockchain feeder maxPrunableLifetime (N) is the maximum prunable lifetime (in seconds) numberOfExchanges (N) is the number of currency exchanges in the blockchain numberOfTrades (N) is the number of AE trades in the blockchain numberOfPurchases (N) is the number of DGS purchases in the blockchain numberOfTags (N) is the number of DGS tags in the blockchain time (N) is the current node time (in seconds since the genesis block) numberOfAskOrders (N) is the number of AE ask orders in the blockchain lastBlockchainFeeder (S) is the announced name of the feeder of the last blockchain isOffline (B) is true if this node is connected to other peers, false otherwise Note: AE is Asset Exchange, DGS is Digital Goods Store Example: Refer to Get State example. Get Time Get the current time. Request: requestType is getTime Response: time (N) is the current time (in seconds since the genesis block). requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Time example.","title":"Server"},{"location":"api/server/#server-information-operations","text":"","title":"Server Information Operations"},{"location":"api/server/#event-register","text":"Create, modify or remove an event listener which can report server events via Event Wait . POST only. Request: requestType is eventRegister event is one of multiple server events from the following list of event names: (optional, default is all possible events) Block.BLOCK-GENERATED Block.BLOCK-POPPED Block.BLOCK-PUSHED Peer.ADD-INBOUND Peer.ADDED-ACTIVE-PEER Peer.BLACKLIST Peer.CHANGED-ACTIVE-PEER Peer.DEACTIVATE Peer.NEW-PEER Peer.REMOVE Peer.REMOVE-INBOUND Peer.UNBLACKLIST Transaction.ADDED-CONFIRMED-TRANSACTIONS Transaction.ADDED-UNCONFIRMED-TRANSACTIONS Transaction.REJECT-PHASED-TRANSACTION Transaction.RELEASE-PHASED-TRANSACTION Transaction.REMOVE-UNCONFIRMED-TRANSACTIONS event is one of multiple server events (optional) add is true to add events to an existing listener (optional, omit if remove is true ) remove is true to remove events from an existing listener (optional, omit if add is true ) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: To create a new event listener, omit both add and remove . To remove an existing event listener, set remove to true and omit event ; all registered events will be removed, any outstanding Event Wait will be completed and the listener will be deactivated. Note: An event listener is automatically deactivated whenever all registered events are removed or if Event Wait is not called frequently enough, according to the nxt.apiEventTimeout property. The timeout is not precise; the removal process runs every nxt.apiEventTimeout / 2 seconds, so that many extra seconds may elapse before removal; the first Event Wait call should be made immediately after registration to avoid deactivation. Note: Each API user (with a unique address) can create only one event listener. When a new one is created, it will replace an existing one. The maximum number of unique users is controlled by the nxt.maxEventUsers property. Response: registered is true if the operation completed successfully lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Event Register example.","title":"Event Register"},{"location":"api/server/#event-wait","text":"Wait for events registered with Event Register . POST only. Request: requestType is eventWait timeout is the amount of time (in seconds) to wait for an event before the call returns (optional, default and maximum is the nxt.apiEventTimeout property) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Notes: The call returns immediately if one or more events have occurred since the last call; multiple events are all returned together. If a new call is made before the last one returns, the timeout timer resets to the new value. Event registration expires if wait calls are not made frequently enough, according to the nxt.apiEventTimeout property. Response: events (A) is an array of event objects each of which has the following fields: name (S) is the name of the event (refer to Event Register for the list of event names) ids (A) is an array of identifiers, depending on the type of event: block string identifier (S) for a block event peer network address (S) for a peer event transaction string identifier (S) for a transaction event lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Event Wait example.","title":"Event Wait"},{"location":"api/server/#get-blockchain-status","text":"Get the blockchain status. Request: requestType is getBlockchainStatus Response: currentMinRollbackHeight (N) is the current minimum rollback height numberOfBlocks (N) is the number of blocks in the blockchain (height + 1) isTestnet (B) is true if the node is connected to testnet, false otherwise includeExpiredPrunable (B) is the value of the nxt.includeExpiredPrunable property requestProcessingTime (N) is the API request processing time (in millisec) version (S) is the application version maxRollback (N) is the value of the nxt.maxRollback property lastBlock (S) is the last block ID on the blockchain application (S) is application name, typically NRS isScanning (B) is true if the blockchain is being scanned by the application, false otherwise isDownloading (B) is true if a download is in progress, false otherwise; true when a batch of more than 10 blocks at once has been downloaded from a peer, reset to false when an attempt to download more blocks from a peer does not result in any new blocks cumulativeDifficulty (S) is the cumulative difficulty lastBlockchainFeederHeight (N) is the height of the last blockchain of greatest cumulative difficulty obtained from a peer maxPrunableLifetime (N) is the maximum prunable lifetime (in seconds) time (N) is the current timestamp (in seconds since the genesis block) lastBlockchainFeeder (S) is the address or announced address of the peer providing the last blockchain of greatest cumulative difficulty blockchainState (S) Current state of this node's blockchain (UP-TO-DATE or DOWNLOADING) Example: Refer to Get Blockchain Status example.","title":"Get Blockchain Status"},{"location":"api/server/#get-constants","text":"Get all defined constants. Request: requestType is getConstants Response: maxBlockPayloadLength (N) is the maximum block payload length (in bytes) maxArbitraryMessageLength (N) is the maximum length (in bytes) of an arbitrary message maxPrunableMessageLength (N) is the maximum length (in bytes) of a prunable message maxTaggedDataDataLength (N) is the maximum length (in bytes) of tagged data maxPhasingDuration (N) is the maximum allowed phasing duration in block height epochBeginning (N) is the time in milliseconds when genesis block was created genesisAccountId (S) is the genesis account number genesisBlockId (S) is the genesis block ID transactionTypes (A) is an array of defined transaction types and subtypes (refer to the example below) transactionSubTypes (A) is an array of defined transaction subtypes and subtypes (refer to the example below) peerStates (A) is an array of defined peer states (refer to the example below) currencyTypes (A) is an array of defined currency types (refer to the example below) disabledAPIs (A) is an array of configured disabled apis (refer to the example below) apiTags (A) is an array of defined api tags (refer to the example below) disabledAPITags (A) is an array of configured disabled api tags (refer to the example below) votingModels (A) is an array of defined voting models (refer to the example below) holdingTypes (A) is an array of defined holding types (refer to the example below) minBalanceModels (A) is an array of defined minimum balance models (refer to the example below) shufflingStages (A) is an array of defined shuffling stages (refer to the example below) shufflingParticipantStates (A) is an array of defined shuffling participant states (refer to the example below) hashAlgorithms (A) is an array of defined hash algorithms (refer to the example below) mintingHashAlgorithms (A) is an array of defined minting hash algorithms (refer to the example below) phasingHashAlgorithms (A) is an array of defined phasing hash algorithms (refer to the example below) requestTypes (A) is an array of decined request types (refer to the example below)","title":"Get Constants"},{"location":"api/server/#get-plugins","text":"Get a list of all installed plugins on the server. Request: requestType is getPlugins Response: plugins (A) is an array of plugin names (S) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Plugins example.","title":"Get Plugins"},{"location":"api/server/#get-state","text":"Get the state of the server node and network. Request: requestType is getState includeCounts is true if the fields beginning with numberOf... are to be included (optional); password protected like the Debug Operations if true . Response: numberOfPeers (N) is the number of known peers on the network numberOfGoods (N) is the number of DGS goods in the blockchain numberOfPolls (N) is the number of polls in the blockchain numberOfUnlockedAccounts (N) is the number of unlocked accounts on this node numberOfTransfers (N) is the number of AE transfers in the blockchain includeExpiredPrunable (B) is the value of the nxt.includeExpiredPrunable property numberOfOrders (N) is the number of AE orders in the blockchain numberOfTransactions (N) is the number of transactions in the blockchain maxMemory (N) is the maximum amount of memory the node may use (in Bytes) maxRollback (N) is the value of the nxt.maxRollback property numberOfOffers (N) is the number of buy currency offers in the blockchain isDownloading (B) is true if a download is in progress, false otherwise; true when a batch of more than 10 blocks at once has been downloaded from a peer, reset to false when an attempt to download more blocks from a peer does not result in any new blocks isScanning (B) is true if this node is scanning the blockchain, false otherwise cumulativeDifficulty (S) is the current cumulative forging difficulty numberOfCurrencies (N) is the number of currencies in the blockchain numberOfAssets (N) is the number of AE assets in the blockchain numberOfPrunableMessages (N) is the number of prunable messages in the blockchain freeMemory (N) is the amount of free memory on this node (in Bytes) peerPort (N) is the port used for connecting to peers numberOfVotes (N) is the number of votes in the blockchain availableProcessors (N) is the number of processors on this node numberOfTaggedData (N) is the number of tagged data in the blockchain numberOfActiveAccountLeases (N) is the number of active account leases in the blockchain numberOfAccountLeases (N) is the total number of account leases including scheduled leases (first scheduled lease only) in the blockchain numberOfAccounts (N) is the number of accounts in the blockchain numberOfDataTags (N) is the number of data tags in the blockchain needsAdminPassword (B) is true if the nxt.disableAdminPassword property is false currentMinRollbackHeight (N) is the current minimum rollback height numberOfBlocks (N) is the number of blocks (height + 1) in the blockchain isTestnet (B) is true if the node is connected to testnet, false otherwise numberOfCurrencyTransfers (N) is the number of currency transfers in the blockchain requestProcessingTime (N) is the API request processing time (in millisec) numberOfPhasedTransactions (N) is the number of phased transactions in the blockchain version (S) is the software version on this node numberOfBidOrders (N) is the number of AE bid orders in the blockchain lastBlock (S) is the last block address totalMemory (N) is the amount of memory this node is using (in Bytes) application (S) is the name of the software running on this node (typically NRS ) numberOfAliases (N) is the number of aliases in the blockchain numberOfActivePeers (N) is the number of active peers on the network lastBlockchainFeederHeight (N) is the height of the last blockchain feeder maxPrunableLifetime (N) is the maximum prunable lifetime (in seconds) numberOfExchanges (N) is the number of currency exchanges in the blockchain numberOfTrades (N) is the number of AE trades in the blockchain numberOfPurchases (N) is the number of DGS purchases in the blockchain numberOfTags (N) is the number of DGS tags in the blockchain time (N) is the current node time (in seconds since the genesis block) numberOfAskOrders (N) is the number of AE ask orders in the blockchain lastBlockchainFeeder (S) is the announced name of the feeder of the last blockchain isOffline (B) is true if this node is connected to other peers, false otherwise Note: AE is Asset Exchange, DGS is Digital Goods Store Example: Refer to Get State example.","title":"Get State"},{"location":"api/server/#get-time","text":"Get the current time. Request: requestType is getTime Response: time (N) is the current time (in seconds since the genesis block). requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Time example.","title":"Get Time"},{"location":"api/shuffling/","text":"Shuffling Operations Coin shuffling can be used to perform mixing of BLX, MS currencies (unless created as non-shuffleable), or AE assets. Any account can create a new shuffling, specifying the holding to be shuffled, the shuffle amount, number of participants required, and registration deadline. Get Account Shufflings Retrieves info about shufflings for a specific account. Request: requestType is getAccountShufflings account is the account ID includeFinished is true to include completed shufflings (optional) includeHoldingInfo is true to include holding info (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) shufflings (A) is an array containing the shuffling object (refer to Get Shuffling ) Example: Refer to Get Account Shufflings example. Get All Shufflings Retrieves info about all shufflings. Request: requestType is getAllShufflings includeFinished is true to include completed shufflings (optional) includeHoldingInfo is true to include holding info (optional) finishedOnly is true to omit not yet finished shufflings (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) shufflings (A) is an array containing the shuffling object (refer to Get Shuffling ) Example: Refer to Get All Shufflings example. Get Assigned Shufflings Retrieves info about a shufflings that are currently assigned to a specific account. Request: requestType is getAssignedShufflings account is the account ID includeHoldingInfo is true to include holding info (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) shufflings (A) is an array containing the shuffling object (refer to Get Shuffling ) Example: Refer to Get Assigned Shufflings example. Get Holding Shufflings Retrieves info about shufflings for a specific holding and/or stage. Request: requestType is getHoldingShufflings holding is the holding ID (optional) stage is the stage of the shuffling (See Get Constants for type definitions) (optional) includeFinished is true to include completed shufflings (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) shufflings (A) is an array containing the shuffling object (refer to Get Shuffling ) Example: Refer to Get Holding Shufflings example. Get Shufflers Retrieves info about active shufflers on the current node. Request: requestType is getShufflers account is account ID (optional) shufflingFullHash is shuffling full hash (optional) secretPhrase is secret phrase of the account doing the shuffling (required if adminPassword is not provided) adminPassword is the admin password (required if secretPhrase is not provided) includeParticipantState to include each shuffling participant's state (optional) Response: shufflers (A) is an array containing all currently running shuffling processes on the node. account (S) is account ID accountRS (S) is the account Reed Solomon address recipient (S) is the recipient account ID to where the funds will be sent once the shuffling is completed recipientRS (S) is the recipient account Reed Solomon address to where the funds will be sent once the shuffling is completed shuffling (S) is the shuffling ID shufflingFullHash (S) is the shuffling full hash participantState (N) is the state for the participant (For more info, see shufflingParticipantStates array in Get Constants ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Shufflers example. Get Shuffling Retrieves info about a shuffling. Request: requestType is getShuffling shuffling is the shuffling ID includeHoldingInfo is true to include holding info (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: blocksRemaining (N) number of blocks remaining until current stage is finished. amount (S) the amount of holdingType to be shuffled shufflingStateHash (S) state hash of the shuffling shufflingFullHash (S) the full hash of the shuffling issuer (S) is the issuer account ID issuerRS (S) is the Reed-Solomon address of the issuer account assignee (S) is the current assignee account ID assigneeRS (S) is the Reed-Solomon address of the current assignee account shuffling (S) is the shuffling ID holding (S) is the asset or currency ID holdingType (N) is the holding type (See Get Constants for type definitions) stage (N) is the current stage of the shuffling (See Get Constants for type definitions) participantCount (N) is the number of participants required to start the shuffling registrantCount (N) is the number of registrered participants recipientPublicKeys (A) is an array of recipient public keys holdingInfo (A) is an array containing the asset or currency info (if includeHoldingInfo is true and holdingType is not Blue0x) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Shuffling example. Get Shuffling Participants Retrieves info about participants in a shuffling. Request: requestType is getShufflingParticipants shuffling is the shuffling ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: participants (A) shuffling (S) is the shuffling ID account (S) is the account ID accountRS (S) is the account Reed Solomong address state (N) is the state for the participant (For more info, see shufflingParticipantStates array in Get Constants ) nextAccount (S) is the account ID of the next account in turn nextAccountRS (S) is the account Reed Solomon address of the next account in turn requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Shuffling Participants example. Shuffling Cancel Cancels a shuffling Request: Refer to Create Transaction Request for common parameters. requestType is shufflingCancel shuffling is the shuffling ID shufflingStateHash is the state hash of the shuffling cancellingAccount is the account ID (optional) Response Refer to Create Transaction Response . Shuffling Create Creates a new shuffling. Request: Refer to Create Transaction Request for common parameters. requestType is shufflingCreate holding is the holding id (optional if holdingType is 0) holdingType is the holding type (See Get Constants for type definitions) (optional) amount is the amount of the holding to shuffle participantCount is the number of participants registrationPeriod is the number of blocks the participants have to register until the shuffle is cancelled Response Refer to Create Transaction Response . Example: Refer to Shuffling Create example. Shuffling Process Manually process the shuffling for a specific participant. Note that the shuffling must be in processing stage and the secretPhrase must match the current shuffling assignee. Request: Refer to Create Transaction Request for common parameters. requestType is shufflingProcess shuffling is the shuffling ID recipientSecretPhrase is the secret phrase of the recipient account (optional if recipientPublicKey is provided) recipientPublicKey is the public key of the recipient account (optional if recipientSecretPhrase is provided) Response Refer to Create Transaction Response . Example: Refer to Shuffling Process example. Shuffling Register Registers a new participant to an existing shuffling. The shuffling must be in stage registration. Request: Refer to Create Transaction Request for common parameters. requestType is shufflingRegister shufflingFullHash is the full hash of the shuffling to register Response Refer to Create Transaction Response . Example: Refer to Shuffling Register example. Shuffling Verify Sends a verification that an account's recipient public key is found within a shuffling. Request: Refer to Create Transaction Request for common parameters. requestType is shufflingVerify shuffling is the shuffling ID shufflingStateHash is the current state hash of the shuffle Response Refer to Create Transaction Response . Example: Refer to Shuffling Verify example. Start Shuffler Starts a automated Shuffler. Once started, the Shuffler monitors the blockchain state for transactions relevant to the specified shuffle, and automatically submits the required transactions on behalf of the user, performing shuffle processing, verification, or cancellation as needed. Request: requestType is startShuffler secretPhrase is the secret phrase of the account entering the shuffling shufflingFullHash the full hash of the shuffling recipientSecretPhrase the secret phrase of the recipient account (optional if recipientPublicKey is present) recipientPublicKey the public key of the recipient account (optional if recipientSecretPhrase is present) Response shuffling (S) is the shuffling ID shufflingFullHash (S) is the full hash of the shuffling account (S) is the account ID accountRS (S) is the account Reed Solomong address recipient (S) is the account ID of the recipient account recipientRS (S) is the account Reed Solomon address of the recipient account requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Start Shuffler example. Stop Shuffler Stops a previously started automated Shuffler. Request: requestType is stopShuffler account is the account ID (optional if shufflingFullHash or secretPhrase or adminPassword is provided) shufflingFullHash the full hash of the shuffling (optional if account or adminPassword is provided) secretPhrase is the secret phrase of the account entering the shuffling (optional if adminPassword is provided) adminPassword is the admin password (optional if secretPhrase is provided) Response stoppedShuffler (B) means the specified shuffler was stopped stoppedAllShufflers (B) means all shufflers on the node was stopped (only if adminPassword is provided in request) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Stop Shuffler example.","title":"Shuffling"},{"location":"api/shuffling/#shuffling-operations","text":"Coin shuffling can be used to perform mixing of BLX, MS currencies (unless created as non-shuffleable), or AE assets. Any account can create a new shuffling, specifying the holding to be shuffled, the shuffle amount, number of participants required, and registration deadline.","title":"Shuffling Operations"},{"location":"api/shuffling/#get-account-shufflings","text":"Retrieves info about shufflings for a specific account. Request: requestType is getAccountShufflings account is the account ID includeFinished is true to include completed shufflings (optional) includeHoldingInfo is true to include holding info (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) shufflings (A) is an array containing the shuffling object (refer to Get Shuffling ) Example: Refer to Get Account Shufflings example.","title":"Get Account Shufflings"},{"location":"api/shuffling/#get-all-shufflings","text":"Retrieves info about all shufflings. Request: requestType is getAllShufflings includeFinished is true to include completed shufflings (optional) includeHoldingInfo is true to include holding info (optional) finishedOnly is true to omit not yet finished shufflings (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) shufflings (A) is an array containing the shuffling object (refer to Get Shuffling ) Example: Refer to Get All Shufflings example.","title":"Get All Shufflings"},{"location":"api/shuffling/#get-assigned-shufflings","text":"Retrieves info about a shufflings that are currently assigned to a specific account. Request: requestType is getAssignedShufflings account is the account ID includeHoldingInfo is true to include holding info (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) shufflings (A) is an array containing the shuffling object (refer to Get Shuffling ) Example: Refer to Get Assigned Shufflings example.","title":"Get Assigned Shufflings"},{"location":"api/shuffling/#get-holding-shufflings","text":"Retrieves info about shufflings for a specific holding and/or stage. Request: requestType is getHoldingShufflings holding is the holding ID (optional) stage is the stage of the shuffling (See Get Constants for type definitions) (optional) includeFinished is true to include completed shufflings (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) adminPassword is a string with the admin password (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) shufflings (A) is an array containing the shuffling object (refer to Get Shuffling ) Example: Refer to Get Holding Shufflings example.","title":"Get Holding Shufflings"},{"location":"api/shuffling/#get-shufflers","text":"Retrieves info about active shufflers on the current node. Request: requestType is getShufflers account is account ID (optional) shufflingFullHash is shuffling full hash (optional) secretPhrase is secret phrase of the account doing the shuffling (required if adminPassword is not provided) adminPassword is the admin password (required if secretPhrase is not provided) includeParticipantState to include each shuffling participant's state (optional) Response: shufflers (A) is an array containing all currently running shuffling processes on the node. account (S) is account ID accountRS (S) is the account Reed Solomon address recipient (S) is the recipient account ID to where the funds will be sent once the shuffling is completed recipientRS (S) is the recipient account Reed Solomon address to where the funds will be sent once the shuffling is completed shuffling (S) is the shuffling ID shufflingFullHash (S) is the shuffling full hash participantState (N) is the state for the participant (For more info, see shufflingParticipantStates array in Get Constants ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Shufflers example.","title":"Get Shufflers"},{"location":"api/shuffling/#get-shuffling","text":"Retrieves info about a shuffling. Request: requestType is getShuffling shuffling is the shuffling ID includeHoldingInfo is true to include holding info (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: blocksRemaining (N) number of blocks remaining until current stage is finished. amount (S) the amount of holdingType to be shuffled shufflingStateHash (S) state hash of the shuffling shufflingFullHash (S) the full hash of the shuffling issuer (S) is the issuer account ID issuerRS (S) is the Reed-Solomon address of the issuer account assignee (S) is the current assignee account ID assigneeRS (S) is the Reed-Solomon address of the current assignee account shuffling (S) is the shuffling ID holding (S) is the asset or currency ID holdingType (N) is the holding type (See Get Constants for type definitions) stage (N) is the current stage of the shuffling (See Get Constants for type definitions) participantCount (N) is the number of participants required to start the shuffling registrantCount (N) is the number of registrered participants recipientPublicKeys (A) is an array of recipient public keys holdingInfo (A) is an array containing the asset or currency info (if includeHoldingInfo is true and holdingType is not Blue0x) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Shuffling example.","title":"Get Shuffling"},{"location":"api/shuffling/#get-shuffling-participants","text":"Retrieves info about participants in a shuffling. Request: requestType is getShufflingParticipants shuffling is the shuffling ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: participants (A) shuffling (S) is the shuffling ID account (S) is the account ID accountRS (S) is the account Reed Solomong address state (N) is the state for the participant (For more info, see shufflingParticipantStates array in Get Constants ) nextAccount (S) is the account ID of the next account in turn nextAccountRS (S) is the account Reed Solomon address of the next account in turn requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Shuffling Participants example.","title":"Get Shuffling Participants"},{"location":"api/shuffling/#shuffling-cancel","text":"Cancels a shuffling Request: Refer to Create Transaction Request for common parameters. requestType is shufflingCancel shuffling is the shuffling ID shufflingStateHash is the state hash of the shuffling cancellingAccount is the account ID (optional) Response Refer to Create Transaction Response .","title":"Shuffling Cancel"},{"location":"api/shuffling/#shuffling-create","text":"Creates a new shuffling. Request: Refer to Create Transaction Request for common parameters. requestType is shufflingCreate holding is the holding id (optional if holdingType is 0) holdingType is the holding type (See Get Constants for type definitions) (optional) amount is the amount of the holding to shuffle participantCount is the number of participants registrationPeriod is the number of blocks the participants have to register until the shuffle is cancelled Response Refer to Create Transaction Response . Example: Refer to Shuffling Create example.","title":"Shuffling Create"},{"location":"api/shuffling/#shuffling-process","text":"Manually process the shuffling for a specific participant. Note that the shuffling must be in processing stage and the secretPhrase must match the current shuffling assignee. Request: Refer to Create Transaction Request for common parameters. requestType is shufflingProcess shuffling is the shuffling ID recipientSecretPhrase is the secret phrase of the recipient account (optional if recipientPublicKey is provided) recipientPublicKey is the public key of the recipient account (optional if recipientSecretPhrase is provided) Response Refer to Create Transaction Response . Example: Refer to Shuffling Process example.","title":"Shuffling Process"},{"location":"api/shuffling/#shuffling-register","text":"Registers a new participant to an existing shuffling. The shuffling must be in stage registration. Request: Refer to Create Transaction Request for common parameters. requestType is shufflingRegister shufflingFullHash is the full hash of the shuffling to register Response Refer to Create Transaction Response . Example: Refer to Shuffling Register example.","title":"Shuffling Register"},{"location":"api/shuffling/#shuffling-verify","text":"Sends a verification that an account's recipient public key is found within a shuffling. Request: Refer to Create Transaction Request for common parameters. requestType is shufflingVerify shuffling is the shuffling ID shufflingStateHash is the current state hash of the shuffle Response Refer to Create Transaction Response . Example: Refer to Shuffling Verify example.","title":"Shuffling Verify"},{"location":"api/shuffling/#start-shuffler","text":"Starts a automated Shuffler. Once started, the Shuffler monitors the blockchain state for transactions relevant to the specified shuffle, and automatically submits the required transactions on behalf of the user, performing shuffle processing, verification, or cancellation as needed. Request: requestType is startShuffler secretPhrase is the secret phrase of the account entering the shuffling shufflingFullHash the full hash of the shuffling recipientSecretPhrase the secret phrase of the recipient account (optional if recipientPublicKey is present) recipientPublicKey the public key of the recipient account (optional if recipientSecretPhrase is present) Response shuffling (S) is the shuffling ID shufflingFullHash (S) is the full hash of the shuffling account (S) is the account ID accountRS (S) is the account Reed Solomong address recipient (S) is the account ID of the recipient account recipientRS (S) is the account Reed Solomon address of the recipient account requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Start Shuffler example.","title":"Start Shuffler"},{"location":"api/shuffling/#stop-shuffler","text":"Stops a previously started automated Shuffler. Request: requestType is stopShuffler account is the account ID (optional if shufflingFullHash or secretPhrase or adminPassword is provided) shufflingFullHash the full hash of the shuffling (optional if account or adminPassword is provided) secretPhrase is the secret phrase of the account entering the shuffling (optional if adminPassword is provided) adminPassword is the admin password (optional if secretPhrase is provided) Response stoppedShuffler (B) means the specified shuffler was stopped stoppedAllShufflers (B) means all shufflers on the node was stopped (only if adminPassword is provided in request) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Stop Shuffler example.","title":"Stop Shuffler"},{"location":"api/tagged_data/","text":"Tagged Data Operations Tagged data are similar to prunable plain messages without a recipient, but with additional searchable metadata fields. Download Tagged Data Download tagged data as a file if it is still available. Request: requestType is downloadTaggedData transaction is the transaction ID of the tagged data retrieve is true to retrieve pruned data from other nodes if not available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: The downloaded data file named nxt , unless there is an error in the request. Example: Refer to Download Tagged Data example. Extend Tagged Data Extend the expiration time of already uploaded tagged data. POST only. Request: requestType is extendTaggedData transaction is the transaction ID of the tagged data data is the tagged data (optional) file is the pathname of a data file to upload (optional if data provided) filename name description tags type channel isText Note: The data and metadata ( filename , name , description , tags , type , channel and isText ) parameters can be omitted if the tagged data has not yet expired; otherwise, the tagged data can be restored to the blockchain only if these fields have exactly the same values as when the data was uploaded (refer to Upload Tagged Data ). Note: Anyone can submit an extension, not only the original uploader. Each extend transaction increases the expiration deadline by two weeks (24 hours on Testnet). Extending an existing tagged data from another account does not change the original submitter account ID by which it is indexed and searchable. Response: Refer to Create Transaction Response . Example: Refer to Extend Tagged Data example. Get Account Tagged Data Get all available tagged data uploaded by a given account in reverse chronological order. Request: requestType is getAccountTaggedData account is the account ID includeData is true to include data (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (A) is an array of tagged data objects (refer to Get Tagged Data with hash omitted for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Tagged Data example. Get All Tagged Data Get all available tagged data in reverse chronological order. Request: requestType is getAllTaggedData includeData is true to include data (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (A) is an array of tagged data objects (refer to Get Tagged Data with hash omitted for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Tagged Data example. Get Channel Tagged Data Get available tagged data by channel, optionally filtered by account, in reverse chronological order. Request: requestType is getChannelTaggedData channel is the channel string account is an account ID (optional) includeData is true to include data (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (A) is an array of tagged data objects (refer to Get Tagged Data with hash omitted for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Channel Tagged Data example. Get Data Tag Count Get the total number of distinct available data tags. Request: requestType is getDataTagCount requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfDataTags (N) is the total number of distinct data tags lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Data Tag Count example. Get Data Tags Get the distinct tags of all available tagged data, with the number of uses of each tag, in order of number of uses, then alphabetical order. Request: requestType is getDataTags firstIndex is a zero-based index to the first tag to retrieve (optional) lastIndex is a zero-based index to the last tag to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: tags (A) is an array of tag objects including the fields: tag (S) is a tag word count (N) is the number of uses of tag among all tagged data lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Data Tags example. Get Data Tags Like Prefix search of available data tags, return in alphabetical order. Request: requestType is getDataTagsLike tagPrefix is the prefix to search for (2 character minimum) among all data tags firstIndex is a zero-based index to the first tag to retrieve (optional) lastIndex is a zero-based index to the last tag to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: tags (A) is an array of tag objects including the fields: tag (S) is a tag word count (N) is the number of uses of tag among all tagged data lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Data Tags Like example. Get Tagged Data Get available tagged data given a transaction ID. Request: requestType is getTaggedData transaction is the transaction ID includeData is true to include data (optional) retrieve is true to retrieve pruned data from other nodes if not available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (S) is the tagged data hash (S) is the hash of the tagged data filename (S) is the metadata filename field name (S) is the metadata name field description (S) is the metadata description field tags (S) is the metadata tags field parsedTags (A) is an array of tag words (S) parsed from tags type (S) is the metadata type field channel (S) is the metadata channel field isText (B) is the metadata isText field account (S) is the number of the account that originally uploaded the tagged data accountRS (S) is the Reed-Solomon address of the uploading account transaction (S) is the transaction ID transactionTimestamp (N) is the transaction timestamp (in seconds since the genesis block) blockTimestamp (N) is the block timestamp (in seconds since the genesis block) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: Refer to Upload Tagged Data for details about the data and metadata ( filename , name , description , tags , type , channel and isText ) fields. Example: Refer to Get Tagged Data example. Get Tagged Data Extend Transactions Retrieves all tagged data extend transactions for a given tagged data upload transaction. Request: requestType is getTaggedDataExtendTransactions requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: extendTransactions (A) is an array of transactions requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Tagged Data Extend Transactions example. Search Tagged Data Full text search on available tagged data name, description and tags; optionally filtered by tag, channel or uploading account; return in reverse relevance order. Request: requestType is searchTaggedData query is a full text query on the metadata fields name (S), description (S) and tags (S) in the standard Lucene syntax tag is a word in the tags string (optional) channel is a channel string (optional) account is an account ID (optional) includeData is true to include data (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (A) is an array of tagged data objects (refer to Get Tagged Data with hash omitted for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Tagged Data example. Upload Tagged Data Upload and broadcast new tagged data. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is uploadTaggedData data is the data (optional) file is the pathname of a data file to upload (optional if data provided) filename is a filename to associate with data (optional if file uploaded in which case the uploaded filename is always used) name is the name or title of data (optional if file uploaded in which case the uploaded filename is used, but name takes precedence if provided) description is a description of data (optional) tags is a list of up to 5 words from 3 to 20 characters long and separated by spaces and/or commas, describing the actual content of data ; for example: audio,mp3,classical (optional) type is the mime type of data such as torrent , pdf , doc , image , etc. (optional) channel is a data feed label such as pirate bay torrents , wikileaks , etc. (optional) isText is false if data is a hex string (optional) Note: The maximum length of data plus all associated metadata is 42 kilobytes. The maximum length of description is 1000 bytes. The maximum length of the other metadata ( name , tags , type , channel and filename ) is 100 bytes each. Response: Refer to Create Transaction Response . Example: Refer to Upload Tagged Data example. Verify Tagged Data Verify expired tagged data downloaded from another node, against the hash in the blockchain. Request: requestType is verifyTaggedData transaction is the transaction ID of the tagged data data is the tagged data (optional) file is the pathname of a data file to upload (optional if data provided) filename name description tags type channel isText requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: The data and metadata ( filename , name , description , tags , type , channel and isText ) must have exactly the same values as when the data was uploaded (refer to Upload Tagged Data ). Response: verify (B) is true if the hash of the provided data and metadata matches the hash in the blockchain hash (S) is the hash of the tagged data lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) version.TaggedDataUpload (N) is 1 , the version number Note: This call returns an error if there is a hash mismatch. Example: Refer to Verify Tagged Data example.","title":"Tagged Data"},{"location":"api/tagged_data/#tagged-data-operations","text":"Tagged data are similar to prunable plain messages without a recipient, but with additional searchable metadata fields.","title":"Tagged Data Operations"},{"location":"api/tagged_data/#download-tagged-data","text":"Download tagged data as a file if it is still available. Request: requestType is downloadTaggedData transaction is the transaction ID of the tagged data retrieve is true to retrieve pruned data from other nodes if not available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: The downloaded data file named nxt , unless there is an error in the request. Example: Refer to Download Tagged Data example.","title":"Download Tagged Data"},{"location":"api/tagged_data/#extend-tagged-data","text":"Extend the expiration time of already uploaded tagged data. POST only. Request: requestType is extendTaggedData transaction is the transaction ID of the tagged data data is the tagged data (optional) file is the pathname of a data file to upload (optional if data provided) filename name description tags type channel isText Note: The data and metadata ( filename , name , description , tags , type , channel and isText ) parameters can be omitted if the tagged data has not yet expired; otherwise, the tagged data can be restored to the blockchain only if these fields have exactly the same values as when the data was uploaded (refer to Upload Tagged Data ). Note: Anyone can submit an extension, not only the original uploader. Each extend transaction increases the expiration deadline by two weeks (24 hours on Testnet). Extending an existing tagged data from another account does not change the original submitter account ID by which it is indexed and searchable. Response: Refer to Create Transaction Response . Example: Refer to Extend Tagged Data example.","title":"Extend Tagged Data"},{"location":"api/tagged_data/#get-account-tagged-data","text":"Get all available tagged data uploaded by a given account in reverse chronological order. Request: requestType is getAccountTaggedData account is the account ID includeData is true to include data (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (A) is an array of tagged data objects (refer to Get Tagged Data with hash omitted for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Account Tagged Data example.","title":"Get Account Tagged Data"},{"location":"api/tagged_data/#get-all-tagged-data","text":"Get all available tagged data in reverse chronological order. Request: requestType is getAllTaggedData includeData is true to include data (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (A) is an array of tagged data objects (refer to Get Tagged Data with hash omitted for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get All Tagged Data example.","title":"Get All Tagged Data"},{"location":"api/tagged_data/#get-channel-tagged-data","text":"Get available tagged data by channel, optionally filtered by account, in reverse chronological order. Request: requestType is getChannelTaggedData channel is the channel string account is an account ID (optional) includeData is true to include data (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (A) is an array of tagged data objects (refer to Get Tagged Data with hash omitted for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Channel Tagged Data example.","title":"Get Channel Tagged Data"},{"location":"api/tagged_data/#get-data-tag-count","text":"Get the total number of distinct available data tags. Request: requestType is getDataTagCount requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: numberOfDataTags (N) is the total number of distinct data tags lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Data Tag Count example.","title":"Get Data Tag Count"},{"location":"api/tagged_data/#get-data-tags","text":"Get the distinct tags of all available tagged data, with the number of uses of each tag, in order of number of uses, then alphabetical order. Request: requestType is getDataTags firstIndex is a zero-based index to the first tag to retrieve (optional) lastIndex is a zero-based index to the last tag to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: tags (A) is an array of tag objects including the fields: tag (S) is a tag word count (N) is the number of uses of tag among all tagged data lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Data Tags example.","title":"Get Data Tags"},{"location":"api/tagged_data/#get-data-tags-like","text":"Prefix search of available data tags, return in alphabetical order. Request: requestType is getDataTagsLike tagPrefix is the prefix to search for (2 character minimum) among all data tags firstIndex is a zero-based index to the first tag to retrieve (optional) lastIndex is a zero-based index to the last tag to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: tags (A) is an array of tag objects including the fields: tag (S) is a tag word count (N) is the number of uses of tag among all tagged data lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Data Tags Like example.","title":"Get Data Tags Like"},{"location":"api/tagged_data/#get-tagged-data","text":"Get available tagged data given a transaction ID. Request: requestType is getTaggedData transaction is the transaction ID includeData is true to include data (optional) retrieve is true to retrieve pruned data from other nodes if not available (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (S) is the tagged data hash (S) is the hash of the tagged data filename (S) is the metadata filename field name (S) is the metadata name field description (S) is the metadata description field tags (S) is the metadata tags field parsedTags (A) is an array of tag words (S) parsed from tags type (S) is the metadata type field channel (S) is the metadata channel field isText (B) is the metadata isText field account (S) is the number of the account that originally uploaded the tagged data accountRS (S) is the Reed-Solomon address of the uploading account transaction (S) is the transaction ID transactionTimestamp (N) is the transaction timestamp (in seconds since the genesis block) blockTimestamp (N) is the block timestamp (in seconds since the genesis block) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: Refer to Upload Tagged Data for details about the data and metadata ( filename , name , description , tags , type , channel and isText ) fields. Example: Refer to Get Tagged Data example.","title":"Get Tagged Data"},{"location":"api/tagged_data/#get-tagged-data-extend-transactions","text":"Retrieves all tagged data extend transactions for a given tagged data upload transaction. Request: requestType is getTaggedDataExtendTransactions requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: extendTransactions (A) is an array of transactions requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Tagged Data Extend Transactions example.","title":"Get Tagged Data Extend Transactions"},{"location":"api/tagged_data/#search-tagged-data","text":"Full text search on available tagged data name, description and tags; optionally filtered by tag, channel or uploading account; return in reverse relevance order. Request: requestType is searchTaggedData query is a full text query on the metadata fields name (S), description (S) and tags (S) in the standard Lucene syntax tag is a word in the tags string (optional) channel is a channel string (optional) account is an account ID (optional) includeData is true to include data (optional) firstIndex is a zero-based index to the first tagged data to retrieve (optional) lastIndex is a zero-based index to the last tagged data to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: data (A) is an array of tagged data objects (refer to Get Tagged Data with hash omitted for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Tagged Data example.","title":"Search Tagged Data"},{"location":"api/tagged_data/#upload-tagged-data","text":"Upload and broadcast new tagged data. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is uploadTaggedData data is the data (optional) file is the pathname of a data file to upload (optional if data provided) filename is a filename to associate with data (optional if file uploaded in which case the uploaded filename is always used) name is the name or title of data (optional if file uploaded in which case the uploaded filename is used, but name takes precedence if provided) description is a description of data (optional) tags is a list of up to 5 words from 3 to 20 characters long and separated by spaces and/or commas, describing the actual content of data ; for example: audio,mp3,classical (optional) type is the mime type of data such as torrent , pdf , doc , image , etc. (optional) channel is a data feed label such as pirate bay torrents , wikileaks , etc. (optional) isText is false if data is a hex string (optional) Note: The maximum length of data plus all associated metadata is 42 kilobytes. The maximum length of description is 1000 bytes. The maximum length of the other metadata ( name , tags , type , channel and filename ) is 100 bytes each. Response: Refer to Create Transaction Response . Example: Refer to Upload Tagged Data example.","title":"Upload Tagged Data"},{"location":"api/tagged_data/#verify-tagged-data","text":"Verify expired tagged data downloaded from another node, against the hash in the blockchain. Request: requestType is verifyTaggedData transaction is the transaction ID of the tagged data data is the tagged data (optional) file is the pathname of a data file to upload (optional if data provided) filename name description tags type channel isText requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: The data and metadata ( filename , name , description , tags , type , channel and isText ) must have exactly the same values as when the data was uploaded (refer to Upload Tagged Data ). Response: verify (B) is true if the hash of the provided data and metadata matches the hash in the blockchain hash (S) is the hash of the tagged data lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) version.TaggedDataUpload (N) is 1 , the version number Note: This call returns an error if there is a hash mismatch. Example: Refer to Verify Tagged Data example.","title":"Verify Tagged Data"},{"location":"api/toc/","text":"Table of Contents General Notes Genesis Block Flexible Account IDs Quantity Units BLX, NQT and QNT Creating Unsigned Transactions Escrow Operations Prunable Data Properties Files Admin Password Roaming and Light Client Modes Create Transaction Create Transaction Request Create Transaction Response Account Operations Delete Account Property Get Account Get Account Block Count Get Account Block Ids Get Account Blocks Get Account Id Get Account Ledger Get Account Ledger Entry Get Account Lessors Get Account Properties Get Account Public Key Get Balance Get Blockchain Transactions Get Guaranteed Balance Get Unconfirmed Transaction Ids Get Unconfirmed Transactions Search Accounts Send Money Send BLX Set Account Info Set Account Property Start Funding Monitor Stop Funding Monitor Account Control Operations Get All Phasing Only Controls Get Phasing Only Control Set Phasing Only Control Alias Operations Buy / Sell Alias Buy Alias Sell Alias Set Alias Delete Alias Get Alias Get Alias Count Get Aliases Get Aliases Like Arbitrary Message System Operations Decrypt From Download Prunable Message Encrypt To Get All Prunable Messages Get Prunable Message Get Prunable Messages Get Shared Key Read Message Send Message Verify Prunable Message Asset Exchange Operations Cancel Order Cancel Ask Order Cancel Bid Order Delete Asset Shares Dividend Payment Get Account Asset Count Get Account Assets Get Account Current Order Ids Get Account Current Ask Order Ids Get Account Current Bid Order Ids Get Account Current Orders Get Account Current Ask Orders Get Account Current Bid Orders Get All Assets Get All Open Orders Get All Open Ask Orders Get All Open Bid Orders Get All Trades Get Asset Get Asset Account Count Get Asset Accounts Get Asset Deletes Get Asset Dividends Get Asset Ids Get Asset Transfers Get Expected Asset Transfers Get Assets Get Assets By Issuer Get Expected Asset Deletes Get Order Get Ask Order Get Bid Order Get Order Ids Get Ask Order Ids Get Bid Order Ids Get Orders Get Ask Orders Get Bid Orders Get Expected Ask Orders Get Expected Bid Orders Get Expected Order Cancellations Get Last Trades Get Order Trades Get Trades Issue Asset Place Order Place Ask Order Place Bid Order Search Assets Transfer Asset Block Operations Get Block Get Block Id Get Blocks Get EC Block Digital Goods Store Operations DGS Delisting DGS Delivery DGS Feedback DGS Listing DGS Price Change DGS Purchase DGS Quantity Change DGS Refund Get DGS Expired Purchases Get DGS Good Get DGS Goods Get DGS Goods Count Get DGS Goods Purchase Count Get DGS Goods Purchases Get DGS Pending Purchases Get DGS Purchase Get DGS Purchase Count Get DGS Purchases Get DGS Tag Count Get DGS Tags Get DGS Tags Like Search DGS Goods Forging Operations Start / Stop / Get Forging Get Forging Start Forging Stop Forging Lease Balance Get Next Block Generators Hallmark Operations Decode Hallmark Mark Host Generate Hallmark Monetary System Operations Can Delete Currency Currency Buy / Sell Currency Buy Currency Sell Currency Mint Currency Reserve Claim Currency Reserve Increase Delete Currency Get Account Currencies Get Account Currency Count Get Account Exchange Requests Get Expected Exchange Requests Get Funding Monitor Get All Currencies Get All Exchanges Get Available To Buy Get Available To Sell Get Buy / Sell Offers Get Buy Offers Get Sell Offers Get Expected Buy Offers Get Expected Sell Offers Get Currencies Get Currencies By Issuer Get Currency Get Currency Account Count Get Currency Accounts Get Currency Founders Get Currency Ids Get Currency Transfers Get Expected Currency Transfers Get Exchanges Get Exchanges By Exchange Request Get Exchanges By Offer Get Last Exchanges Get Minting Target Get Offer Issue Currency Publish Exchange Offer Search Currencies Transfer Currency Networking Operations Add Peer Blacklist API Proxy Peer Blacklist Peer Get Inbound Peers Get My Info Get Peer Get Peers Set API Proxy Peer Phasing Operations Approve Transaction Create Phasing Poll Get Account Phased Transaction Count Get Account Phased Transactions Get Asset Phased Transactions Get Currency Phased Transactions Get Linked Phased Transactions Get Phasing Poll Get Phasing Poll Vote Get Phasing Poll Votes Get Phasing Polls Get Voter Phased Transactions Server Information Operations Event Register Event Wait Get Blockchain Status Get Constants Get Plugins Get State Get Time Shuffling Operations Get Account Shufflings Get All Shufflings Get Assigned Shufflings Get Holding Shufflings Get Shufflers Get Shuffling Get Shuffling Participants Shuffling Cancel Shuffling Create Shuffling Process Shuffling Register Shuffling Verify Start Shuffler Stop Shuffler Tagged Data Operations Download Tagged Data Extend Tagged Data Get Account Tagged Data Get All Tagged Data Get Channel Tagged Data Get Data Tag Count Get Data Tags Get Data Tags Like Get Tagged Data Get Tagged Data Extend Transactions Search Tagged Data Upload Tagged Data Verify Tagged Data Token Operations Decode File Token Decode Token Generate File Token Generate Token Transaction Operations Broadcast Transaction Calculate Full Hash Get Expected Transactions Get Referencing Transactions Get Transaction Get Transaction Bytes Parse Transaction Retrieve Pruned Transaction Send Transaction Sign Transaction Voting System Operations Cast Vote Create Poll Get Poll Get Poll Result Get Poll Vote Get Poll Votes Get Polls Search Polls Utilities Decode QR Code Detect Mime Type Encode QR Code Full Hash To Id Hash Hex Convert Long Convert RS Convert Debug Operations Clear Unconfirmed Transactions Dump Peers Full Reset Get All Broadcasted Transactions Get All Waiting Transactions Get Log Get Stack Traces Lucene Reindex Pop Off Rebroadcast Unconfirmed Transactions Requeue Unconfirmed Transactions Retrieve Pruned Data Scan Set Logging Shutdown Trim Derived Tables","title":"TABLE OF CONTENTS"},{"location":"api/toc/#table-of-contents","text":"General Notes Genesis Block Flexible Account IDs Quantity Units BLX, NQT and QNT Creating Unsigned Transactions Escrow Operations Prunable Data Properties Files Admin Password Roaming and Light Client Modes Create Transaction Create Transaction Request Create Transaction Response Account Operations Delete Account Property Get Account Get Account Block Count Get Account Block Ids Get Account Blocks Get Account Id Get Account Ledger Get Account Ledger Entry Get Account Lessors Get Account Properties Get Account Public Key Get Balance Get Blockchain Transactions Get Guaranteed Balance Get Unconfirmed Transaction Ids Get Unconfirmed Transactions Search Accounts Send Money Send BLX Set Account Info Set Account Property Start Funding Monitor Stop Funding Monitor Account Control Operations Get All Phasing Only Controls Get Phasing Only Control Set Phasing Only Control Alias Operations Buy / Sell Alias Buy Alias Sell Alias Set Alias Delete Alias Get Alias Get Alias Count Get Aliases Get Aliases Like Arbitrary Message System Operations Decrypt From Download Prunable Message Encrypt To Get All Prunable Messages Get Prunable Message Get Prunable Messages Get Shared Key Read Message Send Message Verify Prunable Message Asset Exchange Operations Cancel Order Cancel Ask Order Cancel Bid Order Delete Asset Shares Dividend Payment Get Account Asset Count Get Account Assets Get Account Current Order Ids Get Account Current Ask Order Ids Get Account Current Bid Order Ids Get Account Current Orders Get Account Current Ask Orders Get Account Current Bid Orders Get All Assets Get All Open Orders Get All Open Ask Orders Get All Open Bid Orders Get All Trades Get Asset Get Asset Account Count Get Asset Accounts Get Asset Deletes Get Asset Dividends Get Asset Ids Get Asset Transfers Get Expected Asset Transfers Get Assets Get Assets By Issuer Get Expected Asset Deletes Get Order Get Ask Order Get Bid Order Get Order Ids Get Ask Order Ids Get Bid Order Ids Get Orders Get Ask Orders Get Bid Orders Get Expected Ask Orders Get Expected Bid Orders Get Expected Order Cancellations Get Last Trades Get Order Trades Get Trades Issue Asset Place Order Place Ask Order Place Bid Order Search Assets Transfer Asset Block Operations Get Block Get Block Id Get Blocks Get EC Block Digital Goods Store Operations DGS Delisting DGS Delivery DGS Feedback DGS Listing DGS Price Change DGS Purchase DGS Quantity Change DGS Refund Get DGS Expired Purchases Get DGS Good Get DGS Goods Get DGS Goods Count Get DGS Goods Purchase Count Get DGS Goods Purchases Get DGS Pending Purchases Get DGS Purchase Get DGS Purchase Count Get DGS Purchases Get DGS Tag Count Get DGS Tags Get DGS Tags Like Search DGS Goods Forging Operations Start / Stop / Get Forging Get Forging Start Forging Stop Forging Lease Balance Get Next Block Generators Hallmark Operations Decode Hallmark Mark Host Generate Hallmark Monetary System Operations Can Delete Currency Currency Buy / Sell Currency Buy Currency Sell Currency Mint Currency Reserve Claim Currency Reserve Increase Delete Currency Get Account Currencies Get Account Currency Count Get Account Exchange Requests Get Expected Exchange Requests Get Funding Monitor Get All Currencies Get All Exchanges Get Available To Buy Get Available To Sell Get Buy / Sell Offers Get Buy Offers Get Sell Offers Get Expected Buy Offers Get Expected Sell Offers Get Currencies Get Currencies By Issuer Get Currency Get Currency Account Count Get Currency Accounts Get Currency Founders Get Currency Ids Get Currency Transfers Get Expected Currency Transfers Get Exchanges Get Exchanges By Exchange Request Get Exchanges By Offer Get Last Exchanges Get Minting Target Get Offer Issue Currency Publish Exchange Offer Search Currencies Transfer Currency Networking Operations Add Peer Blacklist API Proxy Peer Blacklist Peer Get Inbound Peers Get My Info Get Peer Get Peers Set API Proxy Peer Phasing Operations Approve Transaction Create Phasing Poll Get Account Phased Transaction Count Get Account Phased Transactions Get Asset Phased Transactions Get Currency Phased Transactions Get Linked Phased Transactions Get Phasing Poll Get Phasing Poll Vote Get Phasing Poll Votes Get Phasing Polls Get Voter Phased Transactions Server Information Operations Event Register Event Wait Get Blockchain Status Get Constants Get Plugins Get State Get Time Shuffling Operations Get Account Shufflings Get All Shufflings Get Assigned Shufflings Get Holding Shufflings Get Shufflers Get Shuffling Get Shuffling Participants Shuffling Cancel Shuffling Create Shuffling Process Shuffling Register Shuffling Verify Start Shuffler Stop Shuffler Tagged Data Operations Download Tagged Data Extend Tagged Data Get Account Tagged Data Get All Tagged Data Get Channel Tagged Data Get Data Tag Count Get Data Tags Get Data Tags Like Get Tagged Data Get Tagged Data Extend Transactions Search Tagged Data Upload Tagged Data Verify Tagged Data Token Operations Decode File Token Decode Token Generate File Token Generate Token Transaction Operations Broadcast Transaction Calculate Full Hash Get Expected Transactions Get Referencing Transactions Get Transaction Get Transaction Bytes Parse Transaction Retrieve Pruned Transaction Send Transaction Sign Transaction Voting System Operations Cast Vote Create Poll Get Poll Get Poll Result Get Poll Vote Get Poll Votes Get Polls Search Polls Utilities Decode QR Code Detect Mime Type Encode QR Code Full Hash To Id Hash Hex Convert Long Convert RS Convert Debug Operations Clear Unconfirmed Transactions Dump Peers Full Reset Get All Broadcasted Transactions Get All Waiting Transactions Get Log Get Stack Traces Lucene Reindex Pop Off Rebroadcast Unconfirmed Transactions Requeue Unconfirmed Transactions Retrieve Pruned Data Scan Set Logging Shutdown Trim Derived Tables","title":"Table of Contents"},{"location":"api/token/","text":"Token Operations Decode File Token Validate a file token without requiring the transmission of a secret passphrase. POST only. Request: requestType is decodeFileToken file is the path to the file that was signed token is the token of the file , as generated by Generate File Token Response: account (S) is the account number that generated the token accountRS (S) is the Reed-Solomon address of the account timestamp (N) is the time (in seconds since the genesis block) that the token was generated valid (B) is true if token is valid, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) Note: Since token contains the token generator's public key and digital signature, file can be validated as signed by the owner of the public key, and the public key determines the account ID. Example: Refer to Decode File Token example. Decode Token Validate a token without requiring the transmission of a secret passphrase. Request: requestType is decodeToken website is the signed text, typically an authorized URL token is the token generated by Generate Token Response: account (S) is the account number that generated the token accountRS (S) is the Reed-Solomon address of the account timestamp (N) is the time (in seconds since the genesis block) that the token was created valid (B) is true if token is valid, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) Note: Since token contains the token generator's public key and digital signature, website can be validated as authorized by the owner of the public key, and the public key determines the account ID. Example: Refer to Decode Token example. Generate File Token Generate a file token. POST only. Request: requestType is generateFileToken secretPhrase is the passphrase of the account generating the token file is the path to the file to be signed Response: token (S) is a 160 character string representing the 100-byte token which consists of a 32-byte public key, a 4-byte timestamp, and a 64-byte digital signature account (S) is the account number corresponding to secretPhrase accountRS (S) is the Reed-Solomon address of the account timestamp (N) is the time (in seconds since the genesis block) that the token was generated valid (B) is true if token is valid, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) Note: Since token contains the token generator's public key and digital signature, the file can be validated as digitally signed by the owner of the public key using Decode File Token . Example: Refer to Generate File Token example. Generate Token Generate a token. POST only. Request: requestType is generateToken secretPhrase is the passphrase of the account generating the token website is a web site URL for which authorization should be granted, or general text to be digitally signed Note: website is typically a URL (with the leading https:// unnecessary) that an account owner signs with his secretPhrase (private key) to bind the account to the URL, but website can be any text that the owner wishes to sign. Response: token (S) is a 160 character string representing the 100-byte token which consists of a 32-byte public key, a 4-byte timestamp, and a 64-byte signature account (S) is the account number corresponding to secretPhrase accountRS (S) is the Reed-Solomon address of the account timestamp (N) is the time (in seconds since the genesis block) that the token was generated valid (B) is true if token is valid, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) Note: Since token contains the token generator's public key and signature, the website can be validated as authorized by the owner of the public key using Decode Token . Example: Refer to Generate Token example.","title":"Token"},{"location":"api/token/#token-operations","text":"","title":"Token Operations"},{"location":"api/token/#decode-file-token","text":"Validate a file token without requiring the transmission of a secret passphrase. POST only. Request: requestType is decodeFileToken file is the path to the file that was signed token is the token of the file , as generated by Generate File Token Response: account (S) is the account number that generated the token accountRS (S) is the Reed-Solomon address of the account timestamp (N) is the time (in seconds since the genesis block) that the token was generated valid (B) is true if token is valid, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) Note: Since token contains the token generator's public key and digital signature, file can be validated as signed by the owner of the public key, and the public key determines the account ID. Example: Refer to Decode File Token example.","title":"Decode File Token"},{"location":"api/token/#decode-token","text":"Validate a token without requiring the transmission of a secret passphrase. Request: requestType is decodeToken website is the signed text, typically an authorized URL token is the token generated by Generate Token Response: account (S) is the account number that generated the token accountRS (S) is the Reed-Solomon address of the account timestamp (N) is the time (in seconds since the genesis block) that the token was created valid (B) is true if token is valid, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) Note: Since token contains the token generator's public key and digital signature, website can be validated as authorized by the owner of the public key, and the public key determines the account ID. Example: Refer to Decode Token example.","title":"Decode Token"},{"location":"api/token/#generate-file-token","text":"Generate a file token. POST only. Request: requestType is generateFileToken secretPhrase is the passphrase of the account generating the token file is the path to the file to be signed Response: token (S) is a 160 character string representing the 100-byte token which consists of a 32-byte public key, a 4-byte timestamp, and a 64-byte digital signature account (S) is the account number corresponding to secretPhrase accountRS (S) is the Reed-Solomon address of the account timestamp (N) is the time (in seconds since the genesis block) that the token was generated valid (B) is true if token is valid, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) Note: Since token contains the token generator's public key and digital signature, the file can be validated as digitally signed by the owner of the public key using Decode File Token . Example: Refer to Generate File Token example.","title":"Generate File Token"},{"location":"api/token/#generate-token","text":"Generate a token. POST only. Request: requestType is generateToken secretPhrase is the passphrase of the account generating the token website is a web site URL for which authorization should be granted, or general text to be digitally signed Note: website is typically a URL (with the leading https:// unnecessary) that an account owner signs with his secretPhrase (private key) to bind the account to the URL, but website can be any text that the owner wishes to sign. Response: token (S) is a 160 character string representing the 100-byte token which consists of a 32-byte public key, a 4-byte timestamp, and a 64-byte signature account (S) is the account number corresponding to secretPhrase accountRS (S) is the Reed-Solomon address of the account timestamp (N) is the time (in seconds since the genesis block) that the token was generated valid (B) is true if token is valid, false otherwise requestProcessingTime (N) is the API request processing time (in millisec) Note: Since token contains the token generator's public key and signature, the website can be validated as authorized by the owner of the public key using Decode Token . Example: Refer to Generate Token example.","title":"Generate Token"},{"location":"api/transactions/","text":"Transaction Operations Broadcast Transaction Broadcast a transaction to the network. POST only. Request: requestType is broadcastTransaction transactionBytes is the bytecode of a signed transaction (optional) transactionJSON is the transaction object (optional if transactionBytes provided) prunableAttachmentJSON is the attachment object embedded in transactionJSON containing a prunable message (required if transactionJSON not provided because transactionBytes never includes prunable data) Response: requestProcessingTime (N) is the API request processing time (in millisec) fullHash (S) is the full hash of the signed transaction transaction (S) is the transaction ID Example: Refer to Broadcast Transaction example. Calculate Full Hash Calculate the full hash of a transaction. Request: requestType is calculateFullHash unsignedTransactionJSON is the unsigned transaction JSON object (optional) unsignedTransactionBytes are the unsigned bytes of a transaction (optional if unsignedTransactionJSON is provided) signatureHash is a SHA-256 hash of the transaction signature Response: requestProcessingTime (N) is the API request processing time (in millisec) fullHash (S) is the full hash of the signed transaction Example: Refer to Calculate Full Hash example. Get Expected Transactions Returns the non-phased unconfirmed transactions expected to be included in the next block (only), plus the phased transactions scheduled to finish in that block (whether approved or not). Request: requestType is getExpectedTransactions account is one account ID (optional) account is one account ID (optional) \u22ee requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: expectedTransactions (A) is an array of expected transactions (refer to Get Transaction for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Expected Transactions example. Get Referencing Transactions Gets the transactions referencing a given transaction id. Request: requestType is getReferencingTransactions transaction is one transaction ID firstIndex is a zero-based index to the first block ID to retrieve (optional) lastIndex is a zero-based index to the last block ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of transactions (refer to Get Transaction for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Referencing Transactions example. Get Transaction Get a transaction object given a transaction ID. Request: requestType is getTransaction transaction is the transaction ID (optional) fullHash is the full hash of the transaction (optional if transaction ID is provided) includePhasingResult is true to retrieve execution status of each phased transaction (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: sender (S) is the account ID of the sender senderRS (S) is the Reed-Solomon address of the sender feeNQT (S) is the fee (in NQT) of the transaction amountNQT (S) is the amount (in NQT) of the transaction transactionIndex (N) is a zero-based index giving the order of the transaction in its block timestamp (N) is the time (in seconds since the genesis block) of the transaction referencedTransactionFullHash (S) is the full hash of a transaction referenced by this one, omitted if no previous transaction is referenced confirmations (N) is the number of transaction confirmations subtype (N) is the transaction subtype (refer to Get Constants for a current list of subtypes) block (S) is the ID of the block containing the transaction blockTimestamp (N) is the timestamp (in seconds since the genesis block) of the block height (N) is the height of the block in the blockchain senderPublicKey (S) is the public key of the sending account for the transaction type (N) is the transaction type (refer to Get Constants for a current list of types) deadline (N) is the deadline (in minutes) for the transaction to be confirmed signature (S) is the digital signature of the transaction recipient (S) is the account number of the recipient, if applicable recipientRS (S) is the Reed-Solomon address of the recipient, if applicable fullHash (S) is the full hash of the signed transaction signatureHash (S) is a SHA-256 hash of the transaction signature approved (B) is a boolean indicating if the transaction is approved (only included when includePhasingResult is true and the transaction is phased) result (S) is a string containing the result of the transaction (only included when includePhasingResult is true and the transaction is phased) executionHeight (N) is the height the transaction was executed (only included when includePhasingResult is true and the transaction is phased) transaction (S) is the transaction ID version (N) is the transaction version number phased (B) is true if the transaction is phased, false otherwise ecBlockId (N) is the economic clustering block ID ecBlockHeight (N) is the economic clustering block height attachment (O) is an object containing any additional data needed for the transaction, if applicable lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: The block , blockTimestamp and confirmations fields are omitted for unconfirmed transactions. Double-spending transactions are not retrieved. Example: Refer to Get Transaction example. Get Transaction Bytes Get the bytecode of a transaction. Request: requestType is getTransactionBytes transaction is a transaction ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: confirmations (N) is the number of transaction confirmations transactionBytes (S) are the bytes contained in the transaction unsignedTransactionBytes (S) are the unsigned bytes contained in the transaction prunableAttachmentJSON (O) is the prunable attachment JSON object, if applicable, because transactionBytes never includes prunable data lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Transaction Bytes example. Parse Transaction Get a transaction object given a (signed or unsigned) transaction bytecode, or re-parse a transaction object. Verify the signature. Request: requestType is parseTransaction transactionBytes is the signed or unsigned bytecode of the transaction (optional) transactionJSON is the transaction object (optional if transactionBytes is included) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for additional fields. verify (B) is true if the signature is verified, false otherwise Example: Refer to Parse Transaction example. Retrieve Pruned Transaction Force retrieval of the prunable data for a given transaction, even if past the configured nxt.maxPrunableLifetime. Request: requestType is retrievePrunedTransaction transaction is transaction ID Response: Refer to Get Transaction for fields. Example: Refer to Retrieve Pruned Transaction example. Send Transaction It broadcasts a transaction to the network without validating it, without re-broadcasting it and without adding it locally as unconfirmed transaction. Specially intended for roaming or light clients to send transactions to remote peers. POST only. Request: requestType is sendTransaction transactionBytes is the bytecode of a signed transaction (optional) transactionJSON is the transaction object (optional if transactionBytes provided) prunableAttachmentJSON is the attachment object embedded in transactionJSON containing a prunable message (required if transactionJSON not provided because transactionBytes never includes prunable data) adminPassword is a string with the admin password (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) fullHash (S) is the full hash of the signed transaction transaction (S) is the transaction ID Example: Refer to Send Transaction example. Sign Transaction Calculates the full hash, signature hash, and transaction ID of an unsigned transaction. Request: requestType is signTransaction unsignedTransactionJSON is the transactionJSON field of the transaction, without a signature subfield unsignedTransactionBytes is the unsignedTransactionBytes field of the transaction (optional, if unsignedTransactionJSON provided) prunableAttachmentJSON is a prunable attachment JSON object, if applicable, because unsignedTransactionBytes never includes prunable data (optional if the transaction has already been broadcast and the prunable message can still be retrieved from the database) secretPhrase is the secret passphrase of the signing account validate is false to skip validation of the transaction bytes being signed (useful on nodes where the full blockchain is not downloaded) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: signatureHash (S) is a SHA-256 hash of the transaction signature, used in escrow transactions verify (B) is true the signature is verified, false if not transactionJSON (O) is the signed transaction JSON object transactionBytes (S) are the signed transaction bytes fullHash (S) is the full hash of the signed transaction prunableAttachmentJSON (O) is the prunable attachment JSON object, if applicable, because transactionBytes never includes prunable data transaction (S) is the transaction ID, derived from the fullHash lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Sign Transaction example.","title":"Transactions"},{"location":"api/transactions/#transaction-operations","text":"","title":"Transaction Operations"},{"location":"api/transactions/#broadcast-transaction","text":"Broadcast a transaction to the network. POST only. Request: requestType is broadcastTransaction transactionBytes is the bytecode of a signed transaction (optional) transactionJSON is the transaction object (optional if transactionBytes provided) prunableAttachmentJSON is the attachment object embedded in transactionJSON containing a prunable message (required if transactionJSON not provided because transactionBytes never includes prunable data) Response: requestProcessingTime (N) is the API request processing time (in millisec) fullHash (S) is the full hash of the signed transaction transaction (S) is the transaction ID Example: Refer to Broadcast Transaction example.","title":"Broadcast Transaction"},{"location":"api/transactions/#calculate-full-hash","text":"Calculate the full hash of a transaction. Request: requestType is calculateFullHash unsignedTransactionJSON is the unsigned transaction JSON object (optional) unsignedTransactionBytes are the unsigned bytes of a transaction (optional if unsignedTransactionJSON is provided) signatureHash is a SHA-256 hash of the transaction signature Response: requestProcessingTime (N) is the API request processing time (in millisec) fullHash (S) is the full hash of the signed transaction Example: Refer to Calculate Full Hash example.","title":"Calculate Full Hash"},{"location":"api/transactions/#get-expected-transactions","text":"Returns the non-phased unconfirmed transactions expected to be included in the next block (only), plus the phased transactions scheduled to finish in that block (whether approved or not). Request: requestType is getExpectedTransactions account is one account ID (optional) account is one account ID (optional) \u22ee requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: expectedTransactions (A) is an array of expected transactions (refer to Get Transaction for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Expected Transactions example.","title":"Get Expected Transactions"},{"location":"api/transactions/#get-referencing-transactions","text":"Gets the transactions referencing a given transaction id. Request: requestType is getReferencingTransactions transaction is one transaction ID firstIndex is a zero-based index to the first block ID to retrieve (optional) lastIndex is a zero-based index to the last block ID to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: transactions (A) is an array of transactions (refer to Get Transaction for details) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Referencing Transactions example.","title":"Get Referencing Transactions"},{"location":"api/transactions/#get-transaction","text":"Get a transaction object given a transaction ID. Request: requestType is getTransaction transaction is the transaction ID (optional) fullHash is the full hash of the transaction (optional if transaction ID is provided) includePhasingResult is true to retrieve execution status of each phased transaction (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: sender (S) is the account ID of the sender senderRS (S) is the Reed-Solomon address of the sender feeNQT (S) is the fee (in NQT) of the transaction amountNQT (S) is the amount (in NQT) of the transaction transactionIndex (N) is a zero-based index giving the order of the transaction in its block timestamp (N) is the time (in seconds since the genesis block) of the transaction referencedTransactionFullHash (S) is the full hash of a transaction referenced by this one, omitted if no previous transaction is referenced confirmations (N) is the number of transaction confirmations subtype (N) is the transaction subtype (refer to Get Constants for a current list of subtypes) block (S) is the ID of the block containing the transaction blockTimestamp (N) is the timestamp (in seconds since the genesis block) of the block height (N) is the height of the block in the blockchain senderPublicKey (S) is the public key of the sending account for the transaction type (N) is the transaction type (refer to Get Constants for a current list of types) deadline (N) is the deadline (in minutes) for the transaction to be confirmed signature (S) is the digital signature of the transaction recipient (S) is the account number of the recipient, if applicable recipientRS (S) is the Reed-Solomon address of the recipient, if applicable fullHash (S) is the full hash of the signed transaction signatureHash (S) is a SHA-256 hash of the transaction signature approved (B) is a boolean indicating if the transaction is approved (only included when includePhasingResult is true and the transaction is phased) result (S) is a string containing the result of the transaction (only included when includePhasingResult is true and the transaction is phased) executionHeight (N) is the height the transaction was executed (only included when includePhasingResult is true and the transaction is phased) transaction (S) is the transaction ID version (N) is the transaction version number phased (B) is true if the transaction is phased, false otherwise ecBlockId (N) is the economic clustering block ID ecBlockHeight (N) is the economic clustering block height attachment (O) is an object containing any additional data needed for the transaction, if applicable lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: The block , blockTimestamp and confirmations fields are omitted for unconfirmed transactions. Double-spending transactions are not retrieved. Example: Refer to Get Transaction example.","title":"Get Transaction"},{"location":"api/transactions/#get-transaction-bytes","text":"Get the bytecode of a transaction. Request: requestType is getTransactionBytes transaction is a transaction ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: confirmations (N) is the number of transaction confirmations transactionBytes (S) are the bytes contained in the transaction unsignedTransactionBytes (S) are the unsigned bytes contained in the transaction prunableAttachmentJSON (O) is the prunable attachment JSON object, if applicable, because transactionBytes never includes prunable data lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Transaction Bytes example.","title":"Get Transaction Bytes"},{"location":"api/transactions/#parse-transaction","text":"Get a transaction object given a (signed or unsigned) transaction bytecode, or re-parse a transaction object. Verify the signature. Request: requestType is parseTransaction transactionBytes is the signed or unsigned bytecode of the transaction (optional) transactionJSON is the transaction object (optional if transactionBytes is included) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: Refer to Get Transaction for additional fields. verify (B) is true if the signature is verified, false otherwise Example: Refer to Parse Transaction example.","title":"Parse Transaction"},{"location":"api/transactions/#retrieve-pruned-transaction","text":"Force retrieval of the prunable data for a given transaction, even if past the configured nxt.maxPrunableLifetime. Request: requestType is retrievePrunedTransaction transaction is transaction ID Response: Refer to Get Transaction for fields. Example: Refer to Retrieve Pruned Transaction example.","title":"Retrieve Pruned Transaction"},{"location":"api/transactions/#send-transaction","text":"It broadcasts a transaction to the network without validating it, without re-broadcasting it and without adding it locally as unconfirmed transaction. Specially intended for roaming or light clients to send transactions to remote peers. POST only. Request: requestType is sendTransaction transactionBytes is the bytecode of a signed transaction (optional) transactionJSON is the transaction object (optional if transactionBytes provided) prunableAttachmentJSON is the attachment object embedded in transactionJSON containing a prunable message (required if transactionJSON not provided because transactionBytes never includes prunable data) adminPassword is a string with the admin password (optional) Response: requestProcessingTime (N) is the API request processing time (in millisec) fullHash (S) is the full hash of the signed transaction transaction (S) is the transaction ID Example: Refer to Send Transaction example.","title":"Send Transaction"},{"location":"api/transactions/#sign-transaction","text":"Calculates the full hash, signature hash, and transaction ID of an unsigned transaction. Request: requestType is signTransaction unsignedTransactionJSON is the transactionJSON field of the transaction, without a signature subfield unsignedTransactionBytes is the unsignedTransactionBytes field of the transaction (optional, if unsignedTransactionJSON provided) prunableAttachmentJSON is a prunable attachment JSON object, if applicable, because unsignedTransactionBytes never includes prunable data (optional if the transaction has already been broadcast and the prunable message can still be retrieved from the database) secretPhrase is the secret passphrase of the signing account validate is false to skip validation of the transaction bytes being signed (useful on nodes where the full blockchain is not downloaded) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: signatureHash (S) is a SHA-256 hash of the transaction signature, used in escrow transactions verify (B) is true the signature is verified, false if not transactionJSON (O) is the signed transaction JSON object transactionBytes (S) are the signed transaction bytes fullHash (S) is the full hash of the signed transaction prunableAttachmentJSON (O) is the prunable attachment JSON object, if applicable, because transactionBytes never includes prunable data transaction (S) is the transaction ID, derived from the fullHash lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Sign Transaction example.","title":"Sign Transaction"},{"location":"api/utilities/","text":"Utilities Decode QR Code Decodes a base64-encoded jpeg to a UTF-8 string. POST only. Request: requestType is decodeQRCode qrCodeBase64 is a base64-encoded jpeg string to be decoded Response qrCodeData (S) is a UTF-8 string containing the decoded data from the base64 string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Decode QR Code example. Detect Mime Type Gets the mime type of uploaded file or data. Request: requestType is detectMimeType data is the data (optional) file is the pathname of a data file to upload (optional if data provided) filename is a filename to associate with data (optional if file uploaded in which case the uploaded filename is always used) isText is false if data is a hex string (optional) Response type (S) is the mime type requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Detect Mime Type example. Encode QR Code Encodes a UTF-8 string to a base64-encoded jpeg. POST only. Request: requestType is encodeQRCode qrCodeData is a UTF-8 text string to be encoded width is the width of the output image (optional) height is the height of the output image (optional) Response qrCodeBase64 (S) is a base64 string encoding a jpeg image of the QR code requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Encode QR Code example. Full Hash To Id Converts a full hash to an ID. Request: requestType is fullHashToId fullHash is the full hash 64-digit (32-byte) hex string Response: stringId (S) is the ID corresponding to the hash, in the form of an decimal string -longId_ (S) is the signed long integer (8-bytes) representation of the ID used internally, returned as a string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Full Hash To Id example. Hash Calculates the hash of a secret for use in phased transactions with voting model 5 ( Vote By Secret ). Request: requestType is hash hashAlgorithm is the hash function used: 2 for SHA256, 3 for SHA3, 5 for SCRYPT, 6 for RIPEMD160, 25 for Keccack25 and 62 for SHA256 followed by RIPEMD160, according to Get Constants secret is a secret phrase in text form or hex string form secretIsText is true if secret is text, false if it is a hex string (optional) Note: secret is converted from a hex string to a byte array, which is what the hash algorithm expects, unless secretIsText is true , in which case secret is first converted from text to a UTF-8 hex string as by Hex Convert . Response: hash (S) is the hash of the secret, in the form of a hex string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Hash example. Hex Convert Converts a text string into a UTF-8 hex string and if the text input is already a hex string, also into text. Request: requestType is hexConvert string is a text string, possibly a hex string Response: binary (S) is the converted UTF-8 hex string text (S) is a text string converted from string if it is a valid UTF-8 hex string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Hex Convert example. Long Convert Converts an ID to the signed long integer representation used internally. Request: requestType is -longConvert_ id is a numerical ID, in decimal form but equivalent to an 8-byte unsigned integer as produced by SHA-256 hashing Response: stringId (S) is the numerical ID -longId_ (S) is the signed long integer (8-bytes) representation of the ID used internally, returned as a string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Long Convert example. RS Convert Get both the Reed-Solomon account address and the account number given an account ID. Request: requestType is rsConvert account is an account ID (either RS address or number) Response: accountRS (S) is the Reed-Solomon address of the account requestProcessingTime (N) is the API request processing time (in millisec) account (S) is the account number Example: Refer to RS Convert example.","title":"Utilities"},{"location":"api/utilities/#utilities","text":"","title":"Utilities"},{"location":"api/utilities/#decode-qr-code","text":"Decodes a base64-encoded jpeg to a UTF-8 string. POST only. Request: requestType is decodeQRCode qrCodeBase64 is a base64-encoded jpeg string to be decoded Response qrCodeData (S) is a UTF-8 string containing the decoded data from the base64 string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Decode QR Code example.","title":"Decode QR Code"},{"location":"api/utilities/#detect-mime-type","text":"Gets the mime type of uploaded file or data. Request: requestType is detectMimeType data is the data (optional) file is the pathname of a data file to upload (optional if data provided) filename is a filename to associate with data (optional if file uploaded in which case the uploaded filename is always used) isText is false if data is a hex string (optional) Response type (S) is the mime type requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Detect Mime Type example.","title":"Detect Mime Type"},{"location":"api/utilities/#encode-qr-code","text":"Encodes a UTF-8 string to a base64-encoded jpeg. POST only. Request: requestType is encodeQRCode qrCodeData is a UTF-8 text string to be encoded width is the width of the output image (optional) height is the height of the output image (optional) Response qrCodeBase64 (S) is a base64 string encoding a jpeg image of the QR code requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Encode QR Code example.","title":"Encode QR Code"},{"location":"api/utilities/#full-hash-to-id","text":"Converts a full hash to an ID. Request: requestType is fullHashToId fullHash is the full hash 64-digit (32-byte) hex string Response: stringId (S) is the ID corresponding to the hash, in the form of an decimal string -longId_ (S) is the signed long integer (8-bytes) representation of the ID used internally, returned as a string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Full Hash To Id example.","title":"Full Hash To Id"},{"location":"api/utilities/#hash","text":"Calculates the hash of a secret for use in phased transactions with voting model 5 ( Vote By Secret ). Request: requestType is hash hashAlgorithm is the hash function used: 2 for SHA256, 3 for SHA3, 5 for SCRYPT, 6 for RIPEMD160, 25 for Keccack25 and 62 for SHA256 followed by RIPEMD160, according to Get Constants secret is a secret phrase in text form or hex string form secretIsText is true if secret is text, false if it is a hex string (optional) Note: secret is converted from a hex string to a byte array, which is what the hash algorithm expects, unless secretIsText is true , in which case secret is first converted from text to a UTF-8 hex string as by Hex Convert . Response: hash (S) is the hash of the secret, in the form of a hex string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Hash example.","title":"Hash"},{"location":"api/utilities/#hex-convert","text":"Converts a text string into a UTF-8 hex string and if the text input is already a hex string, also into text. Request: requestType is hexConvert string is a text string, possibly a hex string Response: binary (S) is the converted UTF-8 hex string text (S) is a text string converted from string if it is a valid UTF-8 hex string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Hex Convert example.","title":"Hex Convert"},{"location":"api/utilities/#long-convert","text":"Converts an ID to the signed long integer representation used internally. Request: requestType is -longConvert_ id is a numerical ID, in decimal form but equivalent to an 8-byte unsigned integer as produced by SHA-256 hashing Response: stringId (S) is the numerical ID -longId_ (S) is the signed long integer (8-bytes) representation of the ID used internally, returned as a string requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Long Convert example.","title":"Long Convert"},{"location":"api/utilities/#rs-convert","text":"Get both the Reed-Solomon account address and the account number given an account ID. Request: requestType is rsConvert account is an account ID (either RS address or number) Response: accountRS (S) is the Reed-Solomon address of the account requestProcessingTime (N) is the API request processing time (in millisec) account (S) is the account number Example: Refer to RS Convert example.","title":"RS Convert"},{"location":"api/voting/","text":"Voting System Operations Cast Vote Cast a vote on a poll. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is castVote poll is the poll ID vote00 is an integer within the allowed range to vote for option (answer) 0 (optional if minNumberOfOptions met, default is -128 ) vote01 is an integer within the allowed range to vote for option (answer) 1 (optional if minNumberOfOptions met, default is -128 ) vote02 is an integer within the allowed range to vote for option (answer) 2 (optional if minNumberOfOptions met, default is -128 ) Note: The allowed vote values are integers between minRangeValue and maxRangeValue , inclusive. This range, along with the minimum and maximum number of options that can and must be voted on are specified when the poll is created. Refer to Create Poll . Response: Refer to Create Transaction Response . Example: Refer to Cast Vote example. Create Poll Create a new poll. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is createPoll name is the name of the poll description is the description of the poll, or the question to be answered finishHeight is the block height when the poll is completed votingModel is 0 for -one Vote Per Account_, 1 for Vote By BLX Balance , 2 for Vote By Asset Balance and 3 for Vote By Currency Balance minNumberOfOptions is the minimum number of options (answers) that must be voted for maxNumberOfOptions is the maximum number of options (answers) that can be voted for minRangeValue is the minimum integer value for an option (answer) (>= 0 ) maxRangeValue is the maximum integer value for an option (answer) (>= minRangeValue ) minBalance is the minimum balance (in NQT or QNT) required for voting (optional, default 0) minBalanceModel is (required if minBalance > 0 , must match votingModel when votingModel > 0 ) 1 for BLX balance 2 for an asset balance 3 for a currency balance holding is the asset or currency ID (required if minBalanceModel > 1 ) option00 is the name of option (answer) 0 option01 is the name of option (answer) 1 (optional) option02 is the name of option (answer) 2 (optional) Note: When a balance affects the poll result, the result depends only on the balance (including pending outgoing phased transfers) computed just prior to the finish height. Response: Refer to Create Transaction Response . The transaction ID is also the poll ID. Example: Refer to Create Poll example. Get Poll Get the details of a poll. Request: requestType is getPoll poll is the poll ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: poll (S) is the poll ID account (S) is the account number of the poll creator accountRS (S) is the Reed-Solomon address of the account name (S) is the name of the poll description (S) is the description of the poll, or the question to be answered finishHeight (N) is the block height when the poll is completed finished (B) is true if the poll is completed, false otherwise votingModel (N) is 0 for -one Vote Per Account_, 1 for Vote By BLX Balance , 2 for Vote By Asset Balance and 3 for Vote By Currency Balance minNumberOfOptions (N) is the minimum number of options (answers) that must be voted for maxNumberOfOptions (N) is the maximum number of options (answers) that can be voted for minBalance (S) is the minimum balance (in NQT or QNT) required for voting minBalanceModel (N) is 1 for BLX balance, 2 for an asset balance, 3 for a currency balance when minBalance > 0 holding is the asset or currency ID when minBalanceModel > 1 options (A) is the array of options (answers) minRangeValue (N) is the minimum integer value for an option (answer) maxRangeValue (N) is the maximum integer value for an option (answer) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Poll example. Get Poll Result Get the result of a poll. Request: requestType is getPollResult poll is the poll ID votingModel (optional, default null) holding (optional, default null) minBalance (optional, default 0 ) minBalanceModel (required if minBalance > 0 , must match votingModel when votingModel > 0 ) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: The votingModel , holding , minBalance and minBalanceModel parameters are optional and default to the original values specified when the poll was created (refer to Create Poll ). The original values can only be overridden while the votes are still stored in the database, until 1441 blocks after the poll is completed. If votingModel is specified, holding , minBalance and minBalanceModel or the defaults specified above apply, otherwise they are ignored. Response: poll (S) is the poll ID votingModel (N) is the votingModel used to calculate results (refer to Note above) minBalanceModel (N) is the minBalanceModel used to calculate results (refer to Note above) minBalance (S) is the minBalance used to calculate results (refer to Note above) holding (S) is the asset or currency ID if the voting model uses an asset or currency balance to determine weight , if applicable (refer to Note above) decimals (N) is the number decimal places used by the asset or currency, if applicable finished (B) is true if the poll is complete, false otherwise options (A) is the array of options (answers) of the poll results (A) is an array of result objects with the following fields for each result: weight (S) is the sum of the weight of each account that voted for the corresponding option (answer); an account's weight is 1 if the voting model is 0 , otherwise it is the NQT, asset QNT or currency QNT balance of the account if the voting model is 1 , 2 or 3 respectively; however, the weight is 0 if minBalance is not met result (S) is the sum over each account that voted for the corresponding option (answer) of: the product of the account's weight and the rangeValue selected when the vote was cast. lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Poll Result example. Get Poll Vote Get a poll vote given a poll ID and an account ID. Request: requestType is getPollVote poll is the poll ID account is the account ID includeWeights is true to calculate and return the weight assigned to each vote (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: votes (A) is an array of votes, the range values (S) corresponding to each option (answer) with empty strings for non-votes voter (S) is the account number of the voter voterRS (S) is the Reed-Solomon address of the voter transaction (S) is the transaction ID of the vote weight (S) is the weight assigned to each vote (applies if includeWeights is true ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: Votes are deleted from the database 1441 blocks after the poll is finished. Only aggregate results are kept (refer to Get Poll Result ). Example: Refer to Get Poll Vote example. Get Poll Votes Get all votes on a poll in reverse chronological order. Request: requestType is getPollVotes poll is the poll ID includeWeights is true to calculate and return the weight assigned to each vote (optional) firstIndex is a zero-based index to the first vote to retrieve (optional) lastIndex is a zero-based index to the last vote to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: votes (A) is an array of vote objects (refer to Get Poll Vote for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: Votes are deleted from the database 1441 blocks after the poll is finished. Only aggregate results are kept (refer to Get Poll Result ). Example: Refer to Get Poll Votes example. Get Polls Get poll details in reverse creation order. Request: requestType is getPolls account is a creation account ID filter (optional) timestamp is the earliest poll (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first poll to retrieve (optional) lastIndex is a zero-based index to the last poll to retrieve (optional) includeFinished is true to include completed polls (optional) finishedOnly is true to exclude not yet executed, phased transactions (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: polls (A) is an array of polls (refer to Get Poll for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Polls example. Search Polls Search for poll details given a name/description query string. Request: requestType is searchPolls query is a full text query on the poll fields name (S) and description (S) in the standard Lucene syntax (optional) firstIndex is a zero-based index to the first poll to retrieve (optional) lastIndex is a zero-based index to the last poll to retrieve (optional) includeFinished is true to include completed polls (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: polls (A) is an array of polls (refer to Get Poll for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Polls example.","title":"Voting"},{"location":"api/voting/#voting-system-operations","text":"","title":"Voting System Operations"},{"location":"api/voting/#cast-vote","text":"Cast a vote on a poll. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is castVote poll is the poll ID vote00 is an integer within the allowed range to vote for option (answer) 0 (optional if minNumberOfOptions met, default is -128 ) vote01 is an integer within the allowed range to vote for option (answer) 1 (optional if minNumberOfOptions met, default is -128 ) vote02 is an integer within the allowed range to vote for option (answer) 2 (optional if minNumberOfOptions met, default is -128 ) Note: The allowed vote values are integers between minRangeValue and maxRangeValue , inclusive. This range, along with the minimum and maximum number of options that can and must be voted on are specified when the poll is created. Refer to Create Poll . Response: Refer to Create Transaction Response . Example: Refer to Cast Vote example.","title":"Cast Vote"},{"location":"api/voting/#create-poll","text":"Create a new poll. POST only. Request: Refer to Create Transaction Request for common parameters. requestType is createPoll name is the name of the poll description is the description of the poll, or the question to be answered finishHeight is the block height when the poll is completed votingModel is 0 for -one Vote Per Account_, 1 for Vote By BLX Balance , 2 for Vote By Asset Balance and 3 for Vote By Currency Balance minNumberOfOptions is the minimum number of options (answers) that must be voted for maxNumberOfOptions is the maximum number of options (answers) that can be voted for minRangeValue is the minimum integer value for an option (answer) (>= 0 ) maxRangeValue is the maximum integer value for an option (answer) (>= minRangeValue ) minBalance is the minimum balance (in NQT or QNT) required for voting (optional, default 0) minBalanceModel is (required if minBalance > 0 , must match votingModel when votingModel > 0 ) 1 for BLX balance 2 for an asset balance 3 for a currency balance holding is the asset or currency ID (required if minBalanceModel > 1 ) option00 is the name of option (answer) 0 option01 is the name of option (answer) 1 (optional) option02 is the name of option (answer) 2 (optional) Note: When a balance affects the poll result, the result depends only on the balance (including pending outgoing phased transfers) computed just prior to the finish height. Response: Refer to Create Transaction Response . The transaction ID is also the poll ID. Example: Refer to Create Poll example.","title":"Create Poll"},{"location":"api/voting/#get-poll","text":"Get the details of a poll. Request: requestType is getPoll poll is the poll ID requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: poll (S) is the poll ID account (S) is the account number of the poll creator accountRS (S) is the Reed-Solomon address of the account name (S) is the name of the poll description (S) is the description of the poll, or the question to be answered finishHeight (N) is the block height when the poll is completed finished (B) is true if the poll is completed, false otherwise votingModel (N) is 0 for -one Vote Per Account_, 1 for Vote By BLX Balance , 2 for Vote By Asset Balance and 3 for Vote By Currency Balance minNumberOfOptions (N) is the minimum number of options (answers) that must be voted for maxNumberOfOptions (N) is the maximum number of options (answers) that can be voted for minBalance (S) is the minimum balance (in NQT or QNT) required for voting minBalanceModel (N) is 1 for BLX balance, 2 for an asset balance, 3 for a currency balance when minBalance > 0 holding is the asset or currency ID when minBalanceModel > 1 options (A) is the array of options (answers) minRangeValue (N) is the minimum integer value for an option (answer) maxRangeValue (N) is the maximum integer value for an option (answer) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Poll example.","title":"Get Poll"},{"location":"api/voting/#get-poll-result","text":"Get the result of a poll. Request: requestType is getPollResult poll is the poll ID votingModel (optional, default null) holding (optional, default null) minBalance (optional, default 0 ) minBalanceModel (required if minBalance > 0 , must match votingModel when votingModel > 0 ) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Note: The votingModel , holding , minBalance and minBalanceModel parameters are optional and default to the original values specified when the poll was created (refer to Create Poll ). The original values can only be overridden while the votes are still stored in the database, until 1441 blocks after the poll is completed. If votingModel is specified, holding , minBalance and minBalanceModel or the defaults specified above apply, otherwise they are ignored. Response: poll (S) is the poll ID votingModel (N) is the votingModel used to calculate results (refer to Note above) minBalanceModel (N) is the minBalanceModel used to calculate results (refer to Note above) minBalance (S) is the minBalance used to calculate results (refer to Note above) holding (S) is the asset or currency ID if the voting model uses an asset or currency balance to determine weight , if applicable (refer to Note above) decimals (N) is the number decimal places used by the asset or currency, if applicable finished (B) is true if the poll is complete, false otherwise options (A) is the array of options (answers) of the poll results (A) is an array of result objects with the following fields for each result: weight (S) is the sum of the weight of each account that voted for the corresponding option (answer); an account's weight is 1 if the voting model is 0 , otherwise it is the NQT, asset QNT or currency QNT balance of the account if the voting model is 1 , 2 or 3 respectively; however, the weight is 0 if minBalance is not met result (S) is the sum over each account that voted for the corresponding option (answer) of: the product of the account's weight and the rangeValue selected when the vote was cast. lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Poll Result example.","title":"Get Poll Result"},{"location":"api/voting/#get-poll-vote","text":"Get a poll vote given a poll ID and an account ID. Request: requestType is getPollVote poll is the poll ID account is the account ID includeWeights is true to calculate and return the weight assigned to each vote (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: votes (A) is an array of votes, the range values (S) corresponding to each option (answer) with empty strings for non-votes voter (S) is the account number of the voter voterRS (S) is the Reed-Solomon address of the voter transaction (S) is the transaction ID of the vote weight (S) is the weight assigned to each vote (applies if includeWeights is true ) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: Votes are deleted from the database 1441 blocks after the poll is finished. Only aggregate results are kept (refer to Get Poll Result ). Example: Refer to Get Poll Vote example.","title":"Get Poll Vote"},{"location":"api/voting/#get-poll-votes","text":"Get all votes on a poll in reverse chronological order. Request: requestType is getPollVotes poll is the poll ID includeWeights is true to calculate and return the weight assigned to each vote (optional) firstIndex is a zero-based index to the first vote to retrieve (optional) lastIndex is a zero-based index to the last vote to retrieve (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: votes (A) is an array of vote objects (refer to Get Poll Vote for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Note: Votes are deleted from the database 1441 blocks after the poll is finished. Only aggregate results are kept (refer to Get Poll Result ). Example: Refer to Get Poll Votes example.","title":"Get Poll Votes"},{"location":"api/voting/#get-polls","text":"Get poll details in reverse creation order. Request: requestType is getPolls account is a creation account ID filter (optional) timestamp is the earliest poll (in seconds since the genesis block) to retrieve (optional) firstIndex is a zero-based index to the first poll to retrieve (optional) lastIndex is a zero-based index to the last poll to retrieve (optional) includeFinished is true to include completed polls (optional) finishedOnly is true to exclude not yet executed, phased transactions (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: polls (A) is an array of polls (refer to Get Poll for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Get Polls example.","title":"Get Polls"},{"location":"api/voting/#search-polls","text":"Search for poll details given a name/description query string. Request: requestType is searchPolls query is a full text query on the poll fields name (S) and description (S) in the standard Lucene syntax (optional) firstIndex is a zero-based index to the first poll to retrieve (optional) lastIndex is a zero-based index to the last poll to retrieve (optional) includeFinished is true to include completed polls (optional) requireBlock is the block ID of a block that must be present in the blockchain during execution (optional) requireLastBlock is the block ID of a block that must be last in the blockchain during execution (optional) Response: polls (A) is an array of polls (refer to Get Poll for details) lastBlock (S) is the last block ID on the blockchain (applies if requireBlock is provided but not requireLastBlock ) requestProcessingTime (N) is the API request processing time (in millisec) Example: Refer to Search Polls example.","title":"Search Polls"},{"location":"learn_more/","text":"","title":"What is Blue0x?"},{"location":"node_rewards/","text":"","title":"How-To"},{"location":"setup/","text":"","title":"Setup"}]}